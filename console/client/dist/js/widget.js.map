{"version":3,"file":"js/widget.js","mappings":"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","sources":["webpack:///./js/com/genb/base/components/RadioButtonsGroup.js","webpack:///./js/com/genb/base/components/ToggleButton.js","webpack:///./js/com/genb/base/controller/ObservableController.js","webpack:///./js/com/genb/base/controller/UIView.js","webpack:///./js/com/genb/base/service/EventEmitter.js","webpack:///./js/com/genb/base/service/FormService.js","webpack:///./js/com/genb/base/utils/BaseUtils.js","webpack:///./js/com/genb/base/utils/HTMLUtils.js","webpack:///./js/com/genb/base/utils/StringUtils.js","webpack:///./js/com/quickhellou/base/model/ApplicationSettings.js","webpack:///./js/com/quickhellou/base/model/ComSessionStatus.js","webpack:///./js/com/quickhellou/base/model/UserType.js","webpack:///./js/com/quickhellou/base/services/ApiService.js","webpack:///./js/com/quickhellou/base/services/WebSocketService.js","webpack:///./js/com/quickhellou/base/utils/QhUtils.js","webpack:///./js/com/quickhellou/widget/BadgeView.js","webpack:///./js/com/quickhellou/widget/ContactInformationView.js","webpack:///./js/com/quickhellou/widget/ScheduleView.js","webpack:///./js/com/quickhellou/widget/Scheduler.js","webpack:///./js/com/quickhellou/widget/WidgetExtensionView.js","webpack:///./js/com/quickhellou/widget/WidgetService.js","webpack:///../../node_modules/js-cookie/src/js.cookie.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./js/widget.js"],"sourcesContent":["import { UIView } from '../controller/UIView'\r\nimport { ToggleButton } from './ToggleButton'\r\n\r\n/**\r\n * Radio buttons group.\r\n *\r\n * @export\r\n * @class RadioButtonsGroup\r\n * @extends {UIView}\r\n */\r\nexport class RadioButtonsGroup extends UIView {\r\n  \r\n  /**\r\n   * Creates an instance of RadioButtonsGroup.\r\n   *\r\n   *\r\n   * @memberof RadioButtonsGroup\r\n  */\r\n  constructor() {\r\n      super()\r\n      this.elements = []\r\n  }\r\n\r\n  /**\r\n   * Adds radio button.\r\n   *\r\n   * @param {ToggleButton} button\r\n   * @memberof RadioButtonsGroup\r\n   */\r\n  addRadioButton(button) {\r\n    this.elements.push(button)\r\n    button.element.addEventListener('click', () => {\r\n      this.disableAll()\r\n      button.enable()\r\n    }, false)\r\n  }\r\n\r\n  /**\r\n   * Disables all radio buttons.\r\n   *\r\n   * @memberof RadioButtonsGroup\r\n   */\r\n  disableAll() {\r\n    this.elements.forEach(element => {\r\n      element.disable()\r\n    })\r\n  }\r\n}","import { UIView } from '../controller/UIView'\r\n\r\n/**\r\n * Toggle button.\r\n *\r\n * @export\r\n * @class ToggleButton\r\n * @extends {UIView}\r\n */\r\nexport class ToggleButton extends UIView {\r\n  \r\n  /**\r\n   * Creates an instance of ToggleButton.\r\n   *\r\n   *\r\n   * @memberof ToggleButton\r\n  */\r\n  constructor(element) {\r\n      super()\r\n      this.element = element\r\n      this.enabled = false\r\n      this.element.addEventListener('click', () => {\r\n        this.toggle()\r\n      }, false)\r\n  }\r\n\r\n  /**\r\n   * Enables button.\r\n   *\r\n   * @memberof ToggleButton\r\n   */\r\n  enable() {\r\n    this.enabled = true\r\n    this.element.classList.add('js-enabled')  \r\n  }\r\n\r\n  /**\r\n   * Disable button.\r\n   *\r\n   * @memberof ToggleButton\r\n   */\r\n  disable() {\r\n    this.enabled = false\r\n    this.element.classList.remove('js-enabled', 'enabled')\r\n  }\r\n\r\n  /**\r\n   * Toggles button.\r\n   *\r\n   * @memberof ToggleButton\r\n   */\r\n  toggle() {\r\n    if (this.enabled) {\r\n      this.disable()\r\n    } else {\r\n      this.enable()\r\n    }\r\n  }\r\n}","import { EventEmitter } from '../service/EventEmitter'\r\n\r\n/**\r\n * Event emitter controller.\r\n *\r\n * @export\r\n * @class ObservableController\r\n */\r\nexport class ObservableController {\r\n  /**\r\n   * Creates an instance of ObservableController.\r\n   *\r\n   * @memberof ObservableController\r\n   */\r\n  constructor() {\r\n    this.observable = new EventEmitter()\r\n  }\r\n\r\n  /**\r\n   * Adds emitter listener.\r\n   *\r\n   * @param {string} label\r\n   * @param {*} callback\r\n   * @memberof ObservableController\r\n   */\r\n  addListener(label, callback) {\r\n    this.observable.addListener(label, callback)\r\n  }\r\n\r\n  /**\r\n   * Removes emitter listener.\r\n   *\r\n   * @param {string} label\r\n   * @param {*} callback\r\n   * @memberof ObservableController\r\n   */\r\n  removeListener(label, callback) {\r\n    this.observable.removeListener(label, callback)\r\n  }\r\n\r\n  /**\r\n   * Emits an event.\r\n   *\r\n   * @param {string} label\r\n   * @param {*} args\r\n   * @memberof ObservableController\r\n   */\r\n  emit(label, ...args) {\r\n    this.observable.emit(label, ...args)\r\n  }\r\n}\r\n","import { ObservableController } from './ObservableController'\r\nimport { HTMLUtils } from '../utils/HTMLUtils'\r\n\r\n/**\r\n * UI view facade.\r\n *\r\n * @export\r\n * @class UIViewController\r\n * @extends {ObservableController}\r\n */\r\nexport class UIView extends ObservableController {\r\n  /**\r\n   * Gets DOM element by a CSS selector.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @returns\r\n   * @memberof UIViewController\r\n   */\r\n  uiGet(cssSelector) {\r\n    return HTMLUtils.get(cssSelector)\r\n  }\r\n\r\n  /**\r\n   * Checks if DOM element selected by given CSS selector exists.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @returns\r\n   * @memberof UIViewController\r\n   */\r\n  uiExists(cssSelector) {\r\n    return HTMLUtils.exists(cssSelector)\r\n  }\r\n\r\n  /**\r\n   * Returns DOM elements list selected by given CSS selector as Array object.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @returns {Array<HTMLElement>}\r\n   * @memberof UIView\r\n   */\r\n  uiArray(cssSelector) {\r\n    return HTMLUtils.array(cssSelector)\r\n  }\r\n\r\n  /**\r\n   * Removes all listeners by replacing it with a clone.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @memberof UIView\r\n   */\r\n  removeListeners(cssSelector) {\r\n    var element = this.uiGet(cssSelector)\r\n    var newElement = element.cloneNode(true)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  /**\r\n   * Removes all element listeners by replacing it with a clone.\r\n   *\r\n   * @param {HTMLElement} element\r\n   * @memberof UIView\r\n   */\r\n  removeElementListeners(element) {\r\n    var newElement = element.cloneNode(true)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  /**\r\n   * Removes all listeners from list of HTMLElements by replacing it with a clone.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @memberof UIView\r\n   */\r\n  removeListListeners(cssSelector) {\r\n    this.uiArray(cssSelector).forEach(element => {\r\n      this.removeElementListeners(element)\r\n    })\r\n  }\r\n}\r\n","/**\r\n * Event emitter.\r\n *\r\n * @export\r\n * @class EventEmitter\r\n */\r\nexport class EventEmitter {\r\n  /**\r\n   * Creates an instance of EventEmitter.\r\n   *\r\n   * @memberof EventEmitter\r\n   */\r\n  constructor() {\r\n    this.listeners = new Map()\r\n  }\r\n\r\n  /**\r\n   * Ads an event listener.\r\n   *\r\n   * @param {String} label\r\n   * @param {*} callback\r\n   * @memberof EventEmitter\r\n   */\r\n  addListener(label, callback) {\r\n    this.listeners.has(label) || this.listeners.set(label, [])\r\n    this.listeners.get(label).push(callback)\r\n  }\r\n\r\n  /**\r\n   * Removes an event listener.\r\n   *\r\n   * @param {String} label\r\n   * @param {*} callback\r\n   * @returns\r\n   * @memberof EventEmitter\r\n   */\r\n  removeListener(label, callback) {\r\n    let listeners = this.listeners.get(label),\r\n      index\r\n\r\n    if (listeners && listeners.length) {\r\n      index = listeners.reduce((i, listener, index) => {\r\n        return this.isFunction(listener) && listener === callback\r\n          ? (i = index)\r\n          : i\r\n      }, -1)\r\n\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n        this.listeners.set(label, listeners)\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Emits an event.\r\n   *\r\n   * @param {String} label\r\n   * @param {*} args\r\n   * @returns\r\n   * @memberof EventEmitter\r\n   */\r\n  emit(label, ...args) {\r\n    let listeners = this.listeners.get(label)\r\n\r\n    if (listeners && listeners.length) {\r\n      listeners.forEach((listener) => {\r\n        listener(...args)\r\n      })\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Checks if object is function.\r\n   *\r\n   * @param {object} obj\r\n   * @returns\r\n   * @memberof EventEmitter\r\n   */\r\n  isFunction(obj) {\r\n    return typeof obj === 'function' || false\r\n  }\r\n}\r\n","import { EventEmitter } from './EventEmitter'\r\n\r\nimport Cookie from 'js-cookie'\r\n\r\n/**\r\n * Form service class.\r\n *\r\n * @export\r\n * @class FormService\r\n */\r\nexport class FormService extends EventEmitter {\r\n  /**\r\n   * Gets data as XMLHttpRequest call.\r\n   *\r\n   * @param {string} serviceName\r\n   * @memberof FormService\r\n   */\r\n  getAsXMLHttpRequest(serviceName) {\r\n    return this.sendAsXMLHttpRequest('GET', [], serviceName)\r\n  }\r\n\r\n  /**\r\n   * Posts data as XMLHttpRequest call.\r\n   *\r\n   * @param {*} fieldSet\r\n   * @param {string} serviceName\r\n   * @memberof FormService\r\n   */\r\n  postAsXMLHttpRequest(fieldSet, serviceName) {\r\n    return this.sendAsXMLHttpRequest('POST', fieldSet, serviceName)\r\n  }\r\n\r\n  /**\r\n   * Sends data as XMLHttpRequest call.\r\n   *\r\n   * @param {string} method\r\n   * @param {array<object>} fieldSet\r\n   * @param {string} url\r\n   * @memberof FormService\r\n   */\r\n  sendAsXMLHttpRequest(method, fieldSet, url) {\r\n    let formData = new FormData()\r\n    for (const [key, value] of Object.entries(fieldSet)) {\r\n      formData.append(key, value)\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      let request = new XMLHttpRequest()\r\n      request.open(method, url, true)\r\n      request.addEventListener('load', () => {\r\n        if ([200, 201].includes(request.status)) {\r\n          resolve(request.responseText)\r\n        }\r\n        reject(request.responseText)\r\n      })\r\n      var csrftoken = Cookie.get('csrftoken')\r\n      if (csrftoken !== 'undefined') {\r\n        request.setRequestHeader('X-CSRFToken', csrftoken)\r\n      }\r\n      request.send(formData)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends serialized parameters as form url encoded type.\r\n   *\r\n   * @param {*} fieldSet\r\n   * @param {string} serviceName\r\n   * @returns\r\n   * @memberof FormService\r\n   */\r\n  sendAsXMLHttpFormEncodedRequest(fieldSet, serviceName) {\r\n    let data = ''\r\n    fieldSet.forEach((field) => {\r\n      data = `${data}${field.name}=${field.value}&`\r\n    })\r\n    return new Promise((resolve) => {\r\n      let request = new XMLHttpRequest()\r\n      request.open('POST', serviceName, true)\r\n      request.addEventListener('load', () => {\r\n        resolve(request.responseText)\r\n      })\r\n      request.setRequestHeader(\r\n        'Content-Type',\r\n        'application/x-www-form-urlencoded'\r\n      )\r\n      request.send(data)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends data as HTML form.\r\n   *\r\n   * @param {*} fieldSet\r\n   * @param {string} action\r\n   * @memberof FormService\r\n   */\r\n  sendAsForm(fieldSet, action) {\r\n    let html = `<form id=\"__form__\" action='${action}' method=\"POST\" enctype=\"multipart/form-data\">`\r\n    fieldSet.forEach((field) => {\r\n      html += `<input type=\"hidden\" name=\"${field.name}\" value='${field.value}'>`\r\n    })\r\n    html += `</form>`\r\n    document.body.insertAdjacentHTML('beforeend', html)\r\n    const form = document.getElementById('__form__')\r\n    form.submit()\r\n  }\r\n}\r\n","export class BaseUtils {\r\n  /**\r\n   * Checks if an object is defined.\r\n   *\r\n   * @static\r\n   * @param {String} s\r\n   * @returns\r\n   * @memberof BaseUtils\r\n   */\r\n  static isObjectDefined(s) {\r\n    try {\r\n      return typeof s !== 'undefined' && s !== null\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  static isPage(urlName) {\r\n    const meta = document.querySelector(\"meta[property='emd:page']\")\r\n    if (BaseUtils.isObjectDefined(meta)) {\r\n      return meta.attributes.content.value === urlName\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Returns a hostname.\r\n   *\r\n   * @readonly\r\n   * @static\r\n   * @memberof BaseUtils\r\n   */\r\n  static get hostname() {\r\n    return window.location.hostname\r\n  }\r\n\r\n  log(message) {\r\n    console.log(message)\r\n  }\r\n}\r\n","import { BaseUtils } from './BaseUtils'\r\n\r\n/**\r\n * HTML utilities.\r\n *\r\n * @export\r\n * @class HTMLUtils\r\n */\r\nexport class HTMLUtils {\r\n  /**\r\n   * Gets an element by a selector.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static get(selector) {\r\n    const element = document.querySelector(selector)\r\n    if (!BaseUtils.isObjectDefined(element)) {\r\n      console.warn(`HTMLUtils::get Element \"${selector}\" is not defined.`)\r\n    }\r\n    return element\r\n  }\r\n\r\n  /**\r\n   * Checks if DOM element selected by given CSS selector exists.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static exists(cssSelector) {\r\n    const element = document.querySelector(cssSelector)\r\n    return BaseUtils.isObjectDefined(element)\r\n  }\r\n\r\n  /**\r\n   * Gets a default form element.\r\n   *\r\n   * @memberof HTMLUtils\r\n   */\r\n  static getForm() {\r\n    return HTMLUtils.get('form')\r\n  }\r\n\r\n  /**\r\n   * Gets DOM element value by name attribute.\r\n   *\r\n   * @static\r\n   * @param {string} name\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static getValueByName(name) {\r\n    return this.get(`*[name=\"${name}\"]`).value\r\n  }\r\n\r\n  /**\r\n   * Gets DOM input element value by name attribute.\r\n   *\r\n   * @static\r\n   * @param {string} name\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static getInputByName(name) {\r\n    return this.get(`input[name=\"${name}\"]`)\r\n  }\r\n\r\n  static getInputByClassName(name) {\r\n    return this.get(`input.${name}`)\r\n  }\r\n\r\n  static getSelectByName(name) {\r\n    return this.get(`select[name=\"${name}\"]`)\r\n  }\r\n\r\n  static getSelectByClassName(name) {\r\n    return this.get(`select.${name}`)\r\n  }\r\n\r\n  static getInputValueByName(name) {\r\n    return this.getInputByName(name).value\r\n  }\r\n\r\n  static getCheckboxValueByName(name) {\r\n    return this.getInputByName(name).checked ? 'true' : 'false'\r\n  }\r\n\r\n  static setInputValueByName(name, value) {\r\n    const inputElement = this.getInputByName(name)\r\n    if (BaseUtils.isObjectDefined(inputElement)) {\r\n      inputElement.value = value\r\n    } else {\r\n      console.warn(`setInputValueByName:: Element '${name}' is not defined.`)\r\n    }\r\n  }\r\n\r\n  static getSelectValueByName(name) {\r\n    return this.getSelectByName(name).value\r\n  }\r\n\r\n  static getSelectTextByName(name) {\r\n    return this.getSelectByName(name).selectedOptions[0].text\r\n  }\r\n\r\n  static setSelectValueByName(name, value) {\r\n    const selectElement = this.getSelectByName(name)\r\n    if (BaseUtils.isObjectDefined(selectElement)) {\r\n      selectElement.value = value\r\n    } else {\r\n      console.warn(`setSelectValueByName:: Element '${name}' is not defined.`)\r\n    }\r\n  }\r\n\r\n  static getInputValueByClassName(name) {\r\n    return this.getInputByClassName(name).value\r\n  }\r\n\r\n  static getSelectValueByClassName(name) {\r\n    return this.getSelectByClassName(name).value\r\n  }\r\n\r\n  /**\r\n   * Lists DOM elements.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static list(selector) {\r\n    const elementList = document.querySelectorAll(selector)\r\n    if (!BaseUtils.isObjectDefined(elementList)) {\r\n      console.warn(`Elements \"${selector}\" are not defined.`)\r\n    }\r\n    return elementList\r\n  }\r\n\r\n  /**\r\n   * Returns DOM elements list as Array object.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static array(selector) {\r\n    return Array.from(HTMLUtils.list(selector))\r\n  }\r\n\r\n  static firstToHTMLElement(elements) {\r\n    if (elements.length > 0) {\r\n      return elements[0]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activates DOM element created from selector by adding CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @memberof HTMLUtils\r\n   */\r\n  static activate(selector) {\r\n    const element = HTMLUtils.get(selector)\r\n    HTMLUtils.activateElement(element)\r\n  }\r\n\r\n  /**\r\n   * Activates DOM element by adding CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {HTMLElement} element\r\n   * @memberof HTMLUtils\r\n   */\r\n  static activateElement(element) {\r\n    element.classList.add('js-active')\r\n  }\r\n\r\n  /**\r\n   * Deactivates DOM element created from selector by removing CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @memberof HTMLUtils\r\n   */\r\n  static deactivate(selector) {\r\n    const element = HTMLUtils.get(selector)\r\n    HTMLUtils.deactivateElement(element)\r\n  }\r\n\r\n  /**\r\n   * Deactivates DOM element by removing CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {HTMLElement} element\r\n   * @memberof HTMLUtils\r\n   */\r\n  static deactivateElement(element) {\r\n    element.classList.remove('js-active')\r\n  }\r\n\r\n  /**\r\n   * Copies string to clipboard.\r\n   *\r\n   * @static\r\n   * @param {string} s\r\n   * @memberof HTMLUtils\r\n   */\r\n  static copyToClipboard(s) {\r\n    function listener(e) {\r\n      e.clipboardData.setData('text/html', s)\r\n      e.clipboardData.setData('text/plain', s)\r\n      e.preventDefault()\r\n    }\r\n    document.addEventListener('copy', listener)\r\n    document.execCommand('copy')\r\n    document.removeEventListener('copy', listener)\r\n  }\r\n\r\n  /**\r\n   * Decodes HTML text.\r\n   *\r\n   * @static\r\n   * @param {string} html\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static decodeHtml(html) {\r\n    var txt = document.createElement('textarea')\r\n    txt.innerHTML = html\r\n    return txt.value\r\n  }\r\n\r\n  /**\r\n   * Removes all event listeners from an html element by a class name.\r\n   *\r\n   * @param {string} className the class name\r\n   */\r\n  static removeAllEventListeners(className) {\r\n    const element = document.querySelector(className)\r\n    const newElement = element.cloneNode(element)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  /**\r\n   * Removes all event listeners from an html element by a class name.\r\n   *\r\n   * @param {string} className the class name\r\n   */\r\n   static removeAllEventListenersFromElement(element) {\r\n    const newElement = element.cloneNode(element)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  static setCookie(name, value, days = 7, path = '/') {\r\n    const expires = new Date(Date.now() + days * 864e5).toUTCString()\r\n    document.cookie =\r\n      name +\r\n      '=' +\r\n      encodeURIComponent(value) +\r\n      '; expires=' +\r\n      expires +\r\n      '; path=' +\r\n      path\r\n  }\r\n\r\n  static getCookie(name) {\r\n    return document.cookie.split('; ').reduce((r, v) => {\r\n      const parts = v.split('=')\r\n      return parts[0] === name ? decodeURIComponent(parts[1]) : r\r\n    }, '')\r\n  }\r\n\r\n  static deleteCookie(name, path) {\r\n    this.setCookie(name, '', -1, path)\r\n  }\r\n}\r\n","/**\r\n * String utilities\r\n * \r\n * @export\r\n * @class StringUtils\r\n */\r\nexport class StringUtils {\r\n  \r\n  static EMPTY = \"\";\r\n  static URL_TARGET_BLANK = \"_blank\";\r\n  static URL_TARGET_SELF = \"_self\";\r\n    \r\n  /**\r\n   * Checks if a string is defined.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isDefined(s) {\r\n    return typeof s === \"string\";\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is empty.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns \r\n   * @memberof StringUtils\r\n   */\r\n  static isEmpty(s) {\r\n    return typeof s === \"string\" && s.length === 0;\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is not empty.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isNotEmpty(s) {\r\n    return !this.isEmpty(s);\r\n  }\r\n\r\n  /**\r\n   * Checks if two strings are equal.\r\n   * \r\n   * @static\r\n   * @param {string} string1 \r\n   * @param {string} string2 \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static equals(string1, string2) {\r\n    return string1 === string2; \r\n  }\r\n\r\n  /**\r\n   * Gets an unique identifier.\r\n   * \r\n   * @static\r\n   * @returns {string} \r\n   * @memberof StringUtils\r\n   */\r\n  static getUID() {\r\n    var timestamp = new Date().getTime();  \r\n    return timestamp.toString();\r\n  }\r\n\r\n  /**\r\n   * Checks if e-mail string is valid.\r\n   * \r\n   * @static\r\n   * @param {string} email \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isEmailValid(email) {\r\n    return /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(email);\r\n  }\r\n\r\n  /**\r\n   * Checks if IP address is valid.\r\n   *\r\n   * @static\r\n   * @param {*} ipAddress\r\n   * @returns\r\n   * @memberof StringUtils\r\n   */\r\n  static isIpAddressValid(ipAddress) {\r\n    return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ipAddress);\r\n  }\r\n  \r\n  /**\r\n   * Checks if URL string is valid.\r\n   * \r\n   * @static\r\n   * @param {string} url \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isUrlValid(url) {\r\n    return /((http|ftp|https):\\/\\/)?[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/.test(url);\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is a number.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isNumber(s) {\r\n    return /^-?\\d*[\\.]?\\d+$/.test(s);\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is in a currency format.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isCurrency(s) {\r\n    return /(?=.)^\\$?(([1-9][0-9]{0,2}(,[0-9]{3})*)|[0-9]+)?(\\.[0-9]{1,2})?$/.test(s);\r\n  }\r\n\r\n  /**\r\n   * Extracts Form Builder field type string.\r\n   * \r\n   * @static\r\n   * @param {string} className \r\n   * @returns {string} \r\n   * @memberof StringUtils\r\n   */\r\n  static extractFormBuilderFormFieldType(className) {\r\n    return className.split(\" \")[0].split(\"-\")[1];\r\n  }\r\n\r\n  /**\r\n   * Extracts file name from path.\r\n   * \r\n   * @static\r\n   * @param {string} path \r\n   * @returns {string} \r\n   * @memberof StringUtils\r\n   */\r\n  static extractFileNameFromPath(path) {\r\n    return path.replace(/^.*[\\\\\\/]/, '');\r\n  }\r\n\r\n  /**\r\n   * Capitalize first letter of a string.\r\n   *\r\n   * @static\r\n   * @param {string} s\r\n   * @returns {string}\r\n   * @memberof StringUtils\r\n   */\r\n  static capitalize(i) {\r\n    return i.replace(/(^| )(\\w)/g, s => s.toUpperCase());\r\n  }\r\n\r\n  /**\r\n   * Converts string to boolean.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static toBoolean(s) {\r\n    return /(true|True|1)/g.test(s);\r\n  }\r\n  \r\n  /**\r\n   * Strips string from quotes.\r\n   *\r\n   * @static\r\n   * @param {*} expression\r\n   * @returns\r\n   * @memberof StringUtils\r\n   */\r\n  static stripFromQuotes(expression) {\r\n    let matches = /(['\"]?)(.*)\\1/.exec(expression); \r\n    if (matches.length > 2) {\r\n      return matches[2];\r\n    }\r\n    return StringUtils.EMPTY;\r\n  }\r\n\r\n  static hashCode(s) {\r\n    return s.split('').reduce((prevHash, currVal) =>\r\n      ((prevHash << 5) - prevHash) + currVal.charCodeAt(0), 0);\r\n  }\r\n}","/**\r\n * Application settings.\r\n *\r\n * @export\r\n * @class ApplicationSettings\r\n */\r\nexport class ApplicationSettings {\r\n  /**\r\n   * Creates an instance of ApplicationSettings.\r\n   *\r\n   * @param {objString} obj\r\n   * @memberof ApplicationSettings\r\n   */\r\n  constructor(objString) {\r\n    this.objs = JSON.parse(objString)\r\n    this.videoAppUrl = this.objs.video_app_url\r\n    this.consoleAppUrl = this.objs.console_app_url\r\n    this.webSocketServiceUrl = this.objs.ws_service_url\r\n    this.adminEmailAddress = this.objs.admin_email_address\r\n  }\r\n\r\n  /**\r\n   * Gets value from property name.\r\n   *\r\n   * @param {string} propertyName\r\n   * @returns\r\n   * @memberof ApplicationSettings\r\n   */\r\n  getValue(propertyName) {\r\n    return this.objs.filter((obj) => obj.property === propertyName)[0].value\r\n  }\r\n}\r\n","export class ComSessionStatus {}\r\nComSessionStatus.STATUS_PENDING = 1\r\nComSessionStatus.STATUS_ENQUEUED = 2\r\nComSessionStatus.STATUS_MISSED = 3\r\nComSessionStatus.STATUS_CANCELLED = 4\r\nComSessionStatus.STATUS_REJECTED = 5\r\nComSessionStatus.STATUS_ACCEPTED = 6\r\nComSessionStatus.STATUS_COMPLETED = 7\r\n","export class UserType {}\r\nUserType.ADMIN = 'admin'\r\nUserType.GUEST = 'guest'\r\n","import { FormService } from '../../../genb/base/service/FormService'\r\n\r\nimport { ComSessionStatus } from '../model/ComSessionStatus'\r\n\r\n/**\r\n * Application REST API facade.\r\n * Points to the '{console_app_url}/api/' end.\r\n *\r\n * @export\r\n * @class ApiService\r\n * @extends {FormService}\r\n */\r\nexport class ApiService extends FormService {\r\n  constructor(baseUrl) {\r\n    super()\r\n    this.baseUrl = baseUrl\r\n  }\r\n\r\n  /**\r\n   * Gets current user.\r\n   *\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getCurrentUser() {\r\n    return this.getJson(`${this.baseUrl}/api/users/current/`)\r\n  }\r\n\r\n  /**\r\n   * Gets application settings\r\n   *\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getSettings() {\r\n    return this.getJson(`${this.baseUrl}/api/settings/`)\r\n  }\r\n\r\n  /**\r\n   * Gets user by id.\r\n   *\r\n   * @param {string} userId\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getUserById(userId) {\r\n    return this.getJson(`${this.baseUrl}/api/users/${userId}/`)\r\n  }\r\n\r\n  /**\r\n   * Gets widget by id.\r\n   *\r\n   * @param {string} widgetId\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getWidgetById(widgetId) {\r\n    return this.getJson(`${this.baseUrl}/api/widgets/${widgetId}/`)\r\n  }\r\n\r\n  /**\r\n   * Gets communication record by id.\r\n   *\r\n   * @param {string} communicationId\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getCommunicationRecord(communicationId) {\r\n    return this.getJson(\r\n      `${this.baseUrl}/api/communications/${communicationId}/`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets Json data from XMLHttpRequest request.\r\n   *\r\n   * @param {string} actionName\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getJson(actionName) {\r\n    return this.getAsXMLHttpRequest(`${actionName}?format=json`)\r\n  }\r\n\r\n  /**\r\n   * Creates call record.\r\n   *\r\n   * @param {string} callerName\r\n   * @param {string} widgetUuid\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  createCall(userWSId, userId, widgetUuid) {\r\n    const fieldSet = {\r\n      caller_name: userWSId,\r\n      caller_id: userId,\r\n      widget_uuid: widgetUuid,\r\n    }\r\n    return this.postAsXMLHttpRequest(\r\n      fieldSet,\r\n      `${this.baseUrl}/api/communications/`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {*} id the communication session ID \r\n   * @param {number} rate the session rate\r\n   * @returns \r\n   */\r\n  rateComSession(id, rate) {\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/comSessions/rate/${id}/${rate}`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Cancels call record.\r\n   *\r\n   * @param {string} callerName\r\n   * @param {string} widgetUuid\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  cancelCall(id) {\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/communications/cancel/${id}/`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets UUID from string.\r\n   *\r\n   * @param {string} str\r\n   * @memberof ApiService\r\n   */\r\n  getUuid(str) {\r\n    // TODO: make it as POST\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/comSessions/room-uuid/${str}`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as accepted.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsAccepted(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_ACCEPTED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as rejected.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsRejected(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_REJECTED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as cancelled.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsCancelled(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_CANCELLED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as completed.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsCompleted(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_COMPLETED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as enqueued.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsEnqueued(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_ENQUEUED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status.\r\n   *\r\n   * @param {string} id\r\n   * @param {number} status\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionStatus(id, status) {\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/comSessions/status/${id}/${status}`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets pending sessions.\r\n   *\r\n   * @memberof ApiService\r\n   */\r\n  getPendingSessions() {\r\n    return this.getAsXMLHttpRequest(`${this.baseUrl}/api/comSessions/pending/1`)\r\n  }\r\n}\r\n","import { FormService } from '../../../genb/base/service/FormService'\r\nimport { UserType } from '../model/UserType'\r\n\r\n/**\r\n * Handles WebSocket connection.\r\n * Points to the go collider server.\r\n *\r\n * @export\r\n * @class WebSocketService\r\n * @extends {FormService}\r\n */\r\n\r\nexport class WebSocketService extends FormService {\r\n  /**\r\n   * Creates an instance of WebSocketService.\r\n   *\r\n   * @param {string} serviceUrl\r\n   * @memberof WebSocketService\r\n   */\r\n  constructor(serviceUrl) {\r\n    super()\r\n\r\n    this.url = serviceUrl\r\n    this.isOpen = false\r\n\r\n    this.openWebSocketConnection()\r\n  }\r\n\r\n  /**\r\n   * Opens server connection.\r\n   *\r\n   * @returns\r\n   * @memberof WebSocketService\r\n   */\r\n  openWebSocketConnection() {\r\n    return new Promise((resolve) => {\r\n      this.websocket = new WebSocket(this.url)\r\n      this.websocket.onopen = () => {\r\n         if (this.websocket.readyState === WebSocket.OPEN) {\r\n          this.isOpen = true\r\n          this.attachWebSocketEventHandlers()\r\n          resolve()\r\n        }\r\n      }\r\n      this.websocket.onerror = (event) => {\r\n        if (event.currentTarget.readyState === 3) {\r\n          this.emit('connection_failure')\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Attaches server event handlers.\r\n   *\r\n   * @memberof WebSocketService\r\n   */\r\n  attachWebSocketEventHandlers() {\r\n    this.websocket.onmessage = (event) => {\r\n      this.handleMessageResponse(event.data)\r\n    }\r\n    this.websocket.onclose = () => {\r\n      this.isOpen = false\r\n    }\r\n    this.websocket.onerror = (e) => {\r\n      console.log('websocket error', e)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles server response message.\r\n   *\r\n   * @param {object} response\r\n   * @memberof WebSocketService\r\n   */\r\n  handleMessageResponse(response) {\r\n    if (response === '') {\r\n      return\r\n    }\r\n\r\n    const responseJson = JSON.parse(response)\r\n    if (responseJson.error !== '') {\r\n      this.emit('error', responseJson.error)\r\n      return\r\n    }\r\n    const message = responseJson.msg\r\n    if (message !== '') {\r\n      const messageJson = JSON.parse(responseJson.msg)\r\n      switch (messageJson.type) {\r\n        case 'response':\r\n          this.handleNamedResponse(messageJson.body)\r\n          break\r\n        case 'list-clients':\r\n          this.emit('listUsers', messageJson.body)\r\n          break\r\n        case 'send':\r\n          this.handleNamedResponse(messageJson.body)\r\n          break\r\n        default:\r\n          console.log('Response type not found.')\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles named response.\r\n   *\r\n   * @param {object} responseJson\r\n   * @memberof WebSocketService\r\n   */\r\n  handleNamedResponse(response) {\r\n    console.log('response', response)\r\n    if (response === '') {\r\n      return\r\n    }\r\n\r\n    const responseJson =\r\n      typeof response === 'string' ? JSON.parse(response) : response\r\n\r\n    switch (responseJson.name) {\r\n      case 'register':\r\n        this.emit('register', responseJson.status)\r\n        break\r\n      case WebSocketService.REQUEST_CALL:\r\n        this.emit(\r\n          'callRequest',\r\n          responseJson.user,\r\n          responseJson.userId,\r\n          responseJson.widget\r\n        )\r\n        break\r\n      case WebSocketService.CANCEL_CALL:\r\n        this.emit('callCancel', responseJson.recordId)\r\n        break\r\n      case WebSocketService.ACCEPT_CALL_REQUEST:\r\n        this.emit('callAccepted', responseJson.uuid)\r\n        break\r\n      case WebSocketService.REJECT_CALL_REQUEST:\r\n        this.emit('callRejected')\r\n        break\r\n      case WebSocketService.SEND_COMMUNICATION_RECORD:\r\n        this.emit('communicationRecord', responseJson.record)\r\n        break\r\n      default:\r\n        console.log('No named response found.')\r\n        break\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers the user in the multiple rooms identified by records ids.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} userType\r\n   * @param {array<object>} records\r\n   * @memberof WebSocketService\r\n   */\r\n  registerList(userId, userType, records) {\r\n    records.forEach((record) => {\r\n      this.register(userId, userType, record.id)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Registers the admin user in multiple rooms identified by\r\n   * installed widgets ids.\r\n   *\r\n   * @param {string} userId\r\n   * @param {array<object>} widgets\r\n   * @memberof WebSocketService\r\n   */\r\n  registerOperatorsList(userId, widgets) {\r\n    this.registerList(userId, UserType.ADMIN, widgets)\r\n  }\r\n\r\n  /**\r\n   * Deregisters the user from multiple rooms identified by records ids.\r\n   *\r\n   * @param {string} userId\r\n   * @param {array<object>} records\r\n   * @memberof WebSocketService\r\n   */\r\n  deregisterList(userId, records) {\r\n    records.forEach((record) => {\r\n      this.deregister(userId, record.id)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Registers the user in the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} userType\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  register(userId, userType, roomId) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'register',\r\n      clientid: userId,\r\n      clienttype: userType,\r\n      roomid: roomId,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Registers the admin user in the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  registerOperator(userId, roomId) {\r\n    this.register(userId, UserType.ADMIN, roomId)\r\n  }\r\n\r\n  /**\r\n   * Registers the guest user in the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  registerGuest(userId, roomId) {\r\n    this.register(userId, UserType.GUEST, roomId)\r\n  }\r\n\r\n  /**\r\n   * Deregisters the user from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  deregister(userId, roomId) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'deregister',\r\n      clientid: userId,\r\n      roomid: roomId,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends a message to the WebSocket server room.\r\n   *\r\n   * @param {object} user\r\n   * @param {string} message\r\n   * @memberof WebSocketService\r\n   */\r\n  send(user, message) {\r\n    this.sendWebSocketMessage({\r\n      cmd: WebSocketService.SEND,\r\n      clientid: user.uuid,\r\n      roomid: user.client_board_id,\r\n      msg: message,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends a message to the other user.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} otherUserId\r\n   * @param {string} roomId\r\n   * @param {string} message\r\n   * @memberof WebSocketService\r\n   */\r\n  sendToOther(userId, otherUserId, roomId, message) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'send-to-other',\r\n      clientid: userId,\r\n      roomid: roomId,\r\n      otherid: otherUserId,\r\n      msg: message,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Lists all clients from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} userType\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  listClients(userId, userType, roomId) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'list-clients',\r\n      clientid: userId,\r\n      clienttype: userType,\r\n      roomid: roomId,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Lists all guests from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  listGuests(userId, roomId) {\r\n    this.listClients(userId, UserType.GUEST, roomId)\r\n  }\r\n\r\n  /**\r\n   * Lists all admins from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  listAdmins(userId, roomId) {\r\n    this.listClients(userId, UserType.ADMIN, roomId)\r\n  }\r\n\r\n  /**\r\n   * Requests a call with admin user.\r\n   *\r\n   * @param {string} userWSId the user ID in the WebService\r\n   * @param {string} userId the user ID\r\n   * @param {string} adminId the operator ID\r\n   * @param {string} roomId the room ID\r\n   * @memberof WebSocketService\r\n   */\r\n  requestCall(userWSId, userId, adminId, roomId) {\r\n    this.sendToOther(\r\n      userId,\r\n      adminId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.REQUEST_CALL,\r\n          user: userWSId,\r\n          userId: userId,\r\n          widget: roomId,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Sends a cancel call request. Sent by customer.\r\n   *\r\n   * @param {string} recordId the call record id\r\n   * @param {string} userId the user id\r\n   * @param {string} adminId the admin id\r\n   * @param {string} roomId the room id\r\n   * @memberof WebSocketService\r\n   */\r\n  cancelCall(recordId, userId, adminId, roomId) {\r\n    console.log('cancel call', recordId, userId, adminId, roomId)\r\n    // cancelCall(userWSId, roomId, recordId) {\r\n    /** this.sendWebSocketMessage({\r\n      cmd: WebSocketService.SEND,\r\n      clientid: userWSId,\r\n      clienttype: UserType.GUEST,\r\n      roomid: roomId,\r\n      msg: JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.CANCEL_CALL,\r\n          user: userWSId,\r\n          widget: roomId,\r\n          record: recordId,\r\n        },\r\n      }),\r\n    })*/\r\n    this.sendToOther(\r\n      userId,\r\n      adminId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.CANCEL_CALL,\r\n          recordId: recordId\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Accepts call request.\r\n   *\r\n   * @param {string} calleeId\r\n   * @param {string} callerUserId\r\n   * @param {string} roomId\r\n   * @param {string} comSessionId\r\n   * @memberof WebSocketService\r\n   */\r\n  acceptCallRequest(calleeId, callerUserId, roomId, comSessionId) {\r\n    this.sendToOther(\r\n      calleeId,\r\n      callerUserId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.ACCEPT_CALL_REQUEST,\r\n          uuid: comSessionId,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Rejects call request.\r\n   *\r\n   * @param {string} calleeId\r\n   * @param {string} callerUserId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  rejectCallRequest(calleeId, callerUserId, roomId) {\r\n    this.sendToOther(\r\n      calleeId,\r\n      callerUserId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.REJECT_CALL_REQUEST,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Passes communication session record to remote client.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} otherUserWSId\r\n   * @param {string} roomId\r\n   * @param {object} record\r\n   * @memberof WebSocketService\r\n   */\r\n  passCommunicationRecord(userId, otherUserWSId, roomId, record) {\r\n    this.sendToOther(\r\n      userId,\r\n      otherUserWSId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.SEND_COMMUNICATION_RECORD,\r\n          record: record,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Sends the message to the WebSocket service.\r\n   *\r\n   * @param {object} message the message\r\n   * @param {boolean} persistant\r\n   * @memberof WebSocketService\r\n   */\r\n  async sendWebSocketMessage(message, persistant = true) {\r\n    if (!this.isOpen) {\r\n      await this.openWebSocketConnection()\r\n    }\r\n\r\n    message.roomtype = 'client_board'\r\n    message.persistant = String(persistant)\r\n    this.websocket.send(JSON.stringify(message))\r\n  }\r\n}\r\n\r\nWebSocketService.SEND = 'send'\r\nWebSocketService.REQUEST_CALL = 'request-call'\r\nWebSocketService.CANCEL_CALL = 'cancel-call'\r\nWebSocketService.ACCEPT_CALL_REQUEST = 'accept-call-request'\r\nWebSocketService.REJECT_CALL_REQUEST = 'reject-call-request'\r\nWebSocketService.SEND_COMMUNICATION_RECORD = 'send-communication-record'\r\n","import { BaseUtils } from '../../../genb/base/utils/BaseUtils'\r\nimport { StringUtils } from '../../../genb/base/utils/StringUtils'\r\n\r\n/**\r\n * EngagedMD service utils.\r\n *\r\n * @export\r\n * @class QhUtils\r\n */\r\nexport class QhUtils {\r\n  /**\r\n   * Checks for given page.\r\n   *\r\n   * @static\r\n   * @param {string} urlName\r\n   * @returns\r\n   * @memberof QhUtils\r\n   */\r\n  static isPage(urlName) {\r\n    const meta = document.querySelector(\"meta[property='qh:view']\")\r\n    if (BaseUtils.isObjectDefined(meta)) {\r\n      return StringUtils.equals(meta.attributes.content.value, urlName)\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Return EMD property value.\r\n   *\r\n   * @static\r\n   * @param {string} propertyName\r\n   * @returns {string} property value\r\n   * @memberof QhUtils\r\n   */\r\n  static getQhProperty(propertyName) {\r\n    const meta = document.querySelector(`meta[property='qh:${propertyName}']`)\r\n    if (BaseUtils.isObjectDefined(meta)) {\r\n      return meta.attributes.content.value\r\n    }\r\n    console.warn(`QhUtils::getQhProperty No \"${propertyName}\" property found.`)\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Returns parsed quickhellou property value.\r\n   *\r\n   * @static\r\n   * @param {string} propertyName\r\n   * @returns {object} parsed property value object\r\n   * @memberof QhUtils\r\n   */\r\n  static getQhPropertyObject(propertyName) {\r\n    return JSON.parse(QhUtils.getQhProperty(propertyName))\r\n  }\r\n\r\n  /**\r\n   * Is application in test mode.\r\n   *\r\n   * @memberof QhUtils\r\n   */\r\n  static inTestMode() {\r\n    return StringUtils.equals(QhUtils.getQhProperty('developerMode'), 'test')\r\n  }\r\n\r\n  /**\r\n   * Creates key for websocket communication that contains user id. \r\n   * \r\n   * @param {string} userId \r\n   * @returns \r\n   */\r\n  static createUserId(userId) {\r\n    return `${this.appUuid}${userId}`\r\n  }\r\n\r\n  /**\r\n   * Extracts id from user key generated for websocket identification.\r\n   * \r\n   * @param {string} key \r\n   * @returns \r\n   */\r\n  static extractUserId(key) {\r\n    return key.split(this.appUuid)[1]\r\n  }\r\n\r\n  /**\r\n   * Randomly generated application UUID.\r\n   *\r\n   * @readonly\r\n   * @static\r\n   * @memberof QhUtils\r\n   */\r\n  static get appUuid() {\r\n    return 'faf8c9f7-99f7-4b9a-8ab8-c1ec416737e7'\r\n  }\r\n}\r\n","import { UIView } from '../../genb/base/controller/UIView'\r\nimport { HTMLUtils } from '../../genb/base/utils/HTMLUtils'\r\n\r\n/**\r\n * Widget badge view.\r\n *\r\n * @export\r\n * @class BadgeView\r\n * @extends {UIView}\r\n */\r\nexport class BadgeView extends UIView {\r\n  /**\r\n   * Creates an instance of BadgeView.\r\n   *\r\n   * @param {*} service\r\n   *\r\n   * @memberof BadgeView\r\n   */\r\n  constructor(service) {\r\n    super()\r\n    this.service = service\r\n    this.element = document.getElementById('qh_w_frame')\r\n    this.extDispatcher = window.parent.document.QHDispatcher\r\n  }\r\n\r\n  /**\r\n   * Initializes the view.\r\n   *\r\n   * @memberof BadgeView\r\n   */\r\n  async init() {\r\n    this.service.addListener('listUsers', (list) => {\r\n      this.onListUsers(!!list.length)\r\n    })\r\n    this.service.addListener('admin', (e) => {\r\n      this.onAdmin(e)\r\n    })\r\n\r\n    const widgetButtonElement = this.uiGet('.widget_base')\r\n    widgetButtonElement.addEventListener('click', () => {\r\n      this.emit('collapse')\r\n      this.extDispatcher.dispatchEvent(\r\n        new CustomEvent('expand_schedule', { detail: { source: 'badge' } })\r\n      )\r\n    })\r\n\r\n    this.service.addListener('callRejected', () => {\r\n      this.onCallRejected()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Handles user register response.\r\n   *\r\n   * @param {string} e\r\n   * @memberof BadgeView\r\n   */\r\n  onUserRegister(e) {\r\n    if (e === 'ok') {\r\n      this.webSocketService.listAdmins(this.user.uuid, this.widget.uuid)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles user list refresh response.\r\n   *\r\n   * @param {boolean} anyOperatorActive\r\n   * \r\n   * @memberof BadgeView\r\n   */\r\n  onListUsers(anyOperatorActive) {\r\n    this.toggleBackgroundElementActiveState(anyOperatorActive)\r\n    if (!anyOperatorActive) {\r\n      this.toggleUserIconElements(false)\r\n    }\r\n    this.toggleTopState(!anyOperatorActive)\r\n  }\r\n\r\n  /**\r\n   * On admin user initialization.\r\n   * @param {*} adminUser \r\n   * \r\n   * @memberof BadgeView\r\n   */\r\n  onAdmin(adminUser) {\r\n    if (adminUser.thumbnail !== '') {\r\n      this.setIcon(adminUser.thumbnail)\r\n      this.toggleUserIconElements(true)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles call rejection.\r\n   * \r\n   * @memberof BadgeView\r\n   */\r\n  onCallRejected() {\r\n    this.toggleTopState(true)\r\n  }\r\n\r\n  toggleUserIconElements(force) {\r\n    const userCircleElement = document.querySelector('.widget-outlook__alert')\r\n    userCircleElement.classList.toggle('js-active', force)\r\n  }\r\n\r\n  toggleBackgroundElementActiveState(force) {\r\n    const backgroundCircleElement = document.querySelector(\r\n      '.widget-outlook__background-circle'\r\n    )\r\n    backgroundCircleElement.classList.toggle('js-active', force)\r\n  }\r\n\r\n  /**\r\n   * Sets active admin user thumbnail icon.\r\n   *\r\n   * @param {string} thumbnailPath\r\n   *\r\n   * @memberof BadgeView\r\n   */\r\n  setIcon(thumbnailPath) {\r\n    const adminThumbnailElement = this.uiGet('.widget-outlook__admin-thumbnail')\r\n    adminThumbnailElement.style.backgroundImage = `url(${this.service.consoleAppUrl}/media/${thumbnailPath})`\r\n    this.emit('setThumbnail', thumbnailPath)\r\n    this.extDispatcher.dispatchEvent(\r\n      new CustomEvent('setThumbnail', {\r\n        detail: {\r\n          'thumbnailPath': thumbnailPath,\r\n          source: 'badge',\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Toggles vertical position state.\r\n   *\r\n   * @memberof WidgetBottomBarView\r\n   */\r\n  toggleTopState(force) {\r\n    return\r\n    if (HTMLUtils.getCookie('qh_bottom_bar') === 'false') {\r\n      force = false\r\n    }\r\n    \r\n    this.isTopState = force\r\n    if (force) {\r\n      this.element.classList.add('js-top')\r\n    } else {\r\n      this.element.classList.remove('js-top')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets call request icon.\r\n   *\r\n   * @memberof BadgeView\r\n   */\r\n  setCallRequestIcon() {\r\n    const widgetIconElement = this.uiGet('.widget-outlook__icon img')\r\n    widgetIconElement.src = `${this.service.consoleAppUrl}/static/images/call-request.svg`\r\n  }\r\n\r\n  /**\r\n   * Sets call accepted icon.\r\n   *\r\n   * @memberof BadgeView\r\n   */\r\n  setCallAcceptedIcon() {\r\n    const widgetIconElement = this.uiGet('.widget-outlook__icon img')\r\n    widgetIconElement.src = `${this.service.consoleAppUrl}/static/images/call-accepted.svg`\r\n  }\r\n}\r\n","import { UIView } from '../../genb/base/controller/UIView'\r\nimport { HTMLUtils } from '../../genb/base/utils/HTMLUtils'\r\n\r\n/**\r\n * Widget schedule meeting view.\r\n *\r\n * @export\r\n * @class ContactInformationView\r\n * @extends {UIView}\r\n */\r\nexport class ContactInformationView extends UIView {\r\n  /**\r\n   * Creates an instance of ContactInformationView.\r\n   *\r\n   * @param { WidgetService } service\r\n   *\r\n   * @memberof ContactInformationView\r\n   */\r\n  constructor(service) {\r\n    super()\r\n    this.service = service\r\n    this.isExpanded = false\r\n    this.element = document.querySelector('.contact-information')\r\n    this.extDispatcher = window.parent.document.QHDispatcher\r\n  }\r\n\r\n  /**\r\n   * Initializes the view.\r\n   *\r\n   * @memberof ContactInformationView\r\n   */\r\n  async init() {\r\n    // nothing yet\r\n  }\r\n\r\n  /**\r\n   * Initializes the view.\r\n   *\r\n   * @memberof ContactInformationView\r\n   */\r\n  async load(datetime) {\r\n    await this.loadContactForm(datetime)\r\n    this.initUI()\r\n  }\r\n\r\n  initUI() {\r\n    const closeButton = document.querySelector(\r\n      '.widget-closer--contact-information'\r\n    )\r\n    closeButton.addEventListener('click', () => {\r\n      this.extDispatcher.dispatchEvent(new CustomEvent('collapse', {detail: {'source': 'contact_information'},}))\r\n    })\r\n\r\n    const backButtons = document.querySelectorAll('.contact-information__button--back')\r\n    backButtons.forEach(backButton => {\r\n      backButton.addEventListener('click', () => {\r\n        this.extDispatcher.dispatchEvent(new CustomEvent('expand_schedule', {detail: {'source': 'contact_information'},}))\r\n      })\r\n    })\r\n\r\n    const sendButtonClassName = '.contact-information__button--submit'\r\n    if (this.uiExists(sendButtonClassName)) {\r\n      HTMLUtils.removeAllEventListeners(sendButtonClassName)\r\n      const submitButtonElement = this.uiGet(sendButtonClassName)\r\n      submitButtonElement.addEventListener('click', () => {\r\n        this.sendContactForm().then(() => {\r\n          this.initUI()\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads contact form view.\r\n   *\r\n   * @param {string} datetime\r\n   * @returns\r\n   */\r\n  async loadContactForm(datetime) {\r\n    return new Promise((resolve, reject) => {\r\n      const fieldSet = {\r\n        datetime: datetime,\r\n      }\r\n\r\n      this.service\r\n        .getContactForm(fieldSet)\r\n        .then((html) => {\r\n          document.querySelector('.contact-information').innerHTML = html\r\n          resolve()\r\n        })\r\n        .catch((reason) => {\r\n          reject(reason)\r\n        })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends contact form view.\r\n   *\r\n   * @param {string} datetime\r\n   * @returns\r\n   */\r\n    async sendContactForm() {\r\n      const formElement = document.querySelector('.contact-information__form')\r\n      return new Promise((resolve, reject) => {\r\n        const fieldSet = {\r\n          datetime: formElement.querySelector('input[name=datetime]').value,\r\n          name: formElement.querySelector('input[name=name]').value,\r\n          email_address: formElement.querySelector('input[name=email_address]').value,\r\n          phone_number: formElement.querySelector('input[name=phone_number]').value,\r\n          message: formElement.querySelector('textarea[name=message]').value,\r\n        }\r\n  \r\n        this.service\r\n          .sendContactForm(fieldSet)\r\n          .then((html) => {\r\n            document.querySelector('.contact-information').innerHTML = html\r\n            resolve()\r\n          })\r\n          .catch((reason) => {\r\n            reject(reason)\r\n          })\r\n      })\r\n    }\r\n}\r\n","import { UIView } from '../../genb/base/controller/UIView'\r\nimport { Scheduler } from './Scheduler'\r\n\r\n/**\r\n * Widget schedule meeting view.\r\n *\r\n * @export\r\n * @class ScheduleView\r\n * @extends {UIView}\r\n */\r\nexport class ScheduleView extends UIView {\r\n  /**\r\n   * Creates an instance of ScheduleView.\r\n   *\r\n   * @param { WidgetService } service\r\n   *\r\n   * @memberof ScheduleView\r\n   */\r\n  constructor(service) {\r\n    super()\r\n    this.service = service\r\n    this.isExpanded = false\r\n    this.element = document.querySelector('.widget--schedule')\r\n    this.extDispatcher = window.parent.document.QHDispatcher\r\n    this.scheduler = new Scheduler(this.service)\r\n  }\r\n\r\n  /**\r\n   * Initializes the view.\r\n   *\r\n   * @memberof ScheduleView\r\n   */\r\n  async init() {\r\n    const closeButton = document.querySelector('.qh_widget-closer')\r\n    closeButton.addEventListener('click', () => {\r\n      this.extDispatcher.dispatchEvent(\r\n        new CustomEvent('collapse', {\r\n          detail: {\r\n            'source': 'schedule',\r\n          },\r\n        })\r\n      )\r\n\r\n    })\r\n\r\n    const submitButton = document.querySelector(\r\n      '.widget-extension__button--send-schedule'\r\n    )\r\n    submitButton.addEventListener('click', () => {\r\n      let datetime = ''\r\n      const selectedScheduleTimeElement = document.querySelector('.scheduler__time.js-enabled')\r\n      if (!!selectedScheduleTimeElement) {\r\n        datetime = document.querySelector('.scheduler__time.js-enabled')\r\n        .dataset.time\r\n      }\r\n      if (!selectedScheduleTimeElement) {\r\n        return\r\n      }\r\n      \r\n      this.extDispatcher.dispatchEvent(\r\n        new CustomEvent('expand_contact', {\r\n          detail: {\r\n            'source': 'schedule',\r\n            'datetime': datetime\r\n          },\r\n        })\r\n      )\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Toggles the view.\r\n   *\r\n   * @memberof ScheduleView\r\n   */\r\n  toggleView() {\r\n    if (this.isExpanded) {\r\n      this.collapseView()\r\n    } else {\r\n      this.expandView()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expands the view.\r\n   *\r\n   * @memberof ScheduleView\r\n   */\r\n  expandView() {\r\n    this.isExpanded = true\r\n    this.element.classList.add('js-expanded')\r\n    this.scheduler.init()\r\n  }\r\n\r\n  /**\r\n   * Collapses the view.\r\n   *\r\n   * @memberof ScheduleView\r\n   */\r\n  collapseView() {\r\n    this.isExpanded = false\r\n    this.element.classList.remove('js-expanded')\r\n  }\r\n}\r\n","import { UIView } from '../../genb/base/controller/UIView'\r\nimport { ToggleButton } from '../../genb/base/components/ToggleButton'\r\nimport { RadioButtonsGroup } from '../../genb/base/components/RadioButtonsGroup'\r\n\r\n/**\r\n * Widget scheduler.\r\n *\r\n * @export\r\n * @class ScheduleView\r\n * @extends {UIView}\r\n */\r\nexport class Scheduler extends UIView {\r\n  /**\r\n   * Creates an instance of Scheduler.\r\n   * \r\n   * @param { WidgetService } service\r\n   *\r\n   * @memberof Scheduler\r\n   */\r\n  constructor(service) {\r\n      super()\r\n      this.service = service\r\n      this.element = document.querySelector('.widget--schedule__scheduler')\r\n\r\n      this.currentPage = 0\r\n  }\r\n\r\n  /**\r\n   * Initializes the scheduler.\r\n   *\r\n   * @memberof Scheduler\r\n  */\r\n  async init() {\r\n    await this.loadCalendar()\r\n    this.pages = document.querySelectorAll('.scheduler__page').length\r\n    const nextPageButton = document.querySelector('.scheduler__pages-nav-button--next')\r\n    nextPageButton.addEventListener('click', () => {\r\n      if (this.currentPage < this.pages-1) {\r\n        this.moveToPage(++this.currentPage)\r\n      }\r\n    })\r\n    const prevPageButton = document.querySelector('.scheduler__pages-nav-button--prev')\r\n    prevPageButton.addEventListener('click', () => {\r\n      if (this.currentPage > 0) {\r\n        this.moveToPage(--this.currentPage)\r\n      }\r\n    })\r\n    this.updatePageNavigation()\r\n    this.initDatetimeFields()\r\n  }\r\n  \r\n  moveToPage(page) {\r\n    const pagesElement = document.querySelector('.scheduler__pages')\r\n    pagesElement.style.transform = `translate(-${page * 100}%)`\r\n    this.updatePageNavigation()\r\n  }\r\n\r\n  updatePageNavigation() {\r\n    const nextPageButton = document.querySelector('.scheduler__pages-nav-button--next')\r\n    const prevPageButton = document.querySelector('.scheduler__pages-nav-button--prev')\r\n    \r\n    nextPageButton.classList.remove('js-hidden')\r\n    prevPageButton.classList.remove('js-hidden')\r\n    \r\n    if (this.currentPage === 0) {\r\n      prevPageButton.classList.add('js-hidden')\r\n    }\r\n\r\n    if (this.currentPage === this.pages - 1) {\r\n      nextPageButton.classList.add('js-hidden')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Builds the component template.\r\n   *\r\n   * @memberof Scheduler\r\n  */\r\n  initDatetimeFields() {\r\n    const radioGroup = new RadioButtonsGroup()\r\n    \r\n    const timeButtonElements = document.querySelectorAll('.scheduler__button--time')\r\n    timeButtonElements.forEach(timeButtonElement => {\r\n      const button = new ToggleButton(timeButtonElement)\r\n      radioGroup.addRadioButton(button)\r\n      timeButtonElement.addEventListener('click', () => {\r\n        this.handleTimeButtonToggle(timeButtonElement.dataset.time)\r\n      }, false)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Handles time button change.\r\n   *\r\n   * @param {*} time\r\n   * @memberof Scheduler\r\n   */\r\n  handleTimeButtonToggle(time) {\r\n    const datetimeInput = document.querySelector('input[name=datetime]')\r\n    datetimeInput.value = time\r\n    const submitButton = document.querySelector(\r\n      '.widget-extension__button--send-schedule'\r\n    )\r\n    submitButton.classList.remove('disabled')\r\n  }\r\n\r\n  /**\r\n   * Loads scheduler calendar view.\r\n   * \r\n   * @param {number} \r\n   */\r\n  async loadCalendar() {\r\n    return new Promise((resolve, reject) => {\r\n      this.service.getSchedulerCalendar().then((html) => {\r\n        document.querySelector('.widget--schedule__datetime-controls').innerHTML = html\r\n        resolve()\r\n      }).catch(reason => {\r\n        reject(reason)\r\n      })\r\n    })\r\n  }\r\n\r\n}","import { UIView } from '../../genb/base/controller/UIView'\r\nimport { HTMLUtils } from '../../genb/base/utils/HTMLUtils'\r\n\r\n/**\r\n * Embed widget view.\r\n *\r\n * @export\r\n * @class WidgetExtensionView\r\n * @extends {UIView}\r\n */\r\nexport class WidgetExtensionView extends UIView {\r\n  /**\r\n   * Creates an instance of WidgetExtensionView.\r\n   *\r\n   * @param {*} service\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  constructor(service) {\r\n    super()\r\n    this.service = service\r\n    this.element = this.uiGet('#qh_e_frame')\r\n    this.isExpanded = false\r\n    this.videoMode = false\r\n    this.anyOperatorActive = false\r\n    this.extDispatcher = window.parent.document.QHDispatcher\r\n  }\r\n\r\n  /**\r\n   * Initializes the view.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  async init() {\r\n    this.service.addListener('admin', (adminUser) => {\r\n      this.onAdmin(adminUser)\r\n    })\r\n\r\n    this.service.addListener('listUsers', (a) => {\r\n      this.anyOperatorActive = !!a.length \r\n      this.updateVideoCallUi()\r\n    })\r\n\r\n    this.service.addListener('callAccepted', (e) => {\r\n      this.onCallAccepted(e)\r\n    })\r\n\r\n    this.service.addListener('callRejected', () => {\r\n      this.onCallRejected()\r\n    })\r\n\r\n    this.service.addListener('videochatSessionClose', () => {\r\n      this.onHangUpVideoChat()\r\n    })\r\n\r\n    const rateButtons = this.uiArray('.qh_rate-star')\r\n    rateButtons.forEach((rateButton, index) => {\r\n      rateButton.addEventListener('click', () => {\r\n        for (let a = 1; a <= rateButtons.length; a++) {\r\n          const button = this.uiGet(`.qh_rate-star:nth-child(${a})`)\r\n          button.classList.remove('js-enabled,js-disabled')\r\n          if (a <= index + 1) {\r\n            button.classList.add('js-enabled')\r\n            button.classList.remove('js-disabled')\r\n          } else {\r\n            button.classList.remove('js-enabled')\r\n            button.classList.add('js-disabled')\r\n          }\r\n        }\r\n        this.service.rateComSession(index + 1)\r\n      })\r\n    })\r\n    this.initContactForm()\r\n  }\r\n\r\n  /**\r\n   * Initializes contact form.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  initContactForm() {\r\n    const sendButtonClassName = '.widget-extension__button--send-contact'\r\n    if (this.uiExists(sendButtonClassName)) {\r\n      HTMLUtils.removeAllEventListeners(sendButtonClassName)\r\n      const submitButtonElement = this.uiGet(sendButtonClassName)\r\n      submitButtonElement.addEventListener('click', () => {\r\n        this.sendScheduleForm()\r\n      })\r\n    }\r\n    this.initInactiveOperatorCloser()\r\n  }\r\n\r\n  /**\r\n   * Initializes active operator init form.\r\n   */\r\n  initStartVideoChatForm() {\r\n    const startVideoButtonClassName = '.widget-extension__button--video-call'\r\n    if (this.uiExists(startVideoButtonClassName)) {\r\n      HTMLUtils.removeAllEventListeners(startVideoButtonClassName)\r\n      const submitButtonElement = this.uiGet(startVideoButtonClassName)\r\n      submitButtonElement.addEventListener('click', () =>\r\n        this.sendStartVideoChatForm()\r\n      )\r\n    }\r\n    this.initActiveOperatorFormCloser()\r\n  }\r\n\r\n  /**\r\n   * Initializes closer button.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  initActiveOperatorFormCloser() {\r\n    const activeOperatorFormCloserClass =\r\n      '.qh_widget-closer--active-operator-form'\r\n    if (this.uiExists(activeOperatorFormCloserClass)) {\r\n      HTMLUtils.removeAllEventListeners(activeOperatorFormCloserClass)\r\n      const collapseViewButtonElement = this.uiGet(\r\n        activeOperatorFormCloserClass\r\n      )\r\n      collapseViewButtonElement.addEventListener('click', () => {\r\n        this.collapseAndReinitActiveOperatorInitForm(false)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes rate UX closer.\r\n   */\r\n  initRateUXCloser() {\r\n    const rateUXCloserClass = '.qh_widget-closer--rate-ux'\r\n    if (this.uiExists(rateUXCloserClass)) {\r\n      HTMLUtils.removeAllEventListeners(rateUXCloserClass)\r\n      const collapseViewButtonElement = this.uiGet(rateUXCloserClass)\r\n      collapseViewButtonElement.addEventListener('click', () => {\r\n        this.collapseAndReinitActiveOperatorInitForm()\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Intializes await video call closer.\r\n   */\r\n  initAwaitVideoCallCloser() {\r\n    const awaitVideoCallCloserClass = '.qh_widget-closer--await-video-call'\r\n    if (this.uiExists(awaitVideoCallCloserClass)) {\r\n      HTMLUtils.removeAllEventListeners(awaitVideoCallCloserClass)\r\n      const awaitVideoCallCloserElement = this.uiGet(awaitVideoCallCloserClass)\r\n      awaitVideoCallCloserElement.addEventListener('click', () => {\r\n        this.cancelCall()\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Intializes video closer.\r\n   */\r\n  initVideoCloser() {\r\n    const videoCloserClass = '.qh_widget-closer--video'\r\n    if (this.uiExists(videoCloserClass)) {\r\n      HTMLUtils.removeAllEventListeners(videoCloserClass)\r\n      const videoCloserElement = this.uiGet(videoCloserClass)\r\n      videoCloserElement.addEventListener('click', () => {\r\n        this.onHangUpVideoChat()\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes inactive operator form closer.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  initInactiveOperatorCloser() {\r\n    if (this.uiExists('.qh_widget-closer--inactive-operator')) {\r\n      HTMLUtils.removeAllEventListeners('.qh_widget-closer--inactive-operator')\r\n      const collapseViewButtonElement = this.uiGet(\r\n        '.qh_widget-closer--inactive-operator'\r\n      )\r\n      collapseViewButtonElement.addEventListener('click', () => {\r\n        this.collapseAndReinitInactiveOperatorInitForm()\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collapses view and reinits active operator form.\r\n   *\r\n   * @param {*} forceDestroyVideoChat\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  collapseAndReinitActiveOperatorInitForm(forceDestroyVideoChat = true) {\r\n    this.deactivateVideoMode()\r\n    this.service.getActiveOperatorInitForm().then((html) => {\r\n      document.querySelector('.qh_video-ui_replace').innerHTML = html\r\n      this.activateActiveOperatorInitForm()\r\n      this.collapseView()\r\n      this.dispatchExtEvent('collapse')\r\n      if (forceDestroyVideoChat) {\r\n        this.service.destroyVideoChatApp()\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Collapses view and reinits inactive operator form.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  collapseAndReinitInactiveOperatorInitForm() {\r\n    this.service.getInactiveOperatorInitForm().then((html) => {\r\n      document.querySelector('.contact-form').innerHTML = html\r\n      this.initContactForm()\r\n      this.collapseView()\r\n      this.dispatchExtEvent('collapse')\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends schedule form.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n   sendScheduleForm() {\r\n    const fieldSet = {\r\n      name: document.querySelector('.qh_module--inactive-form input[name=name]')\r\n        .value,\r\n      email_address: document.querySelector(\r\n        '.qh_module--inactive-form input[name=email_address]'\r\n      ).value,\r\n      phone_number: document.querySelector('input[name=phone_number]').value,\r\n      datetime: document.querySelector('input[name=datetime]').value,\r\n    }\r\n    this.service\r\n      .sendScheduleForm(fieldSet)\r\n      .then((response) => {\r\n        document.querySelector('.contact-form').innerHTML = response\r\n        this.initContactForm()\r\n        this.collapseView()\r\n      })\r\n      .catch((reason) => {\r\n        console.log('reason', reason)\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Sends start video chat form.\r\n   */\r\n  sendStartVideoChatForm() {\r\n    const fieldSet = {\r\n      name: document.querySelector('.qh_active-user-form__input[name=name]')\r\n        .value,\r\n      email_address: document.querySelector(\r\n        '.qh_active-user-form__input[name=email_address]'\r\n      ).value,\r\n      phone_number: document.querySelector(\r\n        '.qh_active-user-form__input[name=phone_number]'\r\n      ).value,\r\n    }\r\n    this.service\r\n      .sendStartVideoChatForm(fieldSet)\r\n      .then((response) => {\r\n        document.querySelector('.qh_video-ui_replace').innerHTML = response\r\n        const resultElement = this.uiGet('.qh_com-status')\r\n        const status = resultElement.dataset.status\r\n        const userId = resultElement.dataset.userid\r\n        this.service.setUserId(userId)\r\n        if (status === 'ok') {\r\n          this.requestCall()\r\n          this.initAwaitVideoCallCloser()\r\n        } else {\r\n          this.initStartVideoChatForm()\r\n        }\r\n      })\r\n      .catch((reason) => {\r\n        console.log('reason', reason)\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Handles admin user.\r\n   *\r\n   * @param {object} adminUser\r\n   */\r\n  onAdmin(adminUser) {\r\n    this.adminUser = adminUser\r\n    const adminNameElement = this.uiGet('.active-user__admin-name')\r\n    const firstName = adminUser.full_name.split(' ')[0]\r\n    adminNameElement.innerHTML = firstName\r\n  }\r\n\r\n  setThumbnails(thumbnailPath) {\r\n    const adminThumbnailElements = this.uiArray('.active-user-form__thumbnail')\r\n    adminThumbnailElements.forEach((adminThumbnailElement) => {\r\n      adminThumbnailElement.style.backgroundImage = `url(${this.service.consoleAppUrl}/media/${thumbnailPath})`\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Toggles the view.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  toggleView() {\r\n    if (this.isExpanded) {\r\n      this.collapseView()\r\n      this.dispatchExtEvent('collapse')\r\n    } else {\r\n      this.expandView()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expands the view.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  expandView() {\r\n    this.isExpanded = true\r\n    this.element.classList.add('js-expanded')\r\n  }\r\n\r\n  /**\r\n   * Collapses the view.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  collapseView() {\r\n    this.isExpanded = false\r\n    this.element.classList.remove('js-expanded')\r\n    this.deactivateVideoMode()\r\n  }\r\n\r\n  /**\r\n   * Enables video call UI when number if any admin is active.\r\n   *\r\n   * @param {boolean} anyOperatorActive\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  updateVideoCallUi() {\r\n    const activeOperatorElement = this.uiGet('.qh_module--active-operator')\r\n    activeOperatorElement.classList.toggle('js-enabled', this.anyOperatorActive)\r\n    const inactiveOperatorForm = this.uiGet('.qh_module--inactive-form')\r\n    inactiveOperatorForm.classList.toggle('js-enabled', !this.anyOperatorActive)\r\n    if (!this.anyOperatorActive) {\r\n      this.activateCallDefaultStage()\r\n    } else if (!this.videoMode) {\r\n      this.activateActiveOperatorInitForm()\r\n      this.emit('collapse')\r\n      this.dispatchExtEvent('expand')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Requests a call.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  requestCall() {\r\n    this.service.requestCall()\r\n  }\r\n\r\n  /**\r\n   * Cancels a call.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  cancelCall() {\r\n    this.service.cancelCall()\r\n    if (!this.anyOperatorActive) {\r\n      this.activateCallDefaultStage()\r\n    } else if (!this.videoMode) {\r\n      this.collapseAndReinitActiveOperatorInitForm(false)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles call accepted event.\r\n   *\r\n   * @param {string} url\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  onCallAccepted(roomId) {\r\n    const urlElement = this.uiGet('meta[name=room_id]')\r\n    urlElement.setAttribute('content', roomId)\r\n    this.activateVideoChat()\r\n  }\r\n\r\n  deleteRoomId() {\r\n    const urlElement = this.uiGet('meta[name=room_id]')\r\n    urlElement.setAttribute('content', '')\r\n  }\r\n\r\n  /**\r\n   * Handles call rejected event.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  onCallRejected() {\r\n    this.activateCallRejectedStage()\r\n  }\r\n\r\n  activateCallRejectedStage() {\r\n    const line1Element = this.uiGet('.qh_video-ui_awating--line1')\r\n    line1Element.classList.add('qh_tight')\r\n    line1Element.innerHTML = 'Sorry, all of our operators are busy, we will email you shortly!'\r\n    const line2Element = this.uiGet('.qh_video-ui_awating--line2')\r\n    line2Element.remove()\r\n  }\r\n\r\n  /**\r\n   * Activates default video UI stage.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  activateCallDefaultStage() {\r\n    this.deactivateAllStages()\r\n    const stageElement = this.uiGet('.qh_module--inactive-form')\r\n    stageElement.classList.add('js-enabled')\r\n    this.deactivateVideoMode()\r\n  }\r\n\r\n  /**\r\n   * Activates video call request UI stage.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  activateActiveOperatorInitForm() {\r\n    this.deactivateAllStages()\r\n    const stageElement = this.uiGet('.qh_submodule--init-form')\r\n    stageElement.classList.add('js-enabled')\r\n    this.initStartVideoChatForm()\r\n  }\r\n\r\n  /**\r\n   * Activates the rate UX form submdule.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  activateRateUxForm() {\r\n    this.deactivateAllStages()\r\n    const stageElement = this.uiGet('.qh_submodule--rate-ux')\r\n    stageElement.classList.add('js-enabled')\r\n    this.initRateUXCloser()\r\n  }\r\n\r\n  /**\r\n   * Activates video chat.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  activateVideoChat() {\r\n    this.deactivateAllStages()\r\n    const stageElement = this.uiGet('.qh_submodule--video-chat')\r\n    stageElement.classList.add('js-enabled')\r\n    this.activateVideoMode()\r\n\r\n    const joinButton = this.uiGet('.confirm-join-button')\r\n    joinButton.addEventListener('click', () => {\r\n      this.onJoinVideoChat()\r\n    })\r\n\r\n    const hangupButton = this.uiGet('.button--hangup')\r\n    hangupButton.addEventListener('click', () => {\r\n      this.onHangUpVideoChat()\r\n    })\r\n\r\n    this.initVideoCloser()\r\n  }\r\n\r\n  onJoinVideoChat() {}\r\n\r\n  /**\r\n   * Handles call close.\r\n   */\r\n  onHangUpVideoChat() {\r\n    this.activateRateUxForm()\r\n    this.activateVideoMode()\r\n    this.deleteRoomId()\r\n  }\r\n\r\n  /**\r\n   * Deactivates all submodules.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  deactivateAllStages() {\r\n    const stageElements = this.uiArray('.qh_submodule')\r\n    stageElements.forEach((stageElement) => {\r\n      stageElement.classList.remove('js-enabled')\r\n    })\r\n    this.deactivateVideoMode()\r\n  }\r\n\r\n  /**\r\n   * Activates video mode.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  activateVideoMode() {\r\n    this.element.classList.add('qh_video-mode')\r\n    this.videoMode = true\r\n  }\r\n\r\n  /**\r\n   * Deactivates video mode.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  deactivateVideoMode() {\r\n    this.element.classList.remove('qh_video-mode')\r\n    this.videoMode = false\r\n    // remove connection data from videochat app\r\n  }\r\n\r\n  dispatchExtEvent(eventName) {\r\n    this.extDispatcher.dispatchEvent(\r\n      new CustomEvent(eventName, {\r\n        detail: {\r\n          source: 'widgetExtView',\r\n        }\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { EventEmitter } from '../../genb/base/service/EventEmitter'\r\nimport { WebSocketService } from '../base/services/WebSocketService'\r\nimport { ApiService } from '../base/services/ApiService'\r\nimport { ApplicationSettings } from '../base/model/ApplicationSettings'\r\nimport { QhUtils } from '../base/utils/QhUtils'\r\n\r\n/**\r\n * The widget collective service.\r\n *\r\n * @extends EventEmitter\r\n */\r\nexport class WidgetService extends EventEmitter {\r\n  /**\r\n   * Creates an instance of WidgetService.\r\n   *\r\n   * @param {string} consoleAppUrl the console app URL address\r\n   * @param {string} widgetId the widget ID\r\n   */\r\n  constructor(consoleAppUrl, widgetId) {\r\n    super()\r\n    this.apiService = new ApiService(consoleAppUrl)\r\n    this.consoleAppUrl = consoleAppUrl\r\n    this.widgetId = widgetId\r\n    this.users = []\r\n  }\r\n\r\n  /**\r\n   * Initializes the service.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  async init() {\r\n    return new Promise((resolve, reject) => {\r\n      this.apiService.getSettings().then((appSettingsJson) => {\r\n        this.appSettings = new ApplicationSettings(appSettingsJson)\r\n        try {\r\n          this.apiService.getWidgetById(this.widgetId).then((widgetObject) => {\r\n            this.widget = JSON.parse(widgetObject)\r\n            this.install().then((response) => {\r\n              const responseJson = JSON.parse(response)\r\n              if (responseJson.status === 'failure') {\r\n                reject(responseJson.result)\r\n              }\r\n\r\n              this.webSocketService = new WebSocketService(\r\n                this.appSettings.webSocketServiceUrl\r\n              )\r\n\r\n              this.webSocketService.addListener('register', (e) => {\r\n                this.onUserRegister(e)\r\n              })\r\n              this.webSocketService.addListener('listUsers', (e) => {\r\n                this.onListUsers(e)\r\n              })\r\n\r\n              this.webSocketService.addListener('callAccepted', (e) => {\r\n                this.onCallAccepted(e)\r\n              })\r\n\r\n              this.webSocketService.addListener('callRejected', () => {\r\n                this.onCallRejected()\r\n              })\r\n\r\n              this.webSocketService.addListener('error', (error) => {\r\n                this.emit('error', error)\r\n              })\r\n\r\n              this.webSocketService.addListener(\r\n                'communicationRecord',\r\n                (record) => {\r\n                  this.onCommunicationRecord(record)\r\n                }\r\n              )\r\n\r\n              this.user = {\r\n                uuid: 'guest_' + String(Math.floor(Date.now() / 1000)),\r\n                roomId: this.widget.uuid,\r\n              }\r\n              this.webSocketService.registerGuest(\r\n                this.user.uuid,\r\n                this.widget.uuid\r\n              )\r\n\r\n              // attach videochat events\r\n              try {\r\n                this.videochatProxy = videochat.proxy()\r\n                this.videochatProxy.addEventListener('close', () => {\r\n                  this.onCloseVideoChat()\r\n                })\r\n                this.videochatProxy.addEventListener('remote_hangup', () => {\r\n                  this.onCloseVideoChat()\r\n                })\r\n              } catch (e) {\r\n                console.log('Videochat is not defined.')\r\n              }\r\n\r\n              resolve()\r\n            })\r\n          })\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Removes connection data in the videochat application.\r\n   */\r\n  destroyVideoChatApp() {\r\n    try {\r\n      this.videochatProxy.destroy()\r\n    } catch (e) {\r\n      console.log('e', e)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles videochat session close.\r\n   */\r\n  onCloseVideoChat() {\r\n    this.emit('videochatSessionClose')\r\n  }\r\n\r\n  /**\r\n   * Requests a call with an active admin.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  requestCall() {\r\n    const adminUuid = this.admins[0]\r\n    this.webSocketService.requestCall(\r\n      this.user.uuid,\r\n      this.user.userId,\r\n      adminUuid,\r\n      this.widget.uuid\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Cancels a call request.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  cancelCall() {\r\n    const adminUuid = this.admins[0]\r\n    this.webSocketService.cancelCall(\r\n      this.sessionRecord.id,\r\n      this.user.userId,\r\n      adminUuid,\r\n      this.widget.uuid\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Handles user register response.\r\n   *\r\n   * @param {string} response the response\r\n   * @memberof WidgetService\r\n   */\r\n  onUserRegister(response) {\r\n    if (response === 'ok') {\r\n      this.webSocketService.listAdmins(this.user.uuid, this.widget.uuid)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles user list refresh response.\r\n   *\r\n   * @param {array<string>} a\r\n   * @memberof WidgetService\r\n   */\r\n  onListUsers(a) {\r\n    this.admins = a\r\n    this.emit('listUsers', a)\r\n\r\n    if (a.length) {\r\n      const adminId = QhUtils.extractUserId(a[0])\r\n      this.getUser(adminId).then((user) => {\r\n        this.emit('admin', user)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles call accept notification.\r\n   *\r\n   * @param {string} uuid the UUID string\r\n   * @memberof WidgetService\r\n   */\r\n  async onCallAccepted(uuid) {\r\n    this.emit('callAccepted', uuid)\r\n  }\r\n\r\n  /**\r\n   * Handles call reject notification.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  onCallRejected() {\r\n    this.emit('callRejected')\r\n    // this.destroyVideoChatApp()\r\n  }\r\n\r\n  /**\r\n   * Handles communication record.\r\n   *\r\n   * @param {object} record the communication record\r\n   */\r\n  onCommunicationRecord(record) {\r\n    this.sessionRecord = record\r\n  }\r\n\r\n  /**\r\n   * Sends contact form.\r\n   *\r\n   * @param {array<object>} fieldSet the field set\r\n   */\r\n  sendScheduleForm(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/widget_schedule/${\r\n      this.widgetId\r\n    }/${encodeURIComponent(window.location.hostname.toLowerCase())}/${\r\n      this.widget.uuid\r\n    }`\r\n    return this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Sends start video chat form.\r\n   *\r\n   * @param {object} fieldSet\r\n   * @returns the response\r\n   */\r\n  sendStartVideoChatForm(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/widget_active_operator/${\r\n      this.widgetId\r\n    }/${encodeURIComponent(window.location.hostname.toLowerCase())}/${\r\n      this.widget.uuid\r\n    }`\r\n    return this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Installs the widget.\r\n   *\r\n   * @returns true if installed correctly.\r\n   */\r\n  async install() {\r\n    const url = `${this.consoleAppUrl}/dashboard/install/${\r\n      this.widgetId\r\n    }/${encodeURIComponent(window.location.hostname.toLowerCase())}/${\r\n      this.widget.uuid\r\n    }`\r\n    return this.apiService.postAsXMLHttpRequest({}, url)\r\n  }\r\n\r\n  /**\r\n   * Gets user by user ID.\r\n   *\r\n   * @param {*} userId\r\n   * @returns\r\n   */\r\n  async getUser(userId) {\r\n    let userJson = await this.apiService.getUserById(userId)\r\n    return JSON.parse(userJson)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session rate.\r\n   *\r\n   * @param {number} rate\r\n   * @returns\r\n   */\r\n  async rateComSession(rate) {\r\n    let resultJson = await this.apiService.rateComSession(\r\n      this.sessionRecord.id,\r\n      rate\r\n    )\r\n    return JSON.parse(resultJson)\r\n  }\r\n\r\n  /**\r\n   * Sets local user ID.\r\n   *\r\n   * @param {number} userId\r\n   */\r\n  setUserId(userId) {\r\n    this.user.userId = userId\r\n  }\r\n\r\n  /**\r\n   * Gets an active operator init form template.\r\n   *\r\n   * @returns the template string\r\n   */\r\n  async getActiveOperatorInitForm() {\r\n    return await this.apiService.getAsXMLHttpRequest(\r\n      `${this.consoleAppUrl}/dashboard/active_operator_init_form`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets an inactive operator init form template.\r\n   *\r\n   * @returns the template string\r\n   */\r\n  async getInactiveOperatorInitForm() {\r\n    return await this.apiService.getAsXMLHttpRequest(\r\n      `${this.consoleAppUrl}/dashboard/inactive_operator_init_form`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets scheduler calendar.\r\n   *\r\n   * @returns the scheduler calendar\r\n   */\r\n  async getSchedulerCalendar() {\r\n    const url = `${this.consoleAppUrl}/dashboard/widget_calendar_view/${this.widgetId}`\r\n    return await this.apiService.getAsXMLHttpRequest(url)\r\n  }\r\n\r\n  /**\r\n   * Gets widget contact form.\r\n   *\r\n   * @param {array<object>} fieldSet the field set\r\n   *\r\n   * @returns the contact form view\r\n   */\r\n  async getContactForm(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/add_widget_contact_form_view/${this.widgetId}`\r\n    return await this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Gets widget contact form.\r\n   *\r\n   * @param {array<object>} fieldSet the field set\r\n   *\r\n   * @returns the contact form view\r\n   */\r\n    async sendContactForm(fieldSet) {\r\n      const url = `${this.consoleAppUrl}/dashboard/edit_widget_contact_form_view/${this.widgetId}`\r\n      return await this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n    }\r\n}\r\n","/*!\n * JavaScript Cookie v2.2.1\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction decode (s) {\n\t\treturn s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api() {}\n\n\t\tfunction set (key, value, attributes) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattributes = extend({\n\t\t\t\tpath: '/'\n\t\t\t}, api.defaults, attributes);\n\n\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\tattributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n\t\t\t}\n\n\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\ttry {\n\t\t\t\tvar result = JSON.stringify(value);\n\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tvalue = converter.write ?\n\t\t\t\tconverter.write(value, key) :\n\t\t\t\tencodeURIComponent(String(value))\n\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\n\t\t\tkey = encodeURIComponent(String(key))\n\t\t\t\t.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n\t\t\t\t.replace(/[\\(\\)]/g, escape);\n\n\t\t\tvar stringifiedAttributes = '';\n\t\t\tfor (var attributeName in attributes) {\n\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Considers RFC 6265 section 5.2:\n\t\t\t\t// ...\n\t\t\t\t// 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n\t\t\t\t//     character:\n\t\t\t\t// Consume the characters of the unparsed-attributes up to,\n\t\t\t\t// not including, the first %x3B (\";\") character.\n\t\t\t\t// ...\n\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n\t\t\t}\n\n\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t}\n\n\t\tfunction get (key, json) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar jar = {};\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all.\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = decode(parts[0]);\n\t\t\t\t\tcookie = (converter.read || converter)(cookie, name) ||\n\t\t\t\t\t\tdecode(cookie);\n\n\t\t\t\t\tif (json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tjar[name] = cookie;\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn key ? jar[key] : jar;\n\t\t}\n\n\t\tapi.set = set;\n\t\tapi.get = function (key) {\n\t\t\treturn get(key, false /* read as raw */);\n\t\t};\n\t\tapi.getJSON = function (key) {\n\t\t\treturn get(key, true /* read as json */);\n\t\t};\n\t\tapi.remove = function (key, attributes) {\n\t\t\tset(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.defaults = {};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Widget views root application.\r\n*/\r\n\r\nimport { WidgetService } from './com/quickhellou/widget/WidgetService'\r\nimport { BadgeView } from './com/quickhellou/widget/BadgeView'\r\nimport { ScheduleView } from './com/quickhellou/widget/ScheduleView'\r\nimport { WidgetExtensionView } from './com/quickhellou/widget/WidgetExtensionView'\r\nimport { ContactInformationView } from './com/quickhellou/widget/ContactInformationView'\r\n\r\n// data\r\nconst consoleAppUrl = document.querySelector('.qh-root').dataset.url\r\nconst widgetId = document.querySelector('.qh-root').dataset.id\r\n// service\r\nconst widgetService = new WidgetService(consoleAppUrl, widgetId)\r\nwidgetService\r\n  .init()\r\n  .then(() => {\r\n    // views\r\n    const badgeView = new BadgeView(widgetService)\r\n    const extView = new WidgetExtensionView(widgetService)\r\n    const scheduleView = new ScheduleView(widgetService)\r\n    const contactInformationView = new ContactInformationView(widgetService)\r\n    const extDispatcher = window.parent.document.QHDispatcher\r\n\r\n    // event handlers\r\n    extDispatcher.addEventListener('collapse', () => {\r\n      scheduleView.collapseView()\r\n      extView.collapseView()\r\n    }, false)\r\n    extDispatcher.addEventListener('expand_contact', (event) => {\r\n      extView.expandView()\r\n      scheduleView.collapseView()\r\n      contactInformationView.load(event.detail.datetime)\r\n    }, false)\r\n    extDispatcher.addEventListener('expand_schedule', () => {\r\n      scheduleView.expandView()\r\n      extView.collapseView()\r\n    }, false)\r\n    extDispatcher.addEventListener('setThumbnail', (path) => {\r\n      extView.setThumbnails(path)\r\n    }, false)\r\n    \r\n    // init widget modules\r\n    badgeView.init()\r\n    extView.init()\r\n    scheduleView.init()\r\n    contactInformationView.init()\r\n\r\n    // init\r\n    document.querySelector('.qh-root').classList.add('active')\r\n  })\r\n  .catch((reason) => {\r\n    document.querySelector('.qh-root').style.opacity = 1\r\n    document.querySelector('.qh-root').classList.add('failure')\r\n    document.querySelector('.qh-root').innerHTML = reason\r\n  })\r\n"],"names":["RadioButtonsGroup","UIView","constructor","super","this","elements","addRadioButton","button","push","element","addEventListener","disableAll","enable","forEach","disable","ToggleButton","enabled","toggle","classList","add","remove","ObservableController","observable","EventEmitter","addListener","label","callback","removeListener","emit","args","uiGet","cssSelector","HTMLUtils","uiExists","uiArray","removeListeners","newElement","cloneNode","parentNode","replaceChild","removeElementListeners","removeListListeners","listeners","Map","has","set","get","index","length","reduce","i","listener","isFunction","splice","obj","FormService","getAsXMLHttpRequest","serviceName","sendAsXMLHttpRequest","postAsXMLHttpRequest","fieldSet","method","url","formData","FormData","key","value","Object","entries","append","Promise","resolve","reject","request","XMLHttpRequest","open","includes","status","responseText","csrftoken","Cookie","setRequestHeader","send","sendAsXMLHttpFormEncodedRequest","data","field","name","sendAsForm","action","html","document","body","insertAdjacentHTML","getElementById","submit","BaseUtils","static","s","e","urlName","meta","querySelector","isObjectDefined","attributes","content","hostname","window","location","log","message","console","selector","warn","getInputByName","checked","inputElement","getSelectByName","selectedOptions","text","selectElement","getInputByClassName","getSelectByClassName","elementList","querySelectorAll","Array","from","list","activateElement","deactivateElement","clipboardData","setData","preventDefault","execCommand","removeEventListener","txt","createElement","innerHTML","className","days","path","expires","Date","now","toUTCString","cookie","encodeURIComponent","split","r","v","parts","decodeURIComponent","setCookie","StringUtils","isEmpty","string1","string2","getTime","toString","email","test","ipAddress","replace","toUpperCase","expression","matches","exec","EMPTY","prevHash","currVal","charCodeAt","ApplicationSettings","objString","objs","JSON","parse","videoAppUrl","video_app_url","consoleAppUrl","console_app_url","webSocketServiceUrl","ws_service_url","adminEmailAddress","admin_email_address","getValue","propertyName","filter","property","ComSessionStatus","STATUS_PENDING","STATUS_ENQUEUED","STATUS_MISSED","STATUS_CANCELLED","STATUS_REJECTED","STATUS_ACCEPTED","STATUS_COMPLETED","UserType","ADMIN","GUEST","ApiService","baseUrl","getCurrentUser","getJson","getSettings","getUserById","userId","getWidgetById","widgetId","getCommunicationRecord","communicationId","actionName","createCall","userWSId","widgetUuid","caller_name","caller_id","widget_uuid","rateComSession","id","rate","cancelCall","getUuid","str","setComSessionAsAccepted","setComSessionStatus","setComSessionAsRejected","setComSessionAsCancelled","setComSessionAsCompleted","setComSessionAsEnqueued","getPendingSessions","WebSocketService","serviceUrl","isOpen","openWebSocketConnection","websocket","WebSocket","onopen","readyState","OPEN","attachWebSocketEventHandlers","onerror","event","currentTarget","onmessage","handleMessageResponse","onclose","response","responseJson","error","msg","messageJson","type","handleNamedResponse","REQUEST_CALL","user","widget","CANCEL_CALL","recordId","ACCEPT_CALL_REQUEST","uuid","REJECT_CALL_REQUEST","SEND_COMMUNICATION_RECORD","record","registerList","userType","records","register","registerOperatorsList","widgets","deregisterList","deregister","roomId","sendWebSocketMessage","cmd","clientid","clienttype","roomid","registerOperator","registerGuest","SEND","client_board_id","sendToOther","otherUserId","otherid","listClients","listGuests","listAdmins","requestCall","adminId","stringify","acceptCallRequest","calleeId","callerUserId","comSessionId","rejectCallRequest","passCommunicationRecord","otherUserWSId","async","persistant","roomtype","String","QhUtils","getQhProperty","appUuid","BadgeView","service","extDispatcher","parent","QHDispatcher","onListUsers","onAdmin","dispatchEvent","CustomEvent","detail","source","onCallRejected","onUserRegister","webSocketService","anyOperatorActive","toggleBackgroundElementActiveState","toggleUserIconElements","toggleTopState","adminUser","thumbnail","setIcon","force","thumbnailPath","style","backgroundImage","setCallRequestIcon","src","setCallAcceptedIcon","ContactInformationView","isExpanded","datetime","loadContactForm","initUI","backButton","sendButtonClassName","sendContactForm","then","getContactForm","catch","reason","formElement","email_address","phone_number","ScheduleView","scheduler","Scheduler","selectedScheduleTimeElement","dataset","time","toggleView","collapseView","expandView","init","currentPage","loadCalendar","pages","moveToPage","updatePageNavigation","initDatetimeFields","page","transform","nextPageButton","prevPageButton","radioGroup","timeButtonElement","handleTimeButtonToggle","getSchedulerCalendar","WidgetExtensionView","videoMode","a","updateVideoCallUi","onCallAccepted","onHangUpVideoChat","rateButtons","rateButton","initContactForm","sendScheduleForm","initInactiveOperatorCloser","initStartVideoChatForm","startVideoButtonClassName","sendStartVideoChatForm","initActiveOperatorFormCloser","activeOperatorFormCloserClass","collapseAndReinitActiveOperatorInitForm","initRateUXCloser","rateUXCloserClass","initAwaitVideoCallCloser","awaitVideoCallCloserClass","initVideoCloser","videoCloserClass","collapseAndReinitInactiveOperatorInitForm","forceDestroyVideoChat","deactivateVideoMode","getActiveOperatorInitForm","activateActiveOperatorInitForm","dispatchExtEvent","destroyVideoChatApp","getInactiveOperatorInitForm","resultElement","userid","setUserId","adminNameElement","firstName","full_name","setThumbnails","adminThumbnailElement","activateCallDefaultStage","setAttribute","activateVideoChat","deleteRoomId","activateCallRejectedStage","line1Element","deactivateAllStages","activateRateUxForm","activateVideoMode","onJoinVideoChat","stageElement","eventName","WidgetService","apiService","users","appSettingsJson","appSettings","widgetObject","install","result","onCommunicationRecord","Math","floor","videochatProxy","videochat","proxy","onCloseVideoChat","destroy","adminUuid","admins","sessionRecord","getUser","toLowerCase","userJson","resultJson","factory","module","exports","OldCookies","Cookies","api","noConflict","extend","arguments","decode","converter","defaults","write","escape","stringifiedAttributes","attributeName","json","jar","cookies","slice","join","charAt","read","getJSON","withConverter","_defineProperty","defineProperty","enumerable","configurable","writable","_toPrimitive","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","_toPropertyKey","arg","_typeof","iterator","prototype","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","o","prop","hasOwnProperty","toStringTag","widgetService","badgeView","extView","scheduleView","contactInformationView","load","opacity"],"sourceRoot":""}