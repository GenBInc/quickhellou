{"version":3,"file":"js/widget.js","mappings":"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","sources":["webpack:///../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///../../node_modules/js-cookie/dist/js.cookie.mjs","webpack:///./js/com/genb/base/components/RadioButtonsGroup.js","webpack:///./js/com/genb/base/components/ToggleButton.js","webpack:///./js/com/genb/base/controller/ObservableController.js","webpack:///./js/com/genb/base/controller/UIView.js","webpack:///./js/com/genb/base/service/EventEmitter.js","webpack:///./js/com/genb/base/service/FormService.js","webpack:///./js/com/genb/base/utils/BaseUtils.js","webpack:///./js/com/genb/base/utils/HTMLUtils.js","webpack:///./js/com/genb/base/utils/StringUtils.js","webpack:///./js/com/quickhellou/base/model/ApplicationSettings.js","webpack:///./js/com/quickhellou/base/model/ComSessionStatus.js","webpack:///./js/com/quickhellou/base/model/UserType.js","webpack:///./js/com/quickhellou/base/services/ApiService.js","webpack:///./js/com/quickhellou/base/services/WebSocketService.js","webpack:///./js/com/quickhellou/base/utils/QhUtils.js","webpack:///./js/com/quickhellou/widget/BadgeView.js","webpack:///./js/com/quickhellou/widget/ContactInformationView.js","webpack:///./js/com/quickhellou/widget/ScheduleView.js","webpack:///./js/com/quickhellou/widget/Scheduler.js","webpack:///./js/com/quickhellou/widget/WidgetExtensionView.js","webpack:///./js/com/quickhellou/widget/WidgetService.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./js/widget.js"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n","import { UIView } from '../controller/UIView'\r\nimport { ToggleButton } from './ToggleButton'\r\n\r\n/**\r\n * Radio buttons group.\r\n *\r\n * @export\r\n * @class RadioButtonsGroup\r\n * @extends {UIView}\r\n */\r\nexport class RadioButtonsGroup extends UIView {\r\n  \r\n  /**\r\n   * Creates an instance of RadioButtonsGroup.\r\n   *\r\n   *\r\n   * @memberof RadioButtonsGroup\r\n  */\r\n  constructor() {\r\n      super()\r\n      this.elements = []\r\n  }\r\n\r\n  /**\r\n   * Adds radio button.\r\n   *\r\n   * @param {ToggleButton} button\r\n   * @memberof RadioButtonsGroup\r\n   */\r\n  addRadioButton(button) {\r\n    this.elements.push(button)\r\n    button.element.addEventListener('click', () => {\r\n      this.disableAll()\r\n      button.enable()\r\n    }, false)\r\n  }\r\n\r\n  /**\r\n   * Disables all radio buttons.\r\n   *\r\n   * @memberof RadioButtonsGroup\r\n   */\r\n  disableAll() {\r\n    this.elements.forEach(element => {\r\n      element.disable()\r\n    })\r\n  }\r\n}","import { UIView } from '../controller/UIView'\r\n\r\n/**\r\n * Toggle button.\r\n *\r\n * @export\r\n * @class ToggleButton\r\n * @extends {UIView}\r\n */\r\nexport class ToggleButton extends UIView {\r\n  \r\n  /**\r\n   * Creates an instance of ToggleButton.\r\n   *\r\n   *\r\n   * @memberof ToggleButton\r\n  */\r\n  constructor(element) {\r\n      super()\r\n      this.element = element\r\n      this.enabled = false\r\n      this.element.addEventListener('click', () => {\r\n        this.toggle()\r\n      }, false)\r\n  }\r\n\r\n  /**\r\n   * Enables button.\r\n   *\r\n   * @memberof ToggleButton\r\n   */\r\n  enable() {\r\n    this.enabled = true\r\n    this.element.classList.add('js-enabled')  \r\n  }\r\n\r\n  /**\r\n   * Disable button.\r\n   *\r\n   * @memberof ToggleButton\r\n   */\r\n  disable() {\r\n    this.enabled = false\r\n    this.element.classList.remove('js-enabled', 'enabled')\r\n  }\r\n\r\n  /**\r\n   * Toggles button.\r\n   *\r\n   * @memberof ToggleButton\r\n   */\r\n  toggle() {\r\n    if (this.enabled) {\r\n      this.disable()\r\n    } else {\r\n      this.enable()\r\n    }\r\n  }\r\n}","import { EventEmitter } from '../service/EventEmitter'\r\n\r\n/**\r\n * Event emitter controller.\r\n *\r\n * @export\r\n * @class ObservableController\r\n */\r\nexport class ObservableController {\r\n  /**\r\n   * Creates an instance of ObservableController.\r\n   *\r\n   * @memberof ObservableController\r\n   */\r\n  constructor() {\r\n    this.observable = new EventEmitter()\r\n  }\r\n\r\n  /**\r\n   * Adds emitter listener.\r\n   *\r\n   * @param {string} label\r\n   * @param {*} callback\r\n   * @memberof ObservableController\r\n   */\r\n  addListener(label, callback) {\r\n    this.observable.addListener(label, callback)\r\n  }\r\n\r\n  /**\r\n   * Removes emitter listener.\r\n   *\r\n   * @param {string} label\r\n   * @param {*} callback\r\n   * @memberof ObservableController\r\n   */\r\n  removeListener(label, callback) {\r\n    this.observable.removeListener(label, callback)\r\n  }\r\n\r\n  /**\r\n   * Emits an event.\r\n   *\r\n   * @param {string} label\r\n   * @param {*} args\r\n   * @memberof ObservableController\r\n   */\r\n  emit(label, ...args) {\r\n    this.observable.emit(label, ...args)\r\n  }\r\n}\r\n","import { ObservableController } from './ObservableController'\r\nimport { HTMLUtils } from '../utils/HTMLUtils'\r\n\r\n/**\r\n * UI view facade.\r\n *\r\n * @export\r\n * @class UIViewController\r\n * @extends {ObservableController}\r\n */\r\nexport class UIView extends ObservableController {\r\n  /**\r\n   * Gets DOM element by a CSS selector.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @returns\r\n   * @memberof UIViewController\r\n   */\r\n  uiGet(cssSelector) {\r\n    return HTMLUtils.get(cssSelector)\r\n  }\r\n\r\n  /**\r\n   * Checks if DOM element selected by given CSS selector exists.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @returns\r\n   * @memberof UIViewController\r\n   */\r\n  uiExists(cssSelector) {\r\n    return HTMLUtils.exists(cssSelector)\r\n  }\r\n\r\n  /**\r\n   * Returns DOM elements list selected by given CSS selector as Array object.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @returns {Array<HTMLElement>}\r\n   * @memberof UIView\r\n   */\r\n  uiArray(cssSelector) {\r\n    return HTMLUtils.array(cssSelector)\r\n  }\r\n\r\n  /**\r\n   * Removes all listeners by replacing it with a clone.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @memberof UIView\r\n   */\r\n  removeListeners(cssSelector) {\r\n    var element = this.uiGet(cssSelector)\r\n    var newElement = element.cloneNode(true)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  /**\r\n   * Removes all element listeners by replacing it with a clone.\r\n   *\r\n   * @param {HTMLElement} element\r\n   * @memberof UIView\r\n   */\r\n  removeElementListeners(element) {\r\n    var newElement = element.cloneNode(true)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  /**\r\n   * Removes all listeners from list of HTMLElements by replacing it with a clone.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @memberof UIView\r\n   */\r\n  removeListListeners(cssSelector) {\r\n    this.uiArray(cssSelector).forEach(element => {\r\n      this.removeElementListeners(element)\r\n    })\r\n  }\r\n}\r\n","/**\r\n * Event emitter.\r\n *\r\n * @export\r\n * @class EventEmitter\r\n */\r\nexport class EventEmitter {\r\n  /**\r\n   * Creates an instance of EventEmitter.\r\n   *\r\n   * @memberof EventEmitter\r\n   */\r\n  constructor() {\r\n    this.listeners = new Map()\r\n  }\r\n\r\n  /**\r\n   * Ads an event listener.\r\n   *\r\n   * @param {String} label\r\n   * @param {*} callback\r\n   * @memberof EventEmitter\r\n   */\r\n  addListener(label, callback) {\r\n    this.listeners.has(label) || this.listeners.set(label, [])\r\n    this.listeners.get(label).push(callback)\r\n  }\r\n\r\n  /**\r\n   * Removes an event listener.\r\n   *\r\n   * @param {String} label\r\n   * @param {*} callback\r\n   * @returns\r\n   * @memberof EventEmitter\r\n   */\r\n  removeListener(label, callback) {\r\n    let listeners = this.listeners.get(label),\r\n      index\r\n\r\n    if (listeners && listeners.length) {\r\n      index = listeners.reduce((i, listener, index) => {\r\n        return this.isFunction(listener) && listener === callback\r\n          ? (i = index)\r\n          : i\r\n      }, -1)\r\n\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n        this.listeners.set(label, listeners)\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Emits an event.\r\n   *\r\n   * @param {String} label\r\n   * @param {*} args\r\n   * @returns\r\n   * @memberof EventEmitter\r\n   */\r\n  emit(label, ...args) {\r\n    let listeners = this.listeners.get(label)\r\n\r\n    if (listeners && listeners.length) {\r\n      listeners.forEach((listener) => {\r\n        listener(...args)\r\n      })\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Checks if object is function.\r\n   *\r\n   * @param {object} obj\r\n   * @returns\r\n   * @memberof EventEmitter\r\n   */\r\n  isFunction(obj) {\r\n    return typeof obj === 'function' || false\r\n  }\r\n}\r\n","import { EventEmitter } from './EventEmitter'\r\n\r\nimport Cookie from 'js-cookie'\r\n\r\n/**\r\n * Form service class.\r\n *\r\n * @export\r\n * @class FormService\r\n */\r\nexport class FormService extends EventEmitter {\r\n  /**\r\n   * Gets data as XMLHttpRequest call.\r\n   *\r\n   * @param {string} serviceName\r\n   * @memberof FormService\r\n   */\r\n  getAsXMLHttpRequest(serviceName) {\r\n    return this.sendAsXMLHttpRequest('GET', [], serviceName)\r\n  }\r\n\r\n  /**\r\n   * Posts data as XMLHttpRequest call.\r\n   *\r\n   * @param {*} fieldSet\r\n   * @param {string} serviceName\r\n   * @memberof FormService\r\n   */\r\n  postAsXMLHttpRequest(fieldSet, serviceName) {\r\n    return this.sendAsXMLHttpRequest('POST', fieldSet, serviceName)\r\n  }\r\n\r\n  /**\r\n   * Sends data as XMLHttpRequest call.\r\n   *\r\n   * @param {string} method\r\n   * @param {array<object>} fieldSet\r\n   * @param {string} url\r\n   * @memberof FormService\r\n   */\r\n  sendAsXMLHttpRequest(method, fieldSet, url) {\r\n    let formData = new FormData()\r\n    for (const [key, value] of Object.entries(fieldSet)) {\r\n      formData.append(key, value)\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      let request = new XMLHttpRequest()\r\n      request.open(method, url, true)\r\n      request.addEventListener('load', () => {\r\n        if ([200, 201].includes(request.status)) {\r\n          resolve(request.responseText)\r\n        }\r\n        reject(request.responseText)\r\n      })\r\n      var csrftoken = Cookie.get('csrftoken')\r\n      if (csrftoken !== 'undefined') {\r\n        request.setRequestHeader('X-CSRFToken', csrftoken)\r\n      }\r\n      request.send(formData)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends serialized parameters as form url encoded type.\r\n   *\r\n   * @param {*} fieldSet\r\n   * @param {string} serviceName\r\n   * @returns\r\n   * @memberof FormService\r\n   */\r\n  sendAsXMLHttpFormEncodedRequest(fieldSet, serviceName) {\r\n    let data = ''\r\n    fieldSet.forEach((field) => {\r\n      data = `${data}${field.name}=${field.value}&`\r\n    })\r\n    return new Promise((resolve) => {\r\n      let request = new XMLHttpRequest()\r\n      request.open('POST', serviceName, true)\r\n      request.addEventListener('load', () => {\r\n        resolve(request.responseText)\r\n      })\r\n      request.setRequestHeader(\r\n        'Content-Type',\r\n        'application/x-www-form-urlencoded'\r\n      )\r\n      request.send(data)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends data as HTML form.\r\n   *\r\n   * @param {*} fieldSet\r\n   * @param {string} action\r\n   * @memberof FormService\r\n   */\r\n  sendAsForm(fieldSet, action) {\r\n    let html = `<form id=\"__form__\" action='${action}' method=\"POST\" enctype=\"multipart/form-data\">`\r\n    var csrftoken = Cookie.get('csrftoken')\r\n    if (csrftoken !== 'undefined') {\r\n      html += `<input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"${csrftoken}\">`\r\n    }\r\n    for (const [key, value] of Object.entries(fieldSet)) {\r\n      html += `<input type=\"hidden\" name=\"${key}\" value='${value}'>`\r\n    }\r\n    html += `</form>`\r\n    document.body.insertAdjacentHTML('beforeend', html)\r\n    const form = document.getElementById('__form__')\r\n    form.submit()\r\n  }\r\n}\r\n","export class BaseUtils {\r\n  /**\r\n   * Checks if an object is defined.\r\n   *\r\n   * @static\r\n   * @param {String} s\r\n   * @returns\r\n   * @memberof BaseUtils\r\n   */\r\n  static isObjectDefined(s) {\r\n    try {\r\n      return typeof s !== 'undefined' && s !== null\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  static isPage(urlName) {\r\n    const meta = document.querySelector(\"meta[property='emd:page']\")\r\n    if (BaseUtils.isObjectDefined(meta)) {\r\n      return meta.attributes.content.value === urlName\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Returns a hostname.\r\n   *\r\n   * @readonly\r\n   * @static\r\n   * @memberof BaseUtils\r\n   */\r\n  static get hostname() {\r\n    return window.location.hostname\r\n  }\r\n\r\n  log(message) {\r\n    console.log(message)\r\n  }\r\n}\r\n","import { BaseUtils } from './BaseUtils'\r\n\r\n/**\r\n * HTML utilities.\r\n *\r\n * @export\r\n * @class HTMLUtils\r\n */\r\nexport class HTMLUtils {\r\n  /**\r\n   * Gets an element by a selector.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static get(selector) {\r\n    const element = document.querySelector(selector)\r\n    if (!BaseUtils.isObjectDefined(element)) {\r\n      console.warn(`HTMLUtils::get Element \"${selector}\" is not defined.`)\r\n    }\r\n    return element\r\n  }\r\n\r\n  /**\r\n   * Checks if DOM element selected by given CSS selector exists.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static exists(cssSelector) {\r\n    const element = document.querySelector(cssSelector)\r\n    return BaseUtils.isObjectDefined(element)\r\n  }\r\n\r\n  /**\r\n   * Gets a default form element.\r\n   *\r\n   * @memberof HTMLUtils\r\n   */\r\n  static getForm() {\r\n    return HTMLUtils.get('form')\r\n  }\r\n\r\n  /**\r\n   * Gets DOM element value by name attribute.\r\n   *\r\n   * @static\r\n   * @param {string} name\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static getValueByName(name) {\r\n    return this.get(`*[name=\"${name}\"]`).value\r\n  }\r\n\r\n  /**\r\n   * Gets DOM input element value by name attribute.\r\n   *\r\n   * @static\r\n   * @param {string} name\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static getInputByName(name) {\r\n    return this.get(`input[name=\"${name}\"]`)\r\n  }\r\n\r\n  static getInputByClassName(name) {\r\n    return this.get(`input.${name}`)\r\n  }\r\n\r\n  static getSelectByName(name) {\r\n    return this.get(`select[name=\"${name}\"]`)\r\n  }\r\n\r\n  static getSelectByClassName(name) {\r\n    return this.get(`select.${name}`)\r\n  }\r\n\r\n  static getInputValueByName(name) {\r\n    return this.getInputByName(name).value\r\n  }\r\n\r\n  static getCheckboxValueByName(name) {\r\n    return this.getInputByName(name).checked ? 'true' : 'false'\r\n  }\r\n\r\n  static setInputValueByName(name, value) {\r\n    const inputElement = this.getInputByName(name)\r\n    if (BaseUtils.isObjectDefined(inputElement)) {\r\n      inputElement.value = value\r\n    } else {\r\n      console.warn(`setInputValueByName:: Element '${name}' is not defined.`)\r\n    }\r\n  }\r\n\r\n  static getSelectValueByName(name) {\r\n    return this.getSelectByName(name).value\r\n  }\r\n\r\n  static getSelectTextByName(name) {\r\n    return this.getSelectByName(name).selectedOptions[0].text\r\n  }\r\n\r\n  static setSelectValueByName(name, value) {\r\n    const selectElement = this.getSelectByName(name)\r\n    if (BaseUtils.isObjectDefined(selectElement)) {\r\n      selectElement.value = value\r\n    } else {\r\n      console.warn(`setSelectValueByName:: Element '${name}' is not defined.`)\r\n    }\r\n  }\r\n\r\n  static getInputValueByClassName(name) {\r\n    return this.getInputByClassName(name).value\r\n  }\r\n\r\n  static getSelectValueByClassName(name) {\r\n    return this.getSelectByClassName(name).value\r\n  }\r\n\r\n  /**\r\n   * Lists DOM elements.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static list(selector) {\r\n    const elementList = document.querySelectorAll(selector)\r\n    if (!BaseUtils.isObjectDefined(elementList)) {\r\n      console.warn(`Elements \"${selector}\" are not defined.`)\r\n    }\r\n    return elementList\r\n  }\r\n\r\n  /**\r\n   * Returns DOM elements list as Array object.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static array(selector) {\r\n    return Array.from(HTMLUtils.list(selector))\r\n  }\r\n\r\n  static firstToHTMLElement(elements) {\r\n    if (elements.length > 0) {\r\n      return elements[0]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activates DOM element created from selector by adding CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @memberof HTMLUtils\r\n   */\r\n  static activate(selector) {\r\n    const element = HTMLUtils.get(selector)\r\n    HTMLUtils.activateElement(element)\r\n  }\r\n\r\n  /**\r\n   * Activates DOM element by adding CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {HTMLElement} element\r\n   * @memberof HTMLUtils\r\n   */\r\n  static activateElement(element) {\r\n    element.classList.add('js-active')\r\n  }\r\n\r\n  /**\r\n   * Deactivates DOM element created from selector by removing CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @memberof HTMLUtils\r\n   */\r\n  static deactivate(selector) {\r\n    const element = HTMLUtils.get(selector)\r\n    HTMLUtils.deactivateElement(element)\r\n  }\r\n\r\n  /**\r\n   * Deactivates DOM element by removing CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {HTMLElement} element\r\n   * @memberof HTMLUtils\r\n   */\r\n  static deactivateElement(element) {\r\n    element.classList.remove('js-active')\r\n  }\r\n\r\n  /**\r\n   * Copies string to clipboard.\r\n   *\r\n   * @static\r\n   * @param {string} s\r\n   * @memberof HTMLUtils\r\n   */\r\n  static copyToClipboard(s) {\r\n    function listener(e) {\r\n      e.clipboardData.setData('text/html', s)\r\n      e.clipboardData.setData('text/plain', s)\r\n      e.preventDefault()\r\n    }\r\n    document.addEventListener('copy', listener)\r\n    document.execCommand('copy')\r\n    document.removeEventListener('copy', listener)\r\n  }\r\n\r\n  /**\r\n   * Decodes HTML text.\r\n   *\r\n   * @static\r\n   * @param {string} html\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static decodeHtml(html) {\r\n    var txt = document.createElement('textarea')\r\n    txt.innerHTML = html\r\n    return txt.value\r\n  }\r\n\r\n  /**\r\n   * Removes all event listeners from an html element by a class name.\r\n   *\r\n   * @param {string} className the class name\r\n   */\r\n  static removeAllEventListeners(className) {\r\n    const element = document.querySelector(className)\r\n    const newElement = element.cloneNode(element)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  /**\r\n   * Removes all event listeners from an html element by a class name.\r\n   *\r\n   * @param {string} className the class name\r\n   */\r\n   static removeAllEventListenersFromElement(element) {\r\n    const newElement = element.cloneNode(element)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  static setCookie(name, value, days = 7, path = '/') {\r\n    const expires = new Date(Date.now() + days * 864e5).toUTCString()\r\n    document.cookie =\r\n      name +\r\n      '=' +\r\n      encodeURIComponent(value) +\r\n      '; expires=' +\r\n      expires +\r\n      '; path=' +\r\n      path\r\n  }\r\n\r\n  static getCookie(name) {\r\n    return document.cookie.split('; ').reduce((r, v) => {\r\n      const parts = v.split('=')\r\n      return parts[0] === name ? decodeURIComponent(parts[1]) : r\r\n    }, '')\r\n  }\r\n\r\n  static deleteCookie(name, path) {\r\n    this.setCookie(name, '', -1, path)\r\n  }\r\n\r\n    /**\r\n   * Binds reCAPTCHA protected form submit action.\r\n   *\r\n   * @static\r\n   * @memberof HtmlUtils\r\n   */\r\n  static bindReCaptchaFormSubmit() {\r\n    const form = document.querySelector('form.g-form')\r\n    const submitButton = form.querySelector('button[data-action=submit]')\r\n\r\n    const handleSubmit = () => {\r\n      HTMLUtils.acquireReCaptchaToken(submitButton.dataset.sitekey)\r\n        .then(() => {\r\n          form.submit()\r\n        })\r\n        .catch(() => alert('Recaptcha key is invalid.'))\r\n    }\r\n\r\n    submitButton.addEventListener('click', (e) => {\r\n      e.preventDefault()\r\n      handleSubmit()\r\n    })\r\n\r\n    form.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Enter' && e.target.tagName !== 'TEXTAREA') {\r\n        e.preventDefault()\r\n        handleSubmit()\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Acquires and sets recaptcha token.\r\n   *\r\n   * @param {string} siteKey the reCAPTCHA site key\r\n   * @return {Promise} the promise\r\n   *\r\n   * @static\r\n   * @memberof HtmlUtils\r\n   */\r\n  static acquireReCaptchaToken(siteKey) {\r\n    const recaptchaTokenInput = document.querySelector(\r\n      'input[name=recaptcha_token]'\r\n    )\r\n    return new Promise((resolve, reject) => {\r\n      grecaptcha.execute(siteKey, { action: 'submit' }).then(\r\n        (token) => {\r\n          recaptchaTokenInput.value = token\r\n          resolve()\r\n        },\r\n        (reason) => {\r\n          reject(reason)\r\n        }\r\n      )\r\n    })\r\n  }\r\n}\r\n","/**\r\n * String utilities\r\n * \r\n * @export\r\n * @class StringUtils\r\n */\r\nexport class StringUtils {\r\n  \r\n  static EMPTY = \"\";\r\n  static URL_TARGET_BLANK = \"_blank\";\r\n  static URL_TARGET_SELF = \"_self\";\r\n    \r\n  /**\r\n   * Checks if a string is defined.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isDefined(s) {\r\n    return typeof s === \"string\";\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is empty.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns \r\n   * @memberof StringUtils\r\n   */\r\n  static isEmpty(s) {\r\n    return typeof s === \"string\" && s.length === 0;\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is not empty.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isNotEmpty(s) {\r\n    return !this.isEmpty(s);\r\n  }\r\n\r\n  /**\r\n   * Checks if two strings are equal.\r\n   * \r\n   * @static\r\n   * @param {string} string1 \r\n   * @param {string} string2 \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static equals(string1, string2) {\r\n    return string1 === string2; \r\n  }\r\n\r\n  /**\r\n   * Gets an unique identifier.\r\n   * \r\n   * @static\r\n   * @returns {string} \r\n   * @memberof StringUtils\r\n   */\r\n  static getUID() {\r\n    var timestamp = new Date().getTime();  \r\n    return timestamp.toString();\r\n  }\r\n\r\n  /**\r\n   * Checks if e-mail string is valid.\r\n   * \r\n   * @static\r\n   * @param {string} email \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isEmailValid(email) {\r\n    return /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(email);\r\n  }\r\n\r\n  /**\r\n   * Checks if IP address is valid.\r\n   *\r\n   * @static\r\n   * @param {*} ipAddress\r\n   * @returns\r\n   * @memberof StringUtils\r\n   */\r\n  static isIpAddressValid(ipAddress) {\r\n    return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ipAddress);\r\n  }\r\n  \r\n  /**\r\n   * Checks if URL string is valid.\r\n   * \r\n   * @static\r\n   * @param {string} url \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isUrlValid(url) {\r\n    return /((http|ftp|https):\\/\\/)?[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/.test(url);\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is a number.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isNumber(s) {\r\n    return /^-?\\d*[\\.]?\\d+$/.test(s);\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is in a currency format.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isCurrency(s) {\r\n    return /(?=.)^\\$?(([1-9][0-9]{0,2}(,[0-9]{3})*)|[0-9]+)?(\\.[0-9]{1,2})?$/.test(s);\r\n  }\r\n\r\n  /**\r\n   * Extracts Form Builder field type string.\r\n   * \r\n   * @static\r\n   * @param {string} className \r\n   * @returns {string} \r\n   * @memberof StringUtils\r\n   */\r\n  static extractFormBuilderFormFieldType(className) {\r\n    return className.split(\" \")[0].split(\"-\")[1];\r\n  }\r\n\r\n  /**\r\n   * Extracts file name from path.\r\n   * \r\n   * @static\r\n   * @param {string} path \r\n   * @returns {string} \r\n   * @memberof StringUtils\r\n   */\r\n  static extractFileNameFromPath(path) {\r\n    return path.replace(/^.*[\\\\\\/]/, '');\r\n  }\r\n\r\n  /**\r\n   * Capitalize first letter of a string.\r\n   *\r\n   * @static\r\n   * @param {string} s\r\n   * @returns {string}\r\n   * @memberof StringUtils\r\n   */\r\n  static capitalize(i) {\r\n    return i.replace(/(^| )(\\w)/g, s => s.toUpperCase());\r\n  }\r\n\r\n  /**\r\n   * Converts string to boolean.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static toBoolean(s) {\r\n    return /(true|True|1)/g.test(s);\r\n  }\r\n  \r\n  /**\r\n   * Strips string from quotes.\r\n   *\r\n   * @static\r\n   * @param {*} expression\r\n   * @returns\r\n   * @memberof StringUtils\r\n   */\r\n  static stripFromQuotes(expression) {\r\n    let matches = /(['\"]?)(.*)\\1/.exec(expression); \r\n    if (matches.length > 2) {\r\n      return matches[2];\r\n    }\r\n    return StringUtils.EMPTY;\r\n  }\r\n\r\n  static hashCode(s) {\r\n    return s.split('').reduce((prevHash, currVal) =>\r\n      ((prevHash << 5) - prevHash) + currVal.charCodeAt(0), 0);\r\n  }\r\n}","/**\r\n * Application settings.\r\n *\r\n * @export\r\n * @class ApplicationSettings\r\n */\r\nexport class ApplicationSettings {\r\n  /**\r\n   * Creates an instance of ApplicationSettings.\r\n   *\r\n   * @param {objString} obj\r\n   * @memberof ApplicationSettings\r\n   */\r\n  constructor(objString) {\r\n    this.objs = JSON.parse(objString)\r\n    this.videoAppUrl = this.objs.video_app_url\r\n    this.consoleAppUrl = this.objs.console_app_url\r\n    this.webSocketServiceUrl = this.objs.ws_service_url\r\n    this.adminEmailAddress = this.objs.admin_email_address\r\n  }\r\n\r\n  /**\r\n   * Gets value from property name.\r\n   *\r\n   * @param {string} propertyName\r\n   * @returns\r\n   * @memberof ApplicationSettings\r\n   */\r\n  getValue(propertyName) {\r\n    return this.objs.filter((obj) => obj.property === propertyName)[0].value\r\n  }\r\n}\r\n","export class ComSessionStatus {}\r\nComSessionStatus.STATUS_PENDING = 1\r\nComSessionStatus.STATUS_ENQUEUED = 2\r\nComSessionStatus.STATUS_MISSED = 3\r\nComSessionStatus.STATUS_CANCELLED = 4\r\nComSessionStatus.STATUS_REJECTED = 5\r\nComSessionStatus.STATUS_ACCEPTED = 6\r\nComSessionStatus.STATUS_COMPLETED = 7\r\n","export class UserType {}\r\nUserType.ADMIN = 'admin'\r\nUserType.GUEST = 'guest'\r\n","import { FormService } from '../../../genb/base/service/FormService'\r\nimport { ComSessionStatus } from '../model/ComSessionStatus'\r\n\r\n/**\r\n * Application REST API facade.\r\n * Points to the '{console_app_url}/api/' end.\r\n *\r\n * @export\r\n * @class ApiService\r\n * @extends {FormService}\r\n */\r\nexport class ApiService extends FormService {\r\n  constructor(baseUrl) {\r\n    super()\r\n    this.baseUrl = baseUrl\r\n  }\r\n\r\n  /**\r\n   * Gets current user.\r\n   *\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getCurrentUser() {\r\n    return this.getJson(`${this.baseUrl}/api/users/current/`)\r\n  }\r\n\r\n  /**\r\n   * Gets application settings\r\n   *\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getSettings() {\r\n    return this.getJson(`${this.baseUrl}/api/settings/`)\r\n  }\r\n\r\n  /**\r\n   * Gets user by id.\r\n   *\r\n   * @param {string} userId\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getUserById(userId) {\r\n    return this.getJson(`${this.baseUrl}/api/users/${userId}/`)\r\n  }\r\n\r\n  /**\r\n   * Gets widget by id.\r\n   *\r\n   * @param {string} widgetId\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getWidgetById(widgetId) {\r\n    return this.getJson(`${this.baseUrl}/api/widgets/${widgetId}/`)\r\n  }\r\n\r\n  /**\r\n   * Gets communication record by id.\r\n   *\r\n   * @param {string} communicationId\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getCommunicationRecord(communicationId) {\r\n    return this.getJson(\r\n      `${this.baseUrl}/api/appointments/${communicationId}/`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets Json data from XMLHttpRequest request.\r\n   *\r\n   * @param {string} actionName\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getJson(actionName) {\r\n    return this.getAsXMLHttpRequest(`${actionName}?format=json`)\r\n  }\r\n\r\n  /**\r\n   * Creates call record.\r\n   *\r\n   * @param {string} callerName\r\n   * @param {string} widgetUuid\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  createCall(userWSId, userId, widgetUuid) {\r\n    const fieldSet = {\r\n      caller_name: userWSId,\r\n      caller_id: userId,\r\n      widget_uuid: widgetUuid,\r\n    }\r\n    return this.postAsXMLHttpRequest(\r\n      fieldSet,\r\n      `${this.baseUrl}/api/appointments/`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {*} id the communication session ID \r\n   * @param {number} rate the session rate\r\n   * @returns \r\n   */\r\n  rateComSession(id, rate) {\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/com_sessions/rate/${id}/${rate}`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Cancels call record.\r\n   *\r\n   * @param {string} callerName\r\n   * @param {string} widgetUuid\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  cancelCall(id) {\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/appointments/cancel/${id}/`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets UUID from string.\r\n   *\r\n   * @param {string} str\r\n   * @memberof ApiService\r\n   */\r\n  getUuid(str) {\r\n    // TODO: make it as POST\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/com_sessions/room-uuid/${str}`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as accepted.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsAccepted(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_ACCEPTED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as rejected.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsRejected(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_REJECTED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as cancelled.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsCancelled(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_CANCELLED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as completed.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsCompleted(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_COMPLETED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as enqueued.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsEnqueued(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_ENQUEUED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status.\r\n   *\r\n   * @param {string} id\r\n   * @param {number} status\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionStatus(id, status) {\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/com_sessions/status/${id}/${status}`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets pending sessions.\r\n   *\r\n   * @memberof ApiService\r\n   */\r\n  getPendingSessions() {\r\n    return this.getAsXMLHttpRequest(`${this.baseUrl}/api/com_sessions/pending/1`)\r\n  }\r\n}\r\n","import { FormService } from '../../../genb/base/service/FormService'\r\nimport { UserType } from '../model/UserType'\r\n\r\n/**\r\n * Handles WebSocket connection.\r\n * Points to the go collider server.\r\n *\r\n * @export\r\n * @class WebSocketService\r\n * @extends {FormService}\r\n */\r\n\r\nexport class WebSocketService extends FormService {\r\n  /**\r\n   * Creates an instance of WebSocketService.\r\n   *\r\n   * @param {string} serviceUrl\r\n   * @memberof WebSocketService\r\n   */\r\n  constructor(serviceUrl) {\r\n    super()\r\n\r\n    this.url = serviceUrl\r\n    this.isOpen = false\r\n\r\n    this.openWebSocketConnection()\r\n  }\r\n\r\n  /**\r\n   * Opens server connection.\r\n   *\r\n   * @returns\r\n   * @memberof WebSocketService\r\n   */\r\n  openWebSocketConnection() {\r\n    return new Promise((resolve) => {\r\n      this.websocket = new WebSocket(this.url)\r\n      this.websocket.onopen = () => {\r\n         if (this.websocket.readyState === WebSocket.OPEN) {\r\n          this.isOpen = true\r\n          this.attachWebSocketEventHandlers()\r\n          resolve()\r\n        }\r\n      }\r\n      this.websocket.onerror = (event) => {\r\n        if (event.currentTarget.readyState === 3) {\r\n          this.emit('connection_failure')\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Attaches server event handlers.\r\n   *\r\n   * @memberof WebSocketService\r\n   */\r\n  attachWebSocketEventHandlers() {\r\n    this.websocket.onmessage = (event) => {\r\n      this.handleMessageResponse(event.data)\r\n    }\r\n    this.websocket.onclose = () => {\r\n      this.isOpen = false\r\n    }\r\n    this.websocket.onerror = (e) => {\r\n      console.log('websocket error', e)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles server response message.\r\n   *\r\n   * @param {object} response\r\n   * @memberof WebSocketService\r\n   */\r\n  handleMessageResponse(response) {\r\n    if (response === '') {\r\n      return\r\n    }\r\n\r\n    const responseJson = JSON.parse(response)\r\n    if (responseJson.error !== '') {\r\n      this.emit('error', responseJson.error)\r\n      return\r\n    }\r\n    const message = responseJson.msg\r\n    if (message !== '') {\r\n      const messageJson = JSON.parse(responseJson.msg)\r\n      switch (messageJson.type) {\r\n        case 'response':\r\n          this.handleNamedResponse(messageJson.body)\r\n          break\r\n        case 'list-clients':\r\n          this.emit('listUsers', messageJson.body)\r\n          break\r\n        case 'send':\r\n          this.handleNamedResponse(messageJson.body)\r\n          break\r\n        default:\r\n          console.log('Response type not found.')\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles named response.\r\n   *\r\n   * @param {object} responseJson\r\n   * @memberof WebSocketService\r\n   */\r\n  handleNamedResponse(response) {\r\n    if (response === '') {\r\n      return\r\n    }\r\n\r\n    const responseJson =\r\n      typeof response === 'string' ? JSON.parse(response) : response\r\n\r\n    switch (responseJson.name) {\r\n      case 'register':\r\n        this.emit('register', responseJson.status)\r\n        break\r\n      case WebSocketService.REQUEST_CALL:\r\n        this.emit(\r\n          'callRequest',\r\n          responseJson.user,\r\n          responseJson.userId,\r\n          responseJson.widget\r\n        )\r\n        break\r\n      case WebSocketService.CANCEL_CALL:\r\n        this.emit('callCancel', responseJson.recordId)\r\n        break\r\n      case WebSocketService.ACCEPT_CALL_REQUEST:\r\n        this.emit('callAccepted', responseJson.uuid)\r\n        break\r\n      case WebSocketService.REJECT_CALL_REQUEST:\r\n        this.emit('callRejected')\r\n        break\r\n      case WebSocketService.SEND_COMMUNICATION_RECORD:\r\n        this.emit('communicationRecord', responseJson.record)\r\n        break\r\n      default:\r\n        console.log('No named response found.')\r\n        break\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers the user in the multiple rooms identified by records ids.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} userType\r\n   * @param {array<object>} records\r\n   * @memberof WebSocketService\r\n   */\r\n  registerList(userId, userType, records) {\r\n    records.forEach((record) => {\r\n      this.register(userId, userType, record.id)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Registers the admin user in multiple rooms identified by\r\n   * installed widgets ids.\r\n   *\r\n   * @param {string} userId\r\n   * @param {array<object>} widgets\r\n   * @memberof WebSocketService\r\n   */\r\n  registerOperatorsList(userId, widgets) {\r\n    this.registerList(userId, UserType.ADMIN, widgets)\r\n  }\r\n\r\n  /**\r\n   * Deregisters the user from multiple rooms identified by records ids.\r\n   *\r\n   * @param {string} userId\r\n   * @param {array<object>} records\r\n   * @memberof WebSocketService\r\n   */\r\n  deregisterList(userId, records) {\r\n    records.forEach((record) => {\r\n      this.deregister(userId, record.id)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Registers the user in the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} userType\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  register(userId, userType, roomId) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'register',\r\n      clientid: userId,\r\n      clienttype: userType,\r\n      roomid: roomId,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Registers the admin user in the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  registerOperator(userId, roomId) {\r\n    this.register(userId, UserType.ADMIN, roomId)\r\n  }\r\n\r\n  /**\r\n   * Registers the guest user in the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  registerGuest(userId, roomId) {\r\n    this.register(userId, UserType.GUEST, roomId)\r\n  }\r\n\r\n  /**\r\n   * Deregisters the user from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  deregister(userId, roomId) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'deregister',\r\n      clientid: userId,\r\n      roomid: roomId,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends a message to the WebSocket server room.\r\n   *\r\n   * @param {object} user\r\n   * @param {string} message\r\n   * @memberof WebSocketService\r\n   */\r\n  send(user, message) {\r\n    this.sendWebSocketMessage({\r\n      cmd: WebSocketService.SEND,\r\n      clientid: user.uuid,\r\n      roomid: user.client_board_id,\r\n      msg: message,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends a message to the other user.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} otherUserId\r\n   * @param {string} roomId\r\n   * @param {string} message\r\n   * @memberof WebSocketService\r\n   */\r\n  sendToOther(userId, otherUserId, roomId, message) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'send-to-other',\r\n      clientid: userId,\r\n      roomid: roomId,\r\n      otherid: otherUserId,\r\n      msg: message,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Lists all clients from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} userType\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  listClients(userId, userType, roomId) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'list-clients',\r\n      clientid: userId,\r\n      clienttype: userType,\r\n      roomid: roomId,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Lists all guests from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  listGuests(userId, roomId) {\r\n    this.listClients(userId, UserType.GUEST, roomId)\r\n  }\r\n\r\n  /**\r\n   * Lists all admins from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  listAdmins(userId, roomId) {\r\n    this.listClients(userId, UserType.ADMIN, roomId)\r\n  }\r\n\r\n  /**\r\n   * Requests a call with admin user.\r\n   *\r\n   * @param {string} userWSId the user ID in the WebService\r\n   * @param {string} userId the user ID\r\n   * @param {string} adminId the operator ID\r\n   * @param {string} roomId the room ID\r\n   * @memberof WebSocketService\r\n   */\r\n  requestCall(userWSId, userId, adminId, roomId) {\r\n    this.sendToOther(\r\n      userId,\r\n      adminId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.REQUEST_CALL,\r\n          user: userWSId,\r\n          userId: userId,\r\n          widget: roomId,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Sends a cancel call request. Sent by customer.\r\n   *\r\n   * @param {string} recordId the call record id\r\n   * @param {string} userId the user id\r\n   * @param {string} adminId the admin id\r\n   * @param {string} roomId the room id\r\n   * @memberof WebSocketService\r\n   */\r\n  cancelCall(recordId, userId, adminId, roomId) {\r\n    console.log('cancel call', recordId, userId, adminId, roomId)\r\n    // cancelCall(userWSId, roomId, recordId) {\r\n    /** this.sendWebSocketMessage({\r\n      cmd: WebSocketService.SEND,\r\n      clientid: userWSId,\r\n      clienttype: UserType.GUEST,\r\n      roomid: roomId,\r\n      msg: JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.CANCEL_CALL,\r\n          user: userWSId,\r\n          widget: roomId,\r\n          record: recordId,\r\n        },\r\n      }),\r\n    })*/\r\n    this.sendToOther(\r\n      userId,\r\n      adminId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.CANCEL_CALL,\r\n          recordId: recordId\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Accepts call request.\r\n   *\r\n   * @param {string} calleeId\r\n   * @param {string} callerUserId\r\n   * @param {string} roomId\r\n   * @param {string} comSessionId\r\n   * @memberof WebSocketService\r\n   */\r\n  acceptCallRequest(calleeId, callerUserId, roomId, comSessionId) {\r\n    this.sendToOther(\r\n      calleeId,\r\n      callerUserId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.ACCEPT_CALL_REQUEST,\r\n          uuid: comSessionId,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Rejects call request.\r\n   *\r\n   * @param {string} calleeId\r\n   * @param {string} callerUserId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  rejectCallRequest(calleeId, callerUserId, roomId) {\r\n    this.sendToOther(\r\n      calleeId,\r\n      callerUserId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.REJECT_CALL_REQUEST,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Passes communication session record to remote client.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} otherUserWSId\r\n   * @param {string} roomId\r\n   * @param {object} record\r\n   * @memberof WebSocketService\r\n   */\r\n  passCommunicationRecord(userId, otherUserWSId, roomId, record) {\r\n    this.sendToOther(\r\n      userId,\r\n      otherUserWSId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.SEND_COMMUNICATION_RECORD,\r\n          record: record,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Sends the message to the WebSocket service.\r\n   *\r\n   * @param {object} message the message\r\n   * @param {boolean} persistant\r\n   * @memberof WebSocketService\r\n   */\r\n  async sendWebSocketMessage(message, persistant = true) {\r\n    if (!this.isOpen) {\r\n      await this.openWebSocketConnection()\r\n    }\r\n\r\n    message.roomtype = 'client_board'\r\n    message.persistant = String(persistant)\r\n    this.websocket.send(JSON.stringify(message))\r\n  }\r\n}\r\n\r\nWebSocketService.SEND = 'send'\r\nWebSocketService.REQUEST_CALL = 'request-call'\r\nWebSocketService.CANCEL_CALL = 'cancel-call'\r\nWebSocketService.ACCEPT_CALL_REQUEST = 'accept-call-request'\r\nWebSocketService.REJECT_CALL_REQUEST = 'reject-call-request'\r\nWebSocketService.SEND_COMMUNICATION_RECORD = 'send-communication-record'\r\n","import { BaseUtils } from '../../../genb/base/utils/BaseUtils'\r\nimport { StringUtils } from '../../../genb/base/utils/StringUtils'\r\n\r\n/**\r\n * EngagedMD service utils.\r\n *\r\n * @export\r\n * @class QhUtils\r\n */\r\nexport class QhUtils {\r\n  /**\r\n   * Checks for given page.\r\n   *\r\n   * @static\r\n   * @param {string} urlName\r\n   * @returns\r\n   * @memberof QhUtils\r\n   */\r\n  static isPage(urlName) {\r\n    const meta = document.querySelector(\"meta[property='qh:view']\")\r\n    if (BaseUtils.isObjectDefined(meta)) {\r\n      return StringUtils.equals(meta.attributes.content.value, urlName)\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Return EMD property value.\r\n   *\r\n   * @static\r\n   * @param {string} propertyName\r\n   * @returns {string} property value\r\n   * @memberof QhUtils\r\n   */\r\n  static getQhProperty(propertyName) {\r\n    const meta = document.querySelector(`meta[property='qh:${propertyName}']`)\r\n    if (BaseUtils.isObjectDefined(meta)) {\r\n      return meta.attributes.content.value\r\n    }\r\n    console.warn(`QhUtils::getQhProperty No \"${propertyName}\" property found.`)\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Returns parsed quickhellou property value.\r\n   *\r\n   * @static\r\n   * @param {string} propertyName\r\n   * @returns {object} parsed property value object\r\n   * @memberof QhUtils\r\n   */\r\n  static getQhPropertyObject(propertyName) {\r\n    return JSON.parse(QhUtils.getQhProperty(propertyName))\r\n  }\r\n\r\n  /**\r\n   * Is application in test mode.\r\n   *\r\n   * @memberof QhUtils\r\n   */\r\n  static inTestMode() {\r\n    return StringUtils.equals(QhUtils.getQhProperty('developerMode'), 'test')\r\n  }\r\n\r\n  /**\r\n   * Creates key for websocket communication that contains user id. \r\n   * \r\n   * @param {string} userId \r\n   * @returns \r\n   */\r\n  static createUserId(userId) {\r\n    return `${this.appUuid}${userId}`\r\n  }\r\n\r\n  /**\r\n   * Extracts id from user key generated for websocket identification.\r\n   * \r\n   * @param {string} key \r\n   * @returns \r\n   */\r\n  static extractUserId(key) {\r\n    return key.split(this.appUuid)[1]\r\n  }\r\n\r\n  /**\r\n   * Randomly generated application UUID.\r\n   *\r\n   * @readonly\r\n   * @static\r\n   * @memberof QhUtils\r\n   */\r\n  static get appUuid() {\r\n    return 'faf8c9f7-99f7-4b9a-8ab8-c1ec416737e7'\r\n  }\r\n}\r\n","import { UIView } from '../../genb/base/controller/UIView'\r\nimport { HTMLUtils } from '../../genb/base/utils/HTMLUtils'\r\n\r\n/**\r\n * Widget badge view.\r\n *\r\n * @export\r\n * @class BadgeView\r\n * @extends {UIView}\r\n */\r\nexport class BadgeView extends UIView {\r\n  /**\r\n   * Creates an instance of BadgeView.\r\n   *\r\n   * @param {*} service\r\n   *\r\n   * @memberof BadgeView\r\n   */\r\n  constructor(service) {\r\n    super()\r\n    this.service = service\r\n    this.element = document.getElementById('qh_w_frame')\r\n    this.extDispatcher = window.parent.document.QHDispatcher\r\n  }\r\n\r\n  /**\r\n   * Initializes the view.\r\n   *\r\n   * @memberof BadgeView\r\n   */\r\n  async init() {\r\n    this.service.addListener('listUsers', (list) => {\r\n      this.onListUsers(!!list.length)\r\n    })\r\n    this.service.addListener('admin', (e) => {\r\n      this.onAdmin(e)\r\n    })\r\n\r\n    const widgetButtonElement = this.uiGet('.widget_base')\r\n    widgetButtonElement.addEventListener('click', () => {\r\n      this.emit('collapse')\r\n      this.extDispatcher.dispatchEvent(\r\n        new CustomEvent('expand_schedule', { detail: { source: 'badge' } })\r\n      )\r\n    })\r\n\r\n    this.service.addListener('callRejected', () => {\r\n      this.onCallRejected()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Handles user register response.\r\n   *\r\n   * @param {string} e\r\n   * @memberof BadgeView\r\n   */\r\n  onUserRegister(e) {\r\n    if (e === 'ok') {\r\n      this.webSocketService.listAdmins(this.user.uuid, this.widget.uuid)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles user list refresh response.\r\n   *\r\n   * @param {boolean} anyOperatorActive\r\n   * \r\n   * @memberof BadgeView\r\n   */\r\n  onListUsers(anyOperatorActive) {\r\n    this.toggleBackgroundElementActiveState(anyOperatorActive)\r\n    if (!anyOperatorActive) {\r\n      this.toggleUserIconElements(false)\r\n    }\r\n    this.toggleTopState(!anyOperatorActive)\r\n  }\r\n\r\n  /**\r\n   * On admin user initialization.\r\n   * @param {*} adminUser \r\n   * \r\n   * @memberof BadgeView\r\n   */\r\n  onAdmin(adminUser) {\r\n    if (adminUser.thumbnail !== '') {\r\n      this.setIcon(adminUser.thumbnail)\r\n      this.toggleUserIconElements(true)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles call rejection.\r\n   * \r\n   * @memberof BadgeView\r\n   */\r\n  onCallRejected() {\r\n    this.toggleTopState(true)\r\n  }\r\n\r\n  toggleUserIconElements(force) {\r\n    const userCircleElement = document.querySelector('.widget-outlook__alert')\r\n    userCircleElement.classList.toggle('js-active', force)\r\n  }\r\n\r\n  toggleBackgroundElementActiveState(force) {\r\n    const backgroundCircleElement = document.querySelector(\r\n      '.widget-outlook__background-circle'\r\n    )\r\n    backgroundCircleElement.classList.toggle('js-active', force)\r\n  }\r\n\r\n  /**\r\n   * Sets active admin user thumbnail icon.\r\n   *\r\n   * @param {string} thumbnailPath\r\n   *\r\n   * @memberof BadgeView\r\n   */\r\n  setIcon(thumbnailPath) {\r\n    const adminThumbnailElement = this.uiGet('.widget-outlook__admin-thumbnail')\r\n    adminThumbnailElement.style.backgroundImage = `url(${this.service.consoleAppUrl}/media/${thumbnailPath})`\r\n    this.emit('setThumbnail', thumbnailPath)\r\n    this.extDispatcher.dispatchEvent(\r\n      new CustomEvent('setThumbnail', {\r\n        detail: {\r\n          'thumbnailPath': thumbnailPath,\r\n          source: 'badge',\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Toggles vertical position state.\r\n   *\r\n   * @memberof WidgetBottomBarView\r\n   */\r\n  toggleTopState(force) {\r\n    return\r\n    if (HTMLUtils.getCookie('qh_bottom_bar') === 'false') {\r\n      force = false\r\n    }\r\n    \r\n    this.isTopState = force\r\n    if (force) {\r\n      this.element.classList.add('js-top')\r\n    } else {\r\n      this.element.classList.remove('js-top')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets call request icon.\r\n   *\r\n   * @memberof BadgeView\r\n   */\r\n  setCallRequestIcon() {\r\n    const widgetIconElement = this.uiGet('.widget-outlook__icon img')\r\n    widgetIconElement.src = `${this.service.consoleAppUrl}/static/images/call-request.svg`\r\n  }\r\n\r\n  /**\r\n   * Sets call accepted icon.\r\n   *\r\n   * @memberof BadgeView\r\n   */\r\n  setCallAcceptedIcon() {\r\n    const widgetIconElement = this.uiGet('.widget-outlook__icon img')\r\n    widgetIconElement.src = `${this.service.consoleAppUrl}/static/images/call-accepted.svg`\r\n  }\r\n}\r\n","import { UIView } from '../../genb/base/controller/UIView'\r\nimport { HTMLUtils } from '../../genb/base/utils/HTMLUtils'\r\n\r\n/**\r\n * Widget schedule meeting view.\r\n *\r\n * @export\r\n * @class ContactInformationView\r\n * @extends {UIView}\r\n */\r\nexport class ContactInformationView extends UIView {\r\n  /**\r\n   * Creates an instance of ContactInformationView.\r\n   *\r\n   * @param { WidgetService } service\r\n   *\r\n   * @memberof ContactInformationView\r\n   */\r\n  constructor(service) {\r\n    super()\r\n    this.service = service\r\n    this.isExpanded = false\r\n    this.element = document.querySelector('.contact-information')\r\n    this.extDispatcher = window.parent.document.QHDispatcher\r\n  }\r\n\r\n  /**\r\n   * Initializes the view.\r\n   *\r\n   * @memberof ContactInformationView\r\n   */\r\n  async init() {\r\n    // nothing yet\r\n  }\r\n\r\n  /**\r\n   * Initializes the view.\r\n   *\r\n   * @memberof ContactInformationView\r\n   */\r\n  async load(datetime) {\r\n    await this.loadContactForm(datetime)\r\n    this.initUI()\r\n  }\r\n\r\n  initUI() {\r\n    const closeButton = document.querySelector(\r\n      '.widget-closer--contact-information'\r\n    )\r\n    closeButton.addEventListener('click', () => {\r\n      this.extDispatcher.dispatchEvent(new CustomEvent('collapse', {detail: {'source': 'contact_information'},}))\r\n    })\r\n\r\n    const backButtons = document.querySelectorAll('.contact-information__button--back')\r\n    backButtons.forEach(backButton => {\r\n      backButton.addEventListener('click', () => {\r\n        this.extDispatcher.dispatchEvent(new CustomEvent('expand_schedule', {detail: {'source': 'contact_information'},}))\r\n      })\r\n    })\r\n\r\n    const sendButtonClassName = '.contact-information__button--submit'\r\n    if (this.uiExists(sendButtonClassName)) {\r\n      HTMLUtils.removeAllEventListeners(sendButtonClassName)\r\n      const submitButtonElement = this.uiGet(sendButtonClassName)\r\n      submitButtonElement.addEventListener('click', () => {\r\n        this.sendContactForm().then(() => {\r\n          this.initUI()\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads contact form view.\r\n   *\r\n   * @param {string} datetime\r\n   * @returns\r\n   */\r\n  async loadContactForm(datetime) {\r\n    return new Promise((resolve, reject) => {\r\n      const fieldSet = {\r\n        datetime: datetime,\r\n      }\r\n\r\n      this.service\r\n        .getContactForm(fieldSet)\r\n        .then((html) => {\r\n          document.querySelector('.contact-information').innerHTML = html\r\n          resolve()\r\n        })\r\n        .catch((reason) => {\r\n          reject(reason)\r\n        })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends contact form view.\r\n   *\r\n   * @param {string} datetime\r\n   * @returns\r\n   */\r\n    async sendContactForm() {\r\n      this.showPageLoader()\r\n      const formElement = document.querySelector('.contact-information__form')\r\n      return new Promise((resolve, reject) => {\r\n        const fieldSet = {\r\n          datetime: formElement.querySelector('input[name=datetime]').value,\r\n          timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n          name: formElement.querySelector('input[name=name]').value,\r\n          email_address: formElement.querySelector('input[name=email_address]').value,\r\n          phone_number: formElement.querySelector('input[name=phone_number]').value,\r\n          message: formElement.querySelector('textarea[name=message]').value,\r\n        }\r\n  \r\n        this.service\r\n          .sendContactForm(fieldSet)\r\n          .then((html) => {\r\n            document.querySelector('.contact-information').innerHTML = html\r\n            resolve()\r\n          })\r\n          .catch((reason) => {\r\n            reject(reason)\r\n          })\r\n      })\r\n    }\r\n\r\n  /**\r\n   * Shows page loader.\r\n   *\r\n   * @memberof ContactInformationView\r\n   */\r\n  showPageLoader() {\r\n    if (this.uiExists('div.loader-wrap')) {\r\n      const pageLoader = this.uiGet('div.loader-wrap')\r\n      pageLoader.classList.add('js-active')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hides page loader.\r\n   *\r\n   * @memberof ContactInformationView\r\n   */\r\n  hidePageLoader() {\r\n    const pageLoader = this.uiGet('div.loader-wrap')\r\n    pageLoader.classList.remove('js-active')\r\n  }    \r\n}\r\n","import { UIView } from '../../genb/base/controller/UIView'\r\nimport { Scheduler } from './Scheduler'\r\n\r\n/**\r\n * Widget schedule meeting view.\r\n *\r\n * @export\r\n * @class ScheduleView\r\n * @extends {UIView}\r\n */\r\nexport class ScheduleView extends UIView {\r\n  /**\r\n   * Creates an instance of ScheduleView.\r\n   *\r\n   * @param { WidgetService } service\r\n   *\r\n   * @memberof ScheduleView\r\n   */\r\n  constructor(service) {\r\n    super()\r\n    this.service = service\r\n    this.isExpanded = false\r\n    this.element = document.querySelector('.widget--schedule')\r\n    this.extDispatcher = window.parent.document.QHDispatcher\r\n    this.scheduler = new Scheduler(this.service)\r\n  }\r\n\r\n  /**\r\n   * Initializes the view.\r\n   *\r\n   * @memberof ScheduleView\r\n   */\r\n  async init() {\r\n    const closeButton = document.querySelector('.qh_widget-closer')\r\n    closeButton.addEventListener('click', () => {\r\n      this.extDispatcher.dispatchEvent(\r\n        new CustomEvent('collapse', {\r\n          detail: {\r\n            'source': 'schedule',\r\n          },\r\n        })\r\n      )\r\n\r\n    })\r\n\r\n    const submitButton = document.querySelector(\r\n      '.widget-extension__button--send-schedule'\r\n    )\r\n    submitButton.addEventListener('click', () => {\r\n      let datetime = ''\r\n      const selectedScheduleTimeElement = document.querySelector('.scheduler__time.js-enabled')\r\n      if (!!selectedScheduleTimeElement) {\r\n        datetime = document.querySelector('.scheduler__time.js-enabled')\r\n        .dataset.time\r\n      }\r\n      if (!selectedScheduleTimeElement) {\r\n        return\r\n      }\r\n      \r\n      this.extDispatcher.dispatchEvent(\r\n        new CustomEvent('expand_contact', {\r\n          detail: {\r\n            'source': 'schedule',\r\n            'datetime': datetime\r\n          },\r\n        })\r\n      )\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Toggles the view.\r\n   *\r\n   * @memberof ScheduleView\r\n   */\r\n  toggleView() {\r\n    if (this.isExpanded) {\r\n      this.collapseView()\r\n    } else {\r\n      this.expandView()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expands the view.\r\n   *\r\n   * @memberof ScheduleView\r\n   */\r\n  expandView() {\r\n    this.isExpanded = true\r\n    this.element.classList.add('js-expanded')\r\n    this.scheduler.init()\r\n  }\r\n\r\n  /**\r\n   * Collapses the view.\r\n   *\r\n   * @memberof ScheduleView\r\n   */\r\n  collapseView() {\r\n    this.isExpanded = false\r\n    this.element.classList.remove('js-expanded')\r\n  }\r\n}\r\n","import { UIView } from '../../genb/base/controller/UIView'\r\nimport { ToggleButton } from '../../genb/base/components/ToggleButton'\r\nimport { RadioButtonsGroup } from '../../genb/base/components/RadioButtonsGroup'\r\n\r\n/**\r\n * Widget scheduler.\r\n *\r\n * @export\r\n * @class ScheduleView\r\n * @extends {UIView}\r\n */\r\nexport class Scheduler extends UIView {\r\n  /**\r\n   * Creates an instance of Scheduler.\r\n   * \r\n   * @param { WidgetService } service\r\n   *\r\n   * @memberof Scheduler\r\n   */\r\n  constructor(service) {\r\n      super()\r\n      this.service = service\r\n      this.element = document.querySelector('.widget--schedule__scheduler')\r\n\r\n      this.currentPage = 0\r\n  }\r\n\r\n  /**\r\n   * Initializes the scheduler.\r\n   *\r\n   * @memberof Scheduler\r\n  */\r\n  async init() {\r\n    await this.loadCalendar()\r\n    this.pages = document.querySelectorAll('.scheduler__page').length\r\n    const nextPageButton = document.querySelector('.scheduler__pages-nav-button--next')\r\n    nextPageButton.addEventListener('click', () => {\r\n      if (this.currentPage < this.pages-1) {\r\n        this.moveToPage(++this.currentPage)\r\n      }\r\n    })\r\n    const prevPageButton = document.querySelector('.scheduler__pages-nav-button--prev')\r\n    prevPageButton.addEventListener('click', () => {\r\n      if (this.currentPage > 0) {\r\n        this.moveToPage(--this.currentPage)\r\n      }\r\n    })\r\n    this.updatePageNavigation()\r\n    this.initDatetimeFields()\r\n  }\r\n  \r\n  moveToPage(page) {\r\n    const pagesElement = document.querySelector('.scheduler__pages')\r\n    pagesElement.style.transform = `translate(-${page * 100}%)`\r\n    this.updatePageNavigation()\r\n  }\r\n\r\n  updatePageNavigation() {\r\n    const nextPageButton = document.querySelector('.scheduler__pages-nav-button--next')\r\n    const prevPageButton = document.querySelector('.scheduler__pages-nav-button--prev')\r\n    \r\n    nextPageButton.classList.remove('js-hidden')\r\n    prevPageButton.classList.remove('js-hidden')\r\n    \r\n    if (this.currentPage === 0) {\r\n      prevPageButton.classList.add('js-hidden')\r\n    }\r\n\r\n    if (this.currentPage === this.pages - 1) {\r\n      nextPageButton.classList.add('js-hidden')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Builds the component template.\r\n   *\r\n   * @memberof Scheduler\r\n  */\r\n  initDatetimeFields() {\r\n    const radioGroup = new RadioButtonsGroup()\r\n    \r\n    const timeButtonElements = document.querySelectorAll('.scheduler__button--time')\r\n    timeButtonElements.forEach(timeButtonElement => {\r\n      const button = new ToggleButton(timeButtonElement)\r\n      radioGroup.addRadioButton(button)\r\n      timeButtonElement.addEventListener('click', () => {\r\n        this.handleTimeButtonToggle(timeButtonElement.dataset.time)\r\n      }, false)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Handles time button change.\r\n   *\r\n   * @param {*} time\r\n   * @memberof Scheduler\r\n   */\r\n  handleTimeButtonToggle(time) {\r\n    const datetimeInput = document.querySelector('input[name=datetime]')\r\n    datetimeInput.value = time\r\n    const submitButton = document.querySelector(\r\n      '.widget-extension__button--send-schedule'\r\n    )\r\n    submitButton.classList.remove('disabled')\r\n  }\r\n\r\n  /**\r\n   * Loads scheduler calendar view.\r\n   * \r\n   * @param {number} \r\n   */\r\n  async loadCalendar() {\r\n    return new Promise((resolve, reject) => {\r\n      const fieldSet = {\r\n        timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n      }\r\n      this.service.getSchedulerCalendar(fieldSet).then((html) => {\r\n        document.querySelector('.widget--schedule__datetime-controls').innerHTML = html\r\n        resolve()\r\n      }).catch(reason => {\r\n        reject(reason)\r\n      })\r\n    })\r\n  }\r\n\r\n}","import { UIView } from '../../genb/base/controller/UIView'\r\nimport { HTMLUtils } from '../../genb/base/utils/HTMLUtils'\r\n\r\n/**\r\n * Embed widget view.\r\n *\r\n * @export\r\n * @class WidgetExtensionView\r\n * @extends {UIView}\r\n */\r\nexport class WidgetExtensionView extends UIView {\r\n  /**\r\n   * Creates an instance of WidgetExtensionView.\r\n   *\r\n   * @param {*} service\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  constructor(service) {\r\n    super()\r\n    this.service = service\r\n    this.element = this.uiGet('#qh_e_frame')\r\n    this.isExpanded = false\r\n    this.videoMode = false\r\n    this.anyOperatorActive = false\r\n    this.extDispatcher = window.parent.document.QHDispatcher\r\n  }\r\n\r\n  /**\r\n   * Initializes the view.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  async init() {\r\n    this.service.addListener('admin', (adminUser) => {\r\n      this.onAdmin(adminUser)\r\n    })\r\n\r\n    this.service.addListener('listUsers', (a) => {\r\n      this.anyOperatorActive = !!a.length \r\n      this.updateVideoCallUi()\r\n    })\r\n\r\n    this.service.addListener('callAccepted', (e) => {\r\n      this.onCallAccepted(e)\r\n    })\r\n\r\n    this.service.addListener('callRejected', () => {\r\n      this.onCallRejected()\r\n    })\r\n\r\n    this.service.addListener('videochatSessionClose', () => {\r\n      this.onHangUpVideoChat()\r\n    })\r\n\r\n    const rateButtons = this.uiArray('.qh_rate-star')\r\n    rateButtons.forEach((rateButton, index) => {\r\n      rateButton.addEventListener('click', () => {\r\n        for (let a = 1; a <= rateButtons.length; a++) {\r\n          const button = this.uiGet(`.qh_rate-star:nth-child(${a})`)\r\n          button.classList.remove('js-enabled,js-disabled')\r\n          if (a <= index + 1) {\r\n            button.classList.add('js-enabled')\r\n            button.classList.remove('js-disabled')\r\n          } else {\r\n            button.classList.remove('js-enabled')\r\n            button.classList.add('js-disabled')\r\n          }\r\n        }\r\n        this.service.rateComSession(index + 1)\r\n      })\r\n    })\r\n    this.initContactForm()\r\n  }\r\n\r\n  /**\r\n   * Initializes contact form.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  initContactForm() {\r\n    const sendButtonClassName = '.widget-extension__button--send-contact'\r\n    if (this.uiExists(sendButtonClassName)) {\r\n      HTMLUtils.removeAllEventListeners(sendButtonClassName)\r\n      const submitButtonElement = this.uiGet(sendButtonClassName)\r\n      submitButtonElement.addEventListener('click', () => {\r\n        this.sendScheduleForm()\r\n      })\r\n    }\r\n    this.initInactiveOperatorCloser()\r\n  }\r\n\r\n  /**\r\n   * Initializes active operator init form.\r\n   */\r\n  initStartVideoChatForm() {\r\n    const startVideoButtonClassName = '.widget-extension__button--video-call'\r\n    if (this.uiExists(startVideoButtonClassName)) {\r\n      HTMLUtils.removeAllEventListeners(startVideoButtonClassName)\r\n      const submitButtonElement = this.uiGet(startVideoButtonClassName)\r\n      submitButtonElement.addEventListener('click', () =>\r\n        this.sendStartVideoChatForm()\r\n      )\r\n    }\r\n    this.initActiveOperatorFormCloser()\r\n  }\r\n\r\n  /**\r\n   * Initializes closer button.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  initActiveOperatorFormCloser() {\r\n    const activeOperatorFormCloserClass =\r\n      '.qh_widget-closer--active-operator-form'\r\n    if (this.uiExists(activeOperatorFormCloserClass)) {\r\n      HTMLUtils.removeAllEventListeners(activeOperatorFormCloserClass)\r\n      const collapseViewButtonElement = this.uiGet(\r\n        activeOperatorFormCloserClass\r\n      )\r\n      collapseViewButtonElement.addEventListener('click', () => {\r\n        this.collapseAndReinitActiveOperatorInitForm(false)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes rate UX closer.\r\n   */\r\n  initRateUXCloser() {\r\n    const rateUXCloserClass = '.qh_widget-closer--rate-ux'\r\n    if (this.uiExists(rateUXCloserClass)) {\r\n      HTMLUtils.removeAllEventListeners(rateUXCloserClass)\r\n      const collapseViewButtonElement = this.uiGet(rateUXCloserClass)\r\n      collapseViewButtonElement.addEventListener('click', () => {\r\n        this.collapseAndReinitActiveOperatorInitForm()\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Intializes await video call closer.\r\n   */\r\n  initAwaitVideoCallCloser() {\r\n    const awaitVideoCallCloserClass = '.qh_widget-closer--await-video-call'\r\n    if (this.uiExists(awaitVideoCallCloserClass)) {\r\n      HTMLUtils.removeAllEventListeners(awaitVideoCallCloserClass)\r\n      const awaitVideoCallCloserElement = this.uiGet(awaitVideoCallCloserClass)\r\n      awaitVideoCallCloserElement.addEventListener('click', () => {\r\n        this.cancelCall()\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Intializes video closer.\r\n   */\r\n  initVideoCloser() {\r\n    const videoCloserClass = '.qh_widget-closer--video'\r\n    if (this.uiExists(videoCloserClass)) {\r\n      HTMLUtils.removeAllEventListeners(videoCloserClass)\r\n      const videoCloserElement = this.uiGet(videoCloserClass)\r\n      videoCloserElement.addEventListener('click', () => {\r\n        this.onHangUpVideoChat()\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes inactive operator form closer.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  initInactiveOperatorCloser() {\r\n    if (this.uiExists('.qh_widget-closer--inactive-operator')) {\r\n      HTMLUtils.removeAllEventListeners('.qh_widget-closer--inactive-operator')\r\n      const collapseViewButtonElement = this.uiGet(\r\n        '.qh_widget-closer--inactive-operator'\r\n      )\r\n      collapseViewButtonElement.addEventListener('click', () => {\r\n        this.collapseAndReinitInactiveOperatorInitForm()\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collapses view and reinits active operator form.\r\n   *\r\n   * @param {*} forceDestroyVideoChat\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  collapseAndReinitActiveOperatorInitForm(forceDestroyVideoChat = true) {\r\n    this.deactivateVideoMode()\r\n    this.service.getActiveOperatorInitForm().then((html) => {\r\n      document.querySelector('.qh_video-ui_replace').innerHTML = html\r\n      this.activateActiveOperatorInitForm()\r\n      this.collapseView()\r\n      this.dispatchExtEvent('collapse')\r\n      if (forceDestroyVideoChat) {\r\n        this.service.destroyVideoChatApp()\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Collapses view and reinits inactive operator form.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  collapseAndReinitInactiveOperatorInitForm() {\r\n    this.service.getInactiveOperatorInitForm().then((html) => {\r\n      document.querySelector('.contact-form').innerHTML = html\r\n      this.initContactForm()\r\n      this.collapseView()\r\n      this.dispatchExtEvent('collapse')\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends schedule form.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n   sendScheduleForm() {\r\n    const fieldSet = {\r\n      name: document.querySelector('.qh_module--inactive-form input[name=name]')\r\n        .value,\r\n      email_address: document.querySelector(\r\n        '.qh_module--inactive-form input[name=email_address]'\r\n      ).value,\r\n      phone_number: document.querySelector('input[name=phone_number]').value,\r\n      datetime: document.querySelector('input[name=datetime]').value,\r\n    }\r\n    this.service\r\n      .sendScheduleForm(fieldSet)\r\n      .then((response) => {\r\n        document.querySelector('.contact-form').innerHTML = response\r\n        this.initContactForm()\r\n        this.collapseView()\r\n      })\r\n      .catch((reason) => {\r\n        console.log('reason', reason)\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Sends start video chat form.\r\n   */\r\n  sendStartVideoChatForm() {\r\n    const fieldSet = {\r\n      name: document.querySelector('.qh_active-user-form__input[name=name]')\r\n        .value,\r\n      email_address: document.querySelector(\r\n        '.qh_active-user-form__input[name=email_address]'\r\n      ).value,\r\n      phone_number: document.querySelector(\r\n        '.qh_active-user-form__input[name=phone_number]'\r\n      ).value,\r\n    }\r\n    this.service\r\n      .sendStartVideoChatForm(fieldSet)\r\n      .then((response) => {\r\n        document.querySelector('.qh_video-ui_replace').innerHTML = response\r\n        const resultElement = this.uiGet('.qh_com-status')\r\n        const status = resultElement.dataset.status\r\n        const userId = resultElement.dataset.userid\r\n        this.service.setUserId(userId)\r\n        if (status === 'ok') {\r\n          this.requestCall()\r\n          this.initAwaitVideoCallCloser()\r\n        } else {\r\n          this.initStartVideoChatForm()\r\n        }\r\n      })\r\n      .catch((reason) => {\r\n        console.log('reason', reason)\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Handles admin user.\r\n   *\r\n   * @param {object} adminUser\r\n   */\r\n  onAdmin(adminUser) {\r\n    this.adminUser = adminUser\r\n    const adminNameElement = this.uiGet('.active-user__admin-name')\r\n    const firstName = adminUser.full_name.split(' ')[0]\r\n    adminNameElement.innerHTML = firstName\r\n  }\r\n\r\n  setThumbnails(thumbnailPath) {\r\n    const adminThumbnailElements = this.uiArray('.active-user-form__thumbnail')\r\n    adminThumbnailElements.forEach((adminThumbnailElement) => {\r\n      adminThumbnailElement.style.backgroundImage = `url(${this.service.consoleAppUrl}/media/${thumbnailPath})`\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Toggles the view.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  toggleView() {\r\n    if (this.isExpanded) {\r\n      this.collapseView()\r\n      this.dispatchExtEvent('collapse')\r\n    } else {\r\n      this.expandView()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expands the view.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  expandView() {\r\n    this.isExpanded = true\r\n    this.element.classList.add('js-expanded')\r\n  }\r\n\r\n  /**\r\n   * Collapses the view.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  collapseView() {\r\n    this.isExpanded = false\r\n    this.element.classList.remove('js-expanded')\r\n    this.deactivateVideoMode()\r\n  }\r\n\r\n  /**\r\n   * Enables video call UI when number if any admin is active.\r\n   *\r\n   * @param {boolean} anyOperatorActive\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  updateVideoCallUi() {\r\n    const activeOperatorElement = this.uiGet('.qh_module--active-operator')\r\n    activeOperatorElement.classList.toggle('js-enabled', this.anyOperatorActive)\r\n    const inactiveOperatorForm = this.uiGet('.qh_module--inactive-form')\r\n    inactiveOperatorForm.classList.toggle('js-enabled', !this.anyOperatorActive)\r\n    if (!this.anyOperatorActive) {\r\n      this.activateCallDefaultStage()\r\n    } else if (!this.videoMode) {\r\n      this.activateActiveOperatorInitForm()\r\n      this.emit('collapse')\r\n      this.dispatchExtEvent('expand')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Requests a call.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  requestCall() {\r\n    this.service.requestCall()\r\n  }\r\n\r\n  /**\r\n   * Cancels a call.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  cancelCall() {\r\n    this.service.cancelCall()\r\n    if (!this.anyOperatorActive) {\r\n      this.activateCallDefaultStage()\r\n    } else if (!this.videoMode) {\r\n      this.collapseAndReinitActiveOperatorInitForm(false)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles call accepted event.\r\n   *\r\n   * @param {string} url\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  onCallAccepted(roomId) {\r\n    const urlElement = this.uiGet('meta[name=room_id]')\r\n    urlElement.setAttribute('content', roomId)\r\n    this.activateVideoChat()\r\n  }\r\n\r\n  deleteRoomId() {\r\n    const urlElement = this.uiGet('meta[name=room_id]')\r\n    urlElement.setAttribute('content', '')\r\n  }\r\n\r\n  /**\r\n   * Handles call rejected event.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  onCallRejected() {\r\n    this.activateCallRejectedStage()\r\n  }\r\n\r\n  activateCallRejectedStage() {\r\n    const line1Element = this.uiGet('.qh_video-ui_awating--line1')\r\n    line1Element.classList.add('qh_tight')\r\n    line1Element.innerHTML = 'Sorry, all of our operators are busy, we will email you shortly!'\r\n    const line2Element = this.uiGet('.qh_video-ui_awating--line2')\r\n    line2Element.remove()\r\n  }\r\n\r\n  /**\r\n   * Activates default video UI stage.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  activateCallDefaultStage() {\r\n    this.deactivateAllStages()\r\n    const stageElement = this.uiGet('.qh_module--inactive-form')\r\n    stageElement.classList.add('js-enabled')\r\n    this.deactivateVideoMode()\r\n  }\r\n\r\n  /**\r\n   * Activates video call request UI stage.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  activateActiveOperatorInitForm() {\r\n    this.deactivateAllStages()\r\n    const stageElement = this.uiGet('.qh_submodule--init-form')\r\n    stageElement.classList.add('js-enabled')\r\n    this.initStartVideoChatForm()\r\n  }\r\n\r\n  /**\r\n   * Activates the rate UX form submdule.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  activateRateUxForm() {\r\n    this.deactivateAllStages()\r\n    const stageElement = this.uiGet('.qh_submodule--rate-ux')\r\n    stageElement.classList.add('js-enabled')\r\n    this.initRateUXCloser()\r\n  }\r\n\r\n  /**\r\n   * Activates video chat.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  activateVideoChat() {\r\n    this.deactivateAllStages()\r\n    const stageElement = this.uiGet('.qh_submodule--video-chat')\r\n    stageElement.classList.add('js-enabled')\r\n    this.activateVideoMode()\r\n\r\n    const joinButton = this.uiGet('.confirm-join-button')\r\n    joinButton.addEventListener('click', () => {\r\n      this.onJoinVideoChat()\r\n    })\r\n\r\n    const hangupButton = this.uiGet('.button--hangup')\r\n    hangupButton.addEventListener('click', () => {\r\n      this.onHangUpVideoChat()\r\n    })\r\n\r\n    this.initVideoCloser()\r\n  }\r\n\r\n  onJoinVideoChat() {}\r\n\r\n  /**\r\n   * Handles call close.\r\n   */\r\n  onHangUpVideoChat() {\r\n    this.activateRateUxForm()\r\n    this.activateVideoMode()\r\n    this.deleteRoomId()\r\n  }\r\n\r\n  /**\r\n   * Deactivates all submodules.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  deactivateAllStages() {\r\n    const stageElements = this.uiArray('.qh_submodule')\r\n    stageElements.forEach((stageElement) => {\r\n      stageElement.classList.remove('js-enabled')\r\n    })\r\n    this.deactivateVideoMode()\r\n  }\r\n\r\n  /**\r\n   * Activates video mode.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  activateVideoMode() {\r\n    this.element.classList.add('qh_video-mode')\r\n    this.videoMode = true\r\n  }\r\n\r\n  /**\r\n   * Deactivates video mode.\r\n   *\r\n   * @memberof WidgetExtensionView\r\n   */\r\n  deactivateVideoMode() {\r\n    this.element.classList.remove('qh_video-mode')\r\n    this.videoMode = false\r\n    // remove connection data from videochat app\r\n  }\r\n\r\n  dispatchExtEvent(eventName) {\r\n    this.extDispatcher.dispatchEvent(\r\n      new CustomEvent(eventName, {\r\n        detail: {\r\n          source: 'widgetExtView',\r\n        }\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { EventEmitter } from '../../genb/base/service/EventEmitter'\r\nimport { WebSocketService } from '../base/services/WebSocketService'\r\nimport { ApiService } from '../base/services/ApiService'\r\nimport { ApplicationSettings } from '../base/model/ApplicationSettings'\r\nimport { QhUtils } from '../base/utils/QhUtils'\r\n\r\n/**\r\n * The widget collective service.\r\n *\r\n * @extends EventEmitter\r\n */\r\nexport class WidgetService extends EventEmitter {\r\n  /**\r\n   * Creates an instance of WidgetService.\r\n   *\r\n   * @param {string} consoleAppUrl the console app URL address\r\n   * @param {string} widgetId the widget ID\r\n   */\r\n  constructor(consoleAppUrl, widgetId) {\r\n    super()\r\n    this.apiService = new ApiService(consoleAppUrl)\r\n    this.consoleAppUrl = consoleAppUrl\r\n    this.widgetId = widgetId\r\n    this.users = []\r\n  }\r\n\r\n  /**\r\n   * Initializes the service.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  async init() {\r\n    return new Promise((resolve, reject) => {\r\n      this.apiService.getSettings().then((appSettingsJson) => {\r\n        this.appSettings = new ApplicationSettings(appSettingsJson)\r\n        try {\r\n          this.apiService.getWidgetById(this.widgetId).then((widgetObject) => {\r\n            this.widget = JSON.parse(widgetObject)\r\n            this.install().then((response) => {\r\n              const responseJson = JSON.parse(response)\r\n              if (responseJson.status === 'failure') {\r\n                reject(responseJson.result)\r\n              }\r\n\r\n              this.webSocketService = new WebSocketService(\r\n                this.appSettings.webSocketServiceUrl\r\n              )\r\n\r\n              this.webSocketService.addListener('register', (e) => {\r\n                this.onUserRegister(e)\r\n              })\r\n              this.webSocketService.addListener('listUsers', (e) => {\r\n                this.onListUsers(e)\r\n              })\r\n\r\n              this.webSocketService.addListener('callAccepted', (e) => {\r\n                this.onCallAccepted(e)\r\n              })\r\n\r\n              this.webSocketService.addListener('callRejected', () => {\r\n                this.onCallRejected()\r\n              })\r\n\r\n              this.webSocketService.addListener('error', (error) => {\r\n                this.emit('error', error)\r\n              })\r\n\r\n              this.webSocketService.addListener(\r\n                'communicationRecord',\r\n                (record) => {\r\n                  this.onCommunicationRecord(record)\r\n                }\r\n              )\r\n\r\n              this.user = {\r\n                uuid: 'guest_' + String(Math.floor(Date.now() / 1000)),\r\n                roomId: this.widget.uuid,\r\n              }\r\n              this.webSocketService.registerGuest(\r\n                this.user.uuid,\r\n                this.widget.uuid\r\n              )\r\n\r\n              // attach videochat events\r\n              try {\r\n                this.videochatProxy = videochat.proxy()\r\n                this.videochatProxy.addEventListener('close', () => {\r\n                  this.onCloseVideoChat()\r\n                })\r\n                this.videochatProxy.addEventListener('remote_hangup', () => {\r\n                  this.onCloseVideoChat()\r\n                })\r\n              } catch (e) {\r\n                // console.log('Videochat is not defined.')\r\n              }\r\n\r\n              resolve()\r\n            })\r\n          })\r\n        } catch (e) {\r\n          // console.log(e)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Removes connection data in the videochat application.\r\n   */\r\n  destroyVideoChatApp() {\r\n    try {\r\n      this.videochatProxy.destroy()\r\n    } catch (e) {\r\n      console.log('e', e)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles videochat session close.\r\n   */\r\n  onCloseVideoChat() {\r\n    this.emit('videochatSessionClose')\r\n  }\r\n\r\n  /**\r\n   * Requests a call with an active admin.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  requestCall() {\r\n    const adminUuid = this.admins[0]\r\n    this.webSocketService.requestCall(\r\n      this.user.uuid,\r\n      this.user.userId,\r\n      adminUuid,\r\n      this.widget.uuid\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Cancels a call request.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  cancelCall() {\r\n    const adminUuid = this.admins[0]\r\n    this.webSocketService.cancelCall(\r\n      this.sessionRecord.id,\r\n      this.user.userId,\r\n      adminUuid,\r\n      this.widget.uuid\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Handles user register response.\r\n   *\r\n   * @param {string} response the response\r\n   * @memberof WidgetService\r\n   */\r\n  onUserRegister(response) {\r\n    if (response === 'ok') {\r\n      this.webSocketService.listAdmins(this.user.uuid, this.widget.uuid)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles user list refresh response.\r\n   *\r\n   * @param {array<string>} a\r\n   * @memberof WidgetService\r\n   */\r\n  onListUsers(a) {\r\n    this.admins = a\r\n    this.emit('listUsers', a)\r\n\r\n    if (a.length) {\r\n      const adminId = QhUtils.extractUserId(a[0])\r\n      this.getUser(adminId).then((user) => {\r\n        this.emit('admin', user)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles call accept notification.\r\n   *\r\n   * @param {string} uuid the UUID string\r\n   * @memberof WidgetService\r\n   */\r\n  async onCallAccepted(uuid) {\r\n    this.emit('callAccepted', uuid)\r\n  }\r\n\r\n  /**\r\n   * Handles call reject notification.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  onCallRejected() {\r\n    this.emit('callRejected')\r\n    // this.destroyVideoChatApp()\r\n  }\r\n\r\n  /**\r\n   * Handles communication record.\r\n   *\r\n   * @param {object} record the communication record\r\n   */\r\n  onCommunicationRecord(record) {\r\n    this.sessionRecord = record\r\n  }\r\n\r\n  /**\r\n   * Sends contact form.\r\n   *\r\n   * @param {array<object>} fieldSet the field set\r\n   */\r\n  sendScheduleForm(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/widget_schedule/${\r\n      this.widgetId\r\n    }/${encodeURIComponent(window.location.hostname.toLowerCase())}/${\r\n      this.widget.uuid\r\n    }`\r\n    return this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Sends start video chat form.\r\n   *\r\n   * @param {object} fieldSet\r\n   * @returns the response\r\n   */\r\n  sendStartVideoChatForm(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/widget_active_operator/${\r\n      this.widgetId\r\n    }/${encodeURIComponent(window.location.hostname.toLowerCase())}/${\r\n      this.widget.uuid\r\n    }`\r\n    return this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Installs the widget.\r\n   *\r\n   * @returns true if installed correctly.\r\n   */\r\n  async install() {\r\n    const url = `${this.consoleAppUrl}/dashboard/install/${\r\n      this.widgetId\r\n    }/${encodeURIComponent(window.location.hostname.toLowerCase())}/${\r\n      this.widget.uuid\r\n    }`\r\n    return this.apiService.postAsXMLHttpRequest({}, url)\r\n  }\r\n\r\n  /**\r\n   * Gets user by user ID.\r\n   *\r\n   * @param {*} userId\r\n   * @returns\r\n   */\r\n  async getUser(userId) {\r\n    let userJson = await this.apiService.getUserById(userId)\r\n    return JSON.parse(userJson)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session rate.\r\n   *\r\n   * @param {number} rate\r\n   * @returns\r\n   */\r\n  async rateComSession(rate) {\r\n    let resultJson = await this.apiService.rateComSession(\r\n      this.sessionRecord.id,\r\n      rate\r\n    )\r\n    return JSON.parse(resultJson)\r\n  }\r\n\r\n  /**\r\n   * Sets local user ID.\r\n   *\r\n   * @param {number} userId\r\n   */\r\n  setUserId(userId) {\r\n    this.user.userId = userId\r\n  }\r\n\r\n  /**\r\n   * Gets an active operator init form template.\r\n   *\r\n   * @returns the template string\r\n   */\r\n  async getActiveOperatorInitForm() {\r\n    return await this.apiService.getAsXMLHttpRequest(\r\n      `${this.consoleAppUrl}/dashboard/active_operator_init_form`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets an inactive operator init form template.\r\n   *\r\n   * @returns the template string\r\n   */\r\n  async getInactiveOperatorInitForm() {\r\n    return await this.apiService.getAsXMLHttpRequest(\r\n      `${this.consoleAppUrl}/dashboard/inactive_operator_init_form`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets scheduler calendar.\r\n   *\r\n   * @returns the scheduler calendar\r\n   */\r\n  async getSchedulerCalendar(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/widget_calendar_view/${this.widgetId}`\r\n    return await this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Gets widget contact form.\r\n   *\r\n   * @param {array<object>} fieldSet the field set\r\n   *\r\n   * @returns the contact form view\r\n   */\r\n  async getContactForm(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/add_widget_contact_form_view/${this.widgetId}`\r\n    return await this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Gets widget contact form.\r\n   *\r\n   * @param {array<object>} fieldSet the field set\r\n   *\r\n   * @returns the contact form view\r\n   */\r\n    async sendContactForm(fieldSet) {\r\n      const url = `${this.consoleAppUrl}/dashboard/edit_widget_contact_form_view/${this.widgetId}`\r\n      return await this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Widget views root application.\r\n*/\r\n\r\nimport { WidgetService } from './com/quickhellou/widget/WidgetService'\r\nimport { BadgeView } from './com/quickhellou/widget/BadgeView'\r\nimport { ScheduleView } from './com/quickhellou/widget/ScheduleView'\r\nimport { WidgetExtensionView } from './com/quickhellou/widget/WidgetExtensionView'\r\nimport { ContactInformationView } from './com/quickhellou/widget/ContactInformationView'\r\n\r\n// data\r\nconst consoleAppUrl = document.querySelector('.qh-root').dataset.url\r\nconst widgetId = document.querySelector('.qh-root').dataset.id\r\n// service\r\nconst widgetService = new WidgetService(consoleAppUrl, widgetId)\r\nwidgetService\r\n  .init()\r\n  .then(() => {\r\n    // views\r\n    const badgeView = new BadgeView(widgetService)\r\n    const extView = new WidgetExtensionView(widgetService)\r\n    const scheduleView = new ScheduleView(widgetService)\r\n    const contactInformationView = new ContactInformationView(widgetService)\r\n    const extDispatcher = window.parent.document.QHDispatcher\r\n\r\n    // event handlers\r\n    extDispatcher.addEventListener('collapse', () => {\r\n      scheduleView.collapseView()\r\n      extView.collapseView()\r\n    }, false)\r\n    extDispatcher.addEventListener('expand_contact', (event) => {\r\n      extView.expandView()\r\n      scheduleView.collapseView()\r\n      contactInformationView.load(event.detail.datetime)\r\n    }, false)\r\n    extDispatcher.addEventListener('expand_schedule', () => {\r\n      scheduleView.expandView()\r\n      extView.collapseView()\r\n    }, false)\r\n    extDispatcher.addEventListener('setThumbnail', (path) => {\r\n      extView.setThumbnails(path)\r\n    }, false)\r\n    \r\n    // init widget modules\r\n    badgeView.init()\r\n    extView.init()\r\n    scheduleView.init()\r\n    contactInformationView.init()\r\n\r\n    // init\r\n    document.querySelector('.qh-root').classList.add('active')\r\n  })\r\n  .catch((reason) => {\r\n    document.querySelector('.qh-root').style.opacity = 1\r\n    document.querySelector('.qh-root').classList.add('failure')\r\n    document.querySelector('.qh-root').innerHTML = reason\r\n  })\r\n"],"names":["_defineProperty","e","r","t","Object","defineProperty","value","enumerable","configurable","writable","toPrimitive","Symbol","i","call","TypeError","String","Number","toPropertyKey","_typeof","o","iterator","constructor","prototype","assign","target","arguments","length","source","key","api","init","converter","defaultAttributes","set","name","attributes","document","expires","Date","now","toUTCString","encodeURIComponent","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","split","cookie","write","create","get","cookies","jar","parts","slice","join","found","read","remove","withAttributes","this","withConverter","freeze","path","RadioButtonsGroup","UIView","super","elements","addRadioButton","button","push","element","addEventListener","disableAll","enable","forEach","disable","ToggleButton","enabled","toggle","classList","add","ObservableController","observable","EventEmitter","addListener","label","callback","removeListener","emit","_len","args","Array","_key","uiGet","cssSelector","HTMLUtils","uiExists","exists","uiArray","array","removeListeners","newElement","cloneNode","parentNode","replaceChild","removeElementListeners","removeListListeners","listeners","Map","has","index","reduce","listener","isFunction","splice","obj","FormService","getAsXMLHttpRequest","serviceName","sendAsXMLHttpRequest","postAsXMLHttpRequest","fieldSet","method","url","formData","FormData","entries","append","Promise","resolve","reject","request","XMLHttpRequest","open","includes","status","responseText","csrftoken","Cookie","setRequestHeader","send","sendAsXMLHttpFormEncodedRequest","data","field","sendAsForm","action","html","body","insertAdjacentHTML","getElementById","submit","BaseUtils","isObjectDefined","s","isPage","urlName","meta","querySelector","content","hostname","window","location","log","message","console","selector","warn","getForm","getValueByName","getInputByName","getInputByClassName","getSelectByName","getSelectByClassName","getInputValueByName","getCheckboxValueByName","checked","setInputValueByName","inputElement","getSelectValueByName","getSelectTextByName","selectedOptions","text","setSelectValueByName","selectElement","getInputValueByClassName","getSelectValueByClassName","list","elementList","querySelectorAll","from","firstToHTMLElement","activate","activateElement","deactivate","deactivateElement","copyToClipboard","clipboardData","setData","preventDefault","execCommand","removeEventListener","decodeHtml","txt","createElement","innerHTML","removeAllEventListeners","className","removeAllEventListenersFromElement","setCookie","days","undefined","getCookie","v","deleteCookie","bindReCaptchaFormSubmit","form","submitButton","handleSubmit","acquireReCaptchaToken","dataset","sitekey","then","catch","alert","tagName","siteKey","recaptchaTokenInput","grecaptcha","execute","token","reason","StringUtils","isDefined","isEmpty","isNotEmpty","equals","string1","string2","getUID","getTime","toString","isEmailValid","email","test","isIpAddressValid","ipAddress","isUrlValid","isNumber","isCurrency","extractFormBuilderFormFieldType","extractFileNameFromPath","capitalize","toUpperCase","toBoolean","stripFromQuotes","expression","matches","exec","EMPTY","hashCode","prevHash","currVal","charCodeAt","ApplicationSettings","objString","objs","JSON","parse","videoAppUrl","video_app_url","consoleAppUrl","console_app_url","webSocketServiceUrl","ws_service_url","adminEmailAddress","admin_email_address","getValue","propertyName","filter","property","ComSessionStatus","STATUS_PENDING","STATUS_ENQUEUED","STATUS_MISSED","STATUS_CANCELLED","STATUS_REJECTED","STATUS_ACCEPTED","STATUS_COMPLETED","UserType","ADMIN","GUEST","ApiService","baseUrl","getCurrentUser","getJson","getSettings","getUserById","userId","getWidgetById","widgetId","getCommunicationRecord","communicationId","actionName","createCall","userWSId","widgetUuid","caller_name","caller_id","widget_uuid","rateComSession","id","rate","cancelCall","getUuid","str","setComSessionAsAccepted","setComSessionStatus","setComSessionAsRejected","setComSessionAsCancelled","setComSessionAsCompleted","setComSessionAsEnqueued","getPendingSessions","WebSocketService","serviceUrl","isOpen","openWebSocketConnection","websocket","WebSocket","onopen","readyState","OPEN","attachWebSocketEventHandlers","onerror","event","currentTarget","onmessage","handleMessageResponse","onclose","response","responseJson","error","msg","messageJson","type","handleNamedResponse","REQUEST_CALL","user","widget","CANCEL_CALL","recordId","ACCEPT_CALL_REQUEST","uuid","REJECT_CALL_REQUEST","SEND_COMMUNICATION_RECORD","record","registerList","userType","records","register","registerOperatorsList","widgets","deregisterList","deregister","roomId","sendWebSocketMessage","cmd","clientid","clienttype","roomid","registerOperator","registerGuest","SEND","client_board_id","sendToOther","otherUserId","otherid","listClients","listGuests","listAdmins","requestCall","adminId","stringify","acceptCallRequest","calleeId","callerUserId","comSessionId","rejectCallRequest","passCommunicationRecord","otherUserWSId","persistant","roomtype","QhUtils","getQhProperty","getQhPropertyObject","inTestMode","createUserId","appUuid","extractUserId","BadgeView","service","extDispatcher","parent","QHDispatcher","onListUsers","onAdmin","dispatchEvent","CustomEvent","detail","onCallRejected","onUserRegister","webSocketService","anyOperatorActive","toggleBackgroundElementActiveState","toggleUserIconElements","toggleTopState","adminUser","thumbnail","setIcon","force","thumbnailPath","style","backgroundImage","setCallRequestIcon","src","setCallAcceptedIcon","ContactInformationView","isExpanded","load","datetime","loadContactForm","initUI","backButton","sendButtonClassName","sendContactForm","getContactForm","showPageLoader","formElement","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","email_address","phone_number","hidePageLoader","ScheduleView","scheduler","Scheduler","selectedScheduleTimeElement","time","toggleView","collapseView","expandView","currentPage","loadCalendar","pages","moveToPage","updatePageNavigation","initDatetimeFields","page","transform","nextPageButton","prevPageButton","radioGroup","timeButtonElement","handleTimeButtonToggle","getSchedulerCalendar","WidgetExtensionView","videoMode","a","updateVideoCallUi","onCallAccepted","onHangUpVideoChat","rateButtons","rateButton","initContactForm","sendScheduleForm","initInactiveOperatorCloser","initStartVideoChatForm","startVideoButtonClassName","sendStartVideoChatForm","initActiveOperatorFormCloser","activeOperatorFormCloserClass","collapseAndReinitActiveOperatorInitForm","initRateUXCloser","rateUXCloserClass","initAwaitVideoCallCloser","awaitVideoCallCloserClass","initVideoCloser","videoCloserClass","collapseAndReinitInactiveOperatorInitForm","forceDestroyVideoChat","deactivateVideoMode","getActiveOperatorInitForm","activateActiveOperatorInitForm","dispatchExtEvent","destroyVideoChatApp","getInactiveOperatorInitForm","resultElement","userid","setUserId","adminNameElement","firstName","full_name","setThumbnails","adminThumbnailElement","activateCallDefaultStage","setAttribute","activateVideoChat","deleteRoomId","activateCallRejectedStage","line1Element","deactivateAllStages","activateRateUxForm","activateVideoMode","onJoinVideoChat","stageElement","eventName","WidgetService","apiService","users","appSettingsJson","appSettings","widgetObject","install","result","onCommunicationRecord","Math","floor","videochatProxy","videochat","proxy","onCloseVideoChat","destroy","adminUuid","admins","sessionRecord","getUser","toLowerCase","userJson","resultJson","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","prop","hasOwnProperty","toStringTag","widgetService","badgeView","extView","scheduleView","contactInformationView","opacity"],"sourceRoot":""}