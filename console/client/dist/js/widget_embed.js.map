{"version":3,"file":"js/widget_embed.js","mappings":"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","sources":["webpack:///./js/com/genb/base/controller/ObservableController.js","webpack:///./js/com/genb/base/controller/UIView.js","webpack:///./js/com/genb/base/service/EventEmitter.js","webpack:///./js/com/genb/base/service/FormService.js","webpack:///./js/com/genb/base/utils/BaseUtils.js","webpack:///./js/com/genb/base/utils/HTMLUtils.js","webpack:///./js/com/genb/base/utils/StringUtils.js","webpack:///./js/com/quickhellou/base/model/ApplicationSettings.js","webpack:///./js/com/quickhellou/base/model/ComSessionStatus.js","webpack:///./js/com/quickhellou/base/model/UserType.js","webpack:///./js/com/quickhellou/base/services/ApiService.js","webpack:///./js/com/quickhellou/base/services/WebSocketService.js","webpack:///./js/com/quickhellou/base/utils/QhUtils.js","webpack:///./js/com/quickhellou/widget/WidgetEmbedView.js","webpack:///./js/com/quickhellou/widget/WidgetService.js","webpack:///../../node_modules/js-cookie/src/js.cookie.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./js/widget_embed.js"],"sourcesContent":["import { EventEmitter } from '../service/EventEmitter'\r\n\r\n/**\r\n * Event emitter controller.\r\n *\r\n * @export\r\n * @class ObservableController\r\n */\r\nexport class ObservableController {\r\n  /**\r\n   * Creates an instance of ObservableController.\r\n   *\r\n   * @memberof ObservableController\r\n   */\r\n  constructor() {\r\n    this.observable = new EventEmitter()\r\n  }\r\n\r\n  /**\r\n   * Adds emitter listener.\r\n   *\r\n   * @param {string} label\r\n   * @param {*} callback\r\n   * @memberof ObservableController\r\n   */\r\n  addListener(label, callback) {\r\n    this.observable.addListener(label, callback)\r\n  }\r\n\r\n  /**\r\n   * Removes emitter listener.\r\n   *\r\n   * @param {string} label\r\n   * @param {*} callback\r\n   * @memberof ObservableController\r\n   */\r\n  removeListener(label, callback) {\r\n    this.observable.removeListener(label, callback)\r\n  }\r\n\r\n  /**\r\n   * Emits an event.\r\n   *\r\n   * @param {string} label\r\n   * @param {*} args\r\n   * @memberof ObservableController\r\n   */\r\n  emit(label, ...args) {\r\n    this.observable.emit(label, ...args)\r\n  }\r\n}\r\n","import { ObservableController } from './ObservableController'\r\nimport { HTMLUtils } from '../utils/HTMLUtils'\r\n\r\n/**\r\n * UI view facade.\r\n *\r\n * @export\r\n * @class UIViewController\r\n * @extends {ObservableController}\r\n */\r\nexport class UIView extends ObservableController {\r\n  /**\r\n   * Gets DOM element by a CSS selector.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @returns\r\n   * @memberof UIViewController\r\n   */\r\n  uiGet(cssSelector) {\r\n    return HTMLUtils.get(cssSelector)\r\n  }\r\n\r\n  /**\r\n   * Checks if DOM element selected by given CSS selector exists.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @returns\r\n   * @memberof UIViewController\r\n   */\r\n  uiExists(cssSelector) {\r\n    return HTMLUtils.exists(cssSelector)\r\n  }\r\n\r\n  /**\r\n   * Returns DOM elements list selected by given CSS selector as Array object.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @returns {Array<HTMLElement>}\r\n   * @memberof UIView\r\n   */\r\n  uiArray(cssSelector) {\r\n    return HTMLUtils.array(cssSelector)\r\n  }\r\n\r\n  /**\r\n   * Removes all listeners by replacing it with a clone.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @memberof UIView\r\n   */\r\n  removeListeners(cssSelector) {\r\n    var element = this.uiGet(cssSelector)\r\n    var newElement = element.cloneNode(true)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  /**\r\n   * Removes all element listeners by replacing it with a clone.\r\n   *\r\n   * @param {HTMLElement} element\r\n   * @memberof UIView\r\n   */\r\n  removeElementListeners(element) {\r\n    var newElement = element.cloneNode(true)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  /**\r\n   * Removes all listeners from list of HTMLElements by replacing it with a clone.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @memberof UIView\r\n   */\r\n  removeListListeners(cssSelector) {\r\n    this.uiArray(cssSelector).forEach(element => {\r\n      this.removeElementListeners(element)\r\n    })\r\n  }\r\n}\r\n","/**\r\n * Event emitter.\r\n *\r\n * @export\r\n * @class EventEmitter\r\n */\r\nexport class EventEmitter {\r\n  /**\r\n   * Creates an instance of EventEmitter.\r\n   *\r\n   * @memberof EventEmitter\r\n   */\r\n  constructor() {\r\n    this.listeners = new Map()\r\n  }\r\n\r\n  /**\r\n   * Ads an event listener.\r\n   *\r\n   * @param {String} label\r\n   * @param {*} callback\r\n   * @memberof EventEmitter\r\n   */\r\n  addListener(label, callback) {\r\n    this.listeners.has(label) || this.listeners.set(label, [])\r\n    this.listeners.get(label).push(callback)\r\n  }\r\n\r\n  /**\r\n   * Removes an event listener.\r\n   *\r\n   * @param {String} label\r\n   * @param {*} callback\r\n   * @returns\r\n   * @memberof EventEmitter\r\n   */\r\n  removeListener(label, callback) {\r\n    let listeners = this.listeners.get(label),\r\n      index\r\n\r\n    if (listeners && listeners.length) {\r\n      index = listeners.reduce((i, listener, index) => {\r\n        return this.isFunction(listener) && listener === callback\r\n          ? (i = index)\r\n          : i\r\n      }, -1)\r\n\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n        this.listeners.set(label, listeners)\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Emits an event.\r\n   *\r\n   * @param {String} label\r\n   * @param {*} args\r\n   * @returns\r\n   * @memberof EventEmitter\r\n   */\r\n  emit(label, ...args) {\r\n    let listeners = this.listeners.get(label)\r\n\r\n    if (listeners && listeners.length) {\r\n      listeners.forEach((listener) => {\r\n        listener(...args)\r\n      })\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Checks if object is function.\r\n   *\r\n   * @param {object} obj\r\n   * @returns\r\n   * @memberof EventEmitter\r\n   */\r\n  isFunction(obj) {\r\n    return typeof obj === 'function' || false\r\n  }\r\n}\r\n","import { EventEmitter } from './EventEmitter'\r\n\r\nimport Cookie from 'js-cookie'\r\n\r\n/**\r\n * Form service class.\r\n *\r\n * @export\r\n * @class FormService\r\n */\r\nexport class FormService extends EventEmitter {\r\n  /**\r\n   * Gets data as XMLHttpRequest call.\r\n   *\r\n   * @param {string} serviceName\r\n   * @memberof FormService\r\n   */\r\n  getAsXMLHttpRequest(serviceName) {\r\n    return this.sendAsXMLHttpRequest('GET', [], serviceName)\r\n  }\r\n\r\n  /**\r\n   * Posts data as XMLHttpRequest call.\r\n   *\r\n   * @param {*} fieldSet\r\n   * @param {string} serviceName\r\n   * @memberof FormService\r\n   */\r\n  postAsXMLHttpRequest(fieldSet, serviceName) {\r\n    return this.sendAsXMLHttpRequest('POST', fieldSet, serviceName)\r\n  }\r\n\r\n  /**\r\n   * Sends data as XMLHttpRequest call.\r\n   *\r\n   * @param {string} method\r\n   * @param {array<object>} fieldSet\r\n   * @param {string} url\r\n   * @memberof FormService\r\n   */\r\n  sendAsXMLHttpRequest(method, fieldSet, url) {\r\n    let formData = new FormData()\r\n    for (const [key, value] of Object.entries(fieldSet)) {\r\n      formData.append(key, value)\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      let request = new XMLHttpRequest()\r\n      request.open(method, url, true)\r\n      request.addEventListener('load', () => {\r\n        if ([200, 201].includes(request.status)) {\r\n          resolve(request.responseText)\r\n        }\r\n        reject(request.responseText)\r\n      })\r\n      var csrftoken = Cookie.get('csrftoken')\r\n      if (csrftoken !== 'undefined') {\r\n        request.setRequestHeader('X-CSRFToken', csrftoken)\r\n      }\r\n      request.send(formData)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends serialized parameters as form url encoded type.\r\n   *\r\n   * @param {*} fieldSet\r\n   * @param {string} serviceName\r\n   * @returns\r\n   * @memberof FormService\r\n   */\r\n  sendAsXMLHttpFormEncodedRequest(fieldSet, serviceName) {\r\n    let data = ''\r\n    fieldSet.forEach((field) => {\r\n      data = `${data}${field.name}=${field.value}&`\r\n    })\r\n    return new Promise((resolve) => {\r\n      let request = new XMLHttpRequest()\r\n      request.open('POST', serviceName, true)\r\n      request.addEventListener('load', () => {\r\n        resolve(request.responseText)\r\n      })\r\n      request.setRequestHeader(\r\n        'Content-Type',\r\n        'application/x-www-form-urlencoded'\r\n      )\r\n      request.send(data)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends data as HTML form.\r\n   *\r\n   * @param {*} fieldSet\r\n   * @param {string} action\r\n   * @memberof FormService\r\n   */\r\n  sendAsForm(fieldSet, action) {\r\n    let html = `<form id=\"__form__\" action='${action}' method=\"POST\" enctype=\"multipart/form-data\">`\r\n    var csrftoken = Cookie.get('csrftoken')\r\n    if (csrftoken !== 'undefined') {\r\n      html += `<input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"${csrftoken}\">`\r\n    }\r\n    for (const [key, value] of Object.entries(fieldSet)) {\r\n      html += `<input type=\"hidden\" name=\"${key}\" value='${value}'>`\r\n    }\r\n    html += `</form>`\r\n    document.body.insertAdjacentHTML('beforeend', html)\r\n    const form = document.getElementById('__form__')\r\n    form.submit()\r\n  }\r\n}\r\n","export class BaseUtils {\r\n  /**\r\n   * Checks if an object is defined.\r\n   *\r\n   * @static\r\n   * @param {String} s\r\n   * @returns\r\n   * @memberof BaseUtils\r\n   */\r\n  static isObjectDefined(s) {\r\n    try {\r\n      return typeof s !== 'undefined' && s !== null\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  static isPage(urlName) {\r\n    const meta = document.querySelector(\"meta[property='emd:page']\")\r\n    if (BaseUtils.isObjectDefined(meta)) {\r\n      return meta.attributes.content.value === urlName\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Returns a hostname.\r\n   *\r\n   * @readonly\r\n   * @static\r\n   * @memberof BaseUtils\r\n   */\r\n  static get hostname() {\r\n    return window.location.hostname\r\n  }\r\n\r\n  log(message) {\r\n    console.log(message)\r\n  }\r\n}\r\n","import { BaseUtils } from './BaseUtils'\r\n\r\n/**\r\n * HTML utilities.\r\n *\r\n * @export\r\n * @class HTMLUtils\r\n */\r\nexport class HTMLUtils {\r\n  /**\r\n   * Gets an element by a selector.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static get(selector) {\r\n    const element = document.querySelector(selector)\r\n    if (!BaseUtils.isObjectDefined(element)) {\r\n      console.warn(`HTMLUtils::get Element \"${selector}\" is not defined.`)\r\n    }\r\n    return element\r\n  }\r\n\r\n  /**\r\n   * Checks if DOM element selected by given CSS selector exists.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static exists(cssSelector) {\r\n    const element = document.querySelector(cssSelector)\r\n    return BaseUtils.isObjectDefined(element)\r\n  }\r\n\r\n  /**\r\n   * Gets a default form element.\r\n   *\r\n   * @memberof HTMLUtils\r\n   */\r\n  static getForm() {\r\n    return HTMLUtils.get('form')\r\n  }\r\n\r\n  /**\r\n   * Gets DOM element value by name attribute.\r\n   *\r\n   * @static\r\n   * @param {string} name\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static getValueByName(name) {\r\n    return this.get(`*[name=\"${name}\"]`).value\r\n  }\r\n\r\n  /**\r\n   * Gets DOM input element value by name attribute.\r\n   *\r\n   * @static\r\n   * @param {string} name\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static getInputByName(name) {\r\n    return this.get(`input[name=\"${name}\"]`)\r\n  }\r\n\r\n  static getInputByClassName(name) {\r\n    return this.get(`input.${name}`)\r\n  }\r\n\r\n  static getSelectByName(name) {\r\n    return this.get(`select[name=\"${name}\"]`)\r\n  }\r\n\r\n  static getSelectByClassName(name) {\r\n    return this.get(`select.${name}`)\r\n  }\r\n\r\n  static getInputValueByName(name) {\r\n    return this.getInputByName(name).value\r\n  }\r\n\r\n  static getCheckboxValueByName(name) {\r\n    return this.getInputByName(name).checked ? 'true' : 'false'\r\n  }\r\n\r\n  static setInputValueByName(name, value) {\r\n    const inputElement = this.getInputByName(name)\r\n    if (BaseUtils.isObjectDefined(inputElement)) {\r\n      inputElement.value = value\r\n    } else {\r\n      console.warn(`setInputValueByName:: Element '${name}' is not defined.`)\r\n    }\r\n  }\r\n\r\n  static getSelectValueByName(name) {\r\n    return this.getSelectByName(name).value\r\n  }\r\n\r\n  static getSelectTextByName(name) {\r\n    return this.getSelectByName(name).selectedOptions[0].text\r\n  }\r\n\r\n  static setSelectValueByName(name, value) {\r\n    const selectElement = this.getSelectByName(name)\r\n    if (BaseUtils.isObjectDefined(selectElement)) {\r\n      selectElement.value = value\r\n    } else {\r\n      console.warn(`setSelectValueByName:: Element '${name}' is not defined.`)\r\n    }\r\n  }\r\n\r\n  static getInputValueByClassName(name) {\r\n    return this.getInputByClassName(name).value\r\n  }\r\n\r\n  static getSelectValueByClassName(name) {\r\n    return this.getSelectByClassName(name).value\r\n  }\r\n\r\n  /**\r\n   * Lists DOM elements.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static list(selector) {\r\n    const elementList = document.querySelectorAll(selector)\r\n    if (!BaseUtils.isObjectDefined(elementList)) {\r\n      console.warn(`Elements \"${selector}\" are not defined.`)\r\n    }\r\n    return elementList\r\n  }\r\n\r\n  /**\r\n   * Returns DOM elements list as Array object.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static array(selector) {\r\n    return Array.from(HTMLUtils.list(selector))\r\n  }\r\n\r\n  static firstToHTMLElement(elements) {\r\n    if (elements.length > 0) {\r\n      return elements[0]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activates DOM element created from selector by adding CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @memberof HTMLUtils\r\n   */\r\n  static activate(selector) {\r\n    const element = HTMLUtils.get(selector)\r\n    HTMLUtils.activateElement(element)\r\n  }\r\n\r\n  /**\r\n   * Activates DOM element by adding CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {HTMLElement} element\r\n   * @memberof HTMLUtils\r\n   */\r\n  static activateElement(element) {\r\n    element.classList.add('js-active')\r\n  }\r\n\r\n  /**\r\n   * Deactivates DOM element created from selector by removing CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @memberof HTMLUtils\r\n   */\r\n  static deactivate(selector) {\r\n    const element = HTMLUtils.get(selector)\r\n    HTMLUtils.deactivateElement(element)\r\n  }\r\n\r\n  /**\r\n   * Deactivates DOM element by removing CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {HTMLElement} element\r\n   * @memberof HTMLUtils\r\n   */\r\n  static deactivateElement(element) {\r\n    element.classList.remove('js-active')\r\n  }\r\n\r\n  /**\r\n   * Copies string to clipboard.\r\n   *\r\n   * @static\r\n   * @param {string} s\r\n   * @memberof HTMLUtils\r\n   */\r\n  static copyToClipboard(s) {\r\n    function listener(e) {\r\n      e.clipboardData.setData('text/html', s)\r\n      e.clipboardData.setData('text/plain', s)\r\n      e.preventDefault()\r\n    }\r\n    document.addEventListener('copy', listener)\r\n    document.execCommand('copy')\r\n    document.removeEventListener('copy', listener)\r\n  }\r\n\r\n  /**\r\n   * Decodes HTML text.\r\n   *\r\n   * @static\r\n   * @param {string} html\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static decodeHtml(html) {\r\n    var txt = document.createElement('textarea')\r\n    txt.innerHTML = html\r\n    return txt.value\r\n  }\r\n\r\n  /**\r\n   * Removes all event listeners from an html element by a class name.\r\n   *\r\n   * @param {string} className the class name\r\n   */\r\n  static removeAllEventListeners(className) {\r\n    const element = document.querySelector(className)\r\n    const newElement = element.cloneNode(element)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  /**\r\n   * Removes all event listeners from an html element by a class name.\r\n   *\r\n   * @param {string} className the class name\r\n   */\r\n   static removeAllEventListenersFromElement(element) {\r\n    const newElement = element.cloneNode(element)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  static setCookie(name, value, days = 7, path = '/') {\r\n    const expires = new Date(Date.now() + days * 864e5).toUTCString()\r\n    document.cookie =\r\n      name +\r\n      '=' +\r\n      encodeURIComponent(value) +\r\n      '; expires=' +\r\n      expires +\r\n      '; path=' +\r\n      path\r\n  }\r\n\r\n  static getCookie(name) {\r\n    return document.cookie.split('; ').reduce((r, v) => {\r\n      const parts = v.split('=')\r\n      return parts[0] === name ? decodeURIComponent(parts[1]) : r\r\n    }, '')\r\n  }\r\n\r\n  static deleteCookie(name, path) {\r\n    this.setCookie(name, '', -1, path)\r\n  }\r\n}\r\n","/**\r\n * String utilities\r\n * \r\n * @export\r\n * @class StringUtils\r\n */\r\nexport class StringUtils {\r\n  \r\n  static EMPTY = \"\";\r\n  static URL_TARGET_BLANK = \"_blank\";\r\n  static URL_TARGET_SELF = \"_self\";\r\n    \r\n  /**\r\n   * Checks if a string is defined.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isDefined(s) {\r\n    return typeof s === \"string\";\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is empty.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns \r\n   * @memberof StringUtils\r\n   */\r\n  static isEmpty(s) {\r\n    return typeof s === \"string\" && s.length === 0;\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is not empty.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isNotEmpty(s) {\r\n    return !this.isEmpty(s);\r\n  }\r\n\r\n  /**\r\n   * Checks if two strings are equal.\r\n   * \r\n   * @static\r\n   * @param {string} string1 \r\n   * @param {string} string2 \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static equals(string1, string2) {\r\n    return string1 === string2; \r\n  }\r\n\r\n  /**\r\n   * Gets an unique identifier.\r\n   * \r\n   * @static\r\n   * @returns {string} \r\n   * @memberof StringUtils\r\n   */\r\n  static getUID() {\r\n    var timestamp = new Date().getTime();  \r\n    return timestamp.toString();\r\n  }\r\n\r\n  /**\r\n   * Checks if e-mail string is valid.\r\n   * \r\n   * @static\r\n   * @param {string} email \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isEmailValid(email) {\r\n    return /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(email);\r\n  }\r\n\r\n  /**\r\n   * Checks if IP address is valid.\r\n   *\r\n   * @static\r\n   * @param {*} ipAddress\r\n   * @returns\r\n   * @memberof StringUtils\r\n   */\r\n  static isIpAddressValid(ipAddress) {\r\n    return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ipAddress);\r\n  }\r\n  \r\n  /**\r\n   * Checks if URL string is valid.\r\n   * \r\n   * @static\r\n   * @param {string} url \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isUrlValid(url) {\r\n    return /((http|ftp|https):\\/\\/)?[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/.test(url);\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is a number.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isNumber(s) {\r\n    return /^-?\\d*[\\.]?\\d+$/.test(s);\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is in a currency format.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isCurrency(s) {\r\n    return /(?=.)^\\$?(([1-9][0-9]{0,2}(,[0-9]{3})*)|[0-9]+)?(\\.[0-9]{1,2})?$/.test(s);\r\n  }\r\n\r\n  /**\r\n   * Extracts Form Builder field type string.\r\n   * \r\n   * @static\r\n   * @param {string} className \r\n   * @returns {string} \r\n   * @memberof StringUtils\r\n   */\r\n  static extractFormBuilderFormFieldType(className) {\r\n    return className.split(\" \")[0].split(\"-\")[1];\r\n  }\r\n\r\n  /**\r\n   * Extracts file name from path.\r\n   * \r\n   * @static\r\n   * @param {string} path \r\n   * @returns {string} \r\n   * @memberof StringUtils\r\n   */\r\n  static extractFileNameFromPath(path) {\r\n    return path.replace(/^.*[\\\\\\/]/, '');\r\n  }\r\n\r\n  /**\r\n   * Capitalize first letter of a string.\r\n   *\r\n   * @static\r\n   * @param {string} s\r\n   * @returns {string}\r\n   * @memberof StringUtils\r\n   */\r\n  static capitalize(i) {\r\n    return i.replace(/(^| )(\\w)/g, s => s.toUpperCase());\r\n  }\r\n\r\n  /**\r\n   * Converts string to boolean.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static toBoolean(s) {\r\n    return /(true|True|1)/g.test(s);\r\n  }\r\n  \r\n  /**\r\n   * Strips string from quotes.\r\n   *\r\n   * @static\r\n   * @param {*} expression\r\n   * @returns\r\n   * @memberof StringUtils\r\n   */\r\n  static stripFromQuotes(expression) {\r\n    let matches = /(['\"]?)(.*)\\1/.exec(expression); \r\n    if (matches.length > 2) {\r\n      return matches[2];\r\n    }\r\n    return StringUtils.EMPTY;\r\n  }\r\n\r\n  static hashCode(s) {\r\n    return s.split('').reduce((prevHash, currVal) =>\r\n      ((prevHash << 5) - prevHash) + currVal.charCodeAt(0), 0);\r\n  }\r\n}","/**\r\n * Application settings.\r\n *\r\n * @export\r\n * @class ApplicationSettings\r\n */\r\nexport class ApplicationSettings {\r\n  /**\r\n   * Creates an instance of ApplicationSettings.\r\n   *\r\n   * @param {objString} obj\r\n   * @memberof ApplicationSettings\r\n   */\r\n  constructor(objString) {\r\n    this.objs = JSON.parse(objString)\r\n    this.videoAppUrl = this.objs.video_app_url\r\n    this.consoleAppUrl = this.objs.console_app_url\r\n    this.webSocketServiceUrl = this.objs.ws_service_url\r\n    this.adminEmailAddress = this.objs.admin_email_address\r\n  }\r\n\r\n  /**\r\n   * Gets value from property name.\r\n   *\r\n   * @param {string} propertyName\r\n   * @returns\r\n   * @memberof ApplicationSettings\r\n   */\r\n  getValue(propertyName) {\r\n    return this.objs.filter((obj) => obj.property === propertyName)[0].value\r\n  }\r\n}\r\n","export class ComSessionStatus {}\r\nComSessionStatus.STATUS_PENDING = 1\r\nComSessionStatus.STATUS_ENQUEUED = 2\r\nComSessionStatus.STATUS_MISSED = 3\r\nComSessionStatus.STATUS_CANCELLED = 4\r\nComSessionStatus.STATUS_REJECTED = 5\r\nComSessionStatus.STATUS_ACCEPTED = 6\r\nComSessionStatus.STATUS_COMPLETED = 7\r\n","export class UserType {}\r\nUserType.ADMIN = 'admin'\r\nUserType.GUEST = 'guest'\r\n","import { FormService } from '../../../genb/base/service/FormService'\r\nimport { ComSessionStatus } from '../model/ComSessionStatus'\r\n\r\n/**\r\n * Application REST API facade.\r\n * Points to the '{console_app_url}/api/' end.\r\n *\r\n * @export\r\n * @class ApiService\r\n * @extends {FormService}\r\n */\r\nexport class ApiService extends FormService {\r\n  constructor(baseUrl) {\r\n    super()\r\n    this.baseUrl = baseUrl\r\n  }\r\n\r\n  /**\r\n   * Gets current user.\r\n   *\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getCurrentUser() {\r\n    return this.getJson(`${this.baseUrl}/api/users/current/`)\r\n  }\r\n\r\n  /**\r\n   * Gets application settings\r\n   *\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getSettings() {\r\n    return this.getJson(`${this.baseUrl}/api/settings/`)\r\n  }\r\n\r\n  /**\r\n   * Gets user by id.\r\n   *\r\n   * @param {string} userId\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getUserById(userId) {\r\n    return this.getJson(`${this.baseUrl}/api/users/${userId}/`)\r\n  }\r\n\r\n  /**\r\n   * Gets widget by id.\r\n   *\r\n   * @param {string} widgetId\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getWidgetById(widgetId) {\r\n    return this.getJson(`${this.baseUrl}/api/widgets/${widgetId}/`)\r\n  }\r\n\r\n  /**\r\n   * Gets communication record by id.\r\n   *\r\n   * @param {string} communicationId\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getCommunicationRecord(communicationId) {\r\n    return this.getJson(\r\n      `${this.baseUrl}/api/appointments/${communicationId}/`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets Json data from XMLHttpRequest request.\r\n   *\r\n   * @param {string} actionName\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getJson(actionName) {\r\n    return this.getAsXMLHttpRequest(`${actionName}?format=json`)\r\n  }\r\n\r\n  /**\r\n   * Creates call record.\r\n   *\r\n   * @param {string} callerName\r\n   * @param {string} widgetUuid\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  createCall(userWSId, userId, widgetUuid) {\r\n    const fieldSet = {\r\n      caller_name: userWSId,\r\n      caller_id: userId,\r\n      widget_uuid: widgetUuid,\r\n    }\r\n    return this.postAsXMLHttpRequest(\r\n      fieldSet,\r\n      `${this.baseUrl}/api/appointments/`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {*} id the communication session ID \r\n   * @param {number} rate the session rate\r\n   * @returns \r\n   */\r\n  rateComSession(id, rate) {\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/com_sessions/rate/${id}/${rate}`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Cancels call record.\r\n   *\r\n   * @param {string} callerName\r\n   * @param {string} widgetUuid\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  cancelCall(id) {\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/appointments/cancel/${id}/`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets UUID from string.\r\n   *\r\n   * @param {string} str\r\n   * @memberof ApiService\r\n   */\r\n  getUuid(str) {\r\n    // TODO: make it as POST\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/com_sessions/room-uuid/${str}`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as accepted.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsAccepted(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_ACCEPTED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as rejected.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsRejected(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_REJECTED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as cancelled.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsCancelled(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_CANCELLED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as completed.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsCompleted(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_COMPLETED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as enqueued.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsEnqueued(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_ENQUEUED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status.\r\n   *\r\n   * @param {string} id\r\n   * @param {number} status\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionStatus(id, status) {\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/com_sessions/status/${id}/${status}`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets pending sessions.\r\n   *\r\n   * @memberof ApiService\r\n   */\r\n  getPendingSessions() {\r\n    return this.getAsXMLHttpRequest(`${this.baseUrl}/api/com_sessions/pending/1`)\r\n  }\r\n}\r\n","import { FormService } from '../../../genb/base/service/FormService'\r\nimport { UserType } from '../model/UserType'\r\n\r\n/**\r\n * Handles WebSocket connection.\r\n * Points to the go collider server.\r\n *\r\n * @export\r\n * @class WebSocketService\r\n * @extends {FormService}\r\n */\r\n\r\nexport class WebSocketService extends FormService {\r\n  /**\r\n   * Creates an instance of WebSocketService.\r\n   *\r\n   * @param {string} serviceUrl\r\n   * @memberof WebSocketService\r\n   */\r\n  constructor(serviceUrl) {\r\n    super()\r\n\r\n    this.url = serviceUrl\r\n    this.isOpen = false\r\n\r\n    this.openWebSocketConnection()\r\n  }\r\n\r\n  /**\r\n   * Opens server connection.\r\n   *\r\n   * @returns\r\n   * @memberof WebSocketService\r\n   */\r\n  openWebSocketConnection() {\r\n    return new Promise((resolve) => {\r\n      this.websocket = new WebSocket(this.url)\r\n      this.websocket.onopen = () => {\r\n         if (this.websocket.readyState === WebSocket.OPEN) {\r\n          this.isOpen = true\r\n          this.attachWebSocketEventHandlers()\r\n          resolve()\r\n        }\r\n      }\r\n      this.websocket.onerror = (event) => {\r\n        if (event.currentTarget.readyState === 3) {\r\n          this.emit('connection_failure')\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Attaches server event handlers.\r\n   *\r\n   * @memberof WebSocketService\r\n   */\r\n  attachWebSocketEventHandlers() {\r\n    this.websocket.onmessage = (event) => {\r\n      this.handleMessageResponse(event.data)\r\n    }\r\n    this.websocket.onclose = () => {\r\n      this.isOpen = false\r\n    }\r\n    this.websocket.onerror = (e) => {\r\n      console.log('websocket error', e)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles server response message.\r\n   *\r\n   * @param {object} response\r\n   * @memberof WebSocketService\r\n   */\r\n  handleMessageResponse(response) {\r\n    if (response === '') {\r\n      return\r\n    }\r\n\r\n    const responseJson = JSON.parse(response)\r\n    if (responseJson.error !== '') {\r\n      this.emit('error', responseJson.error)\r\n      return\r\n    }\r\n    const message = responseJson.msg\r\n    if (message !== '') {\r\n      const messageJson = JSON.parse(responseJson.msg)\r\n      switch (messageJson.type) {\r\n        case 'response':\r\n          this.handleNamedResponse(messageJson.body)\r\n          break\r\n        case 'list-clients':\r\n          this.emit('listUsers', messageJson.body)\r\n          break\r\n        case 'send':\r\n          this.handleNamedResponse(messageJson.body)\r\n          break\r\n        default:\r\n          console.log('Response type not found.')\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles named response.\r\n   *\r\n   * @param {object} responseJson\r\n   * @memberof WebSocketService\r\n   */\r\n  handleNamedResponse(response) {\r\n    if (response === '') {\r\n      return\r\n    }\r\n\r\n    const responseJson =\r\n      typeof response === 'string' ? JSON.parse(response) : response\r\n\r\n    switch (responseJson.name) {\r\n      case 'register':\r\n        this.emit('register', responseJson.status)\r\n        break\r\n      case WebSocketService.REQUEST_CALL:\r\n        this.emit(\r\n          'callRequest',\r\n          responseJson.user,\r\n          responseJson.userId,\r\n          responseJson.widget\r\n        )\r\n        break\r\n      case WebSocketService.CANCEL_CALL:\r\n        this.emit('callCancel', responseJson.recordId)\r\n        break\r\n      case WebSocketService.ACCEPT_CALL_REQUEST:\r\n        this.emit('callAccepted', responseJson.uuid)\r\n        break\r\n      case WebSocketService.REJECT_CALL_REQUEST:\r\n        this.emit('callRejected')\r\n        break\r\n      case WebSocketService.SEND_COMMUNICATION_RECORD:\r\n        this.emit('communicationRecord', responseJson.record)\r\n        break\r\n      default:\r\n        console.log('No named response found.')\r\n        break\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers the user in the multiple rooms identified by records ids.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} userType\r\n   * @param {array<object>} records\r\n   * @memberof WebSocketService\r\n   */\r\n  registerList(userId, userType, records) {\r\n    records.forEach((record) => {\r\n      this.register(userId, userType, record.id)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Registers the admin user in multiple rooms identified by\r\n   * installed widgets ids.\r\n   *\r\n   * @param {string} userId\r\n   * @param {array<object>} widgets\r\n   * @memberof WebSocketService\r\n   */\r\n  registerOperatorsList(userId, widgets) {\r\n    this.registerList(userId, UserType.ADMIN, widgets)\r\n  }\r\n\r\n  /**\r\n   * Deregisters the user from multiple rooms identified by records ids.\r\n   *\r\n   * @param {string} userId\r\n   * @param {array<object>} records\r\n   * @memberof WebSocketService\r\n   */\r\n  deregisterList(userId, records) {\r\n    records.forEach((record) => {\r\n      this.deregister(userId, record.id)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Registers the user in the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} userType\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  register(userId, userType, roomId) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'register',\r\n      clientid: userId,\r\n      clienttype: userType,\r\n      roomid: roomId,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Registers the admin user in the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  registerOperator(userId, roomId) {\r\n    this.register(userId, UserType.ADMIN, roomId)\r\n  }\r\n\r\n  /**\r\n   * Registers the guest user in the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  registerGuest(userId, roomId) {\r\n    this.register(userId, UserType.GUEST, roomId)\r\n  }\r\n\r\n  /**\r\n   * Deregisters the user from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  deregister(userId, roomId) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'deregister',\r\n      clientid: userId,\r\n      roomid: roomId,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends a message to the WebSocket server room.\r\n   *\r\n   * @param {object} user\r\n   * @param {string} message\r\n   * @memberof WebSocketService\r\n   */\r\n  send(user, message) {\r\n    this.sendWebSocketMessage({\r\n      cmd: WebSocketService.SEND,\r\n      clientid: user.uuid,\r\n      roomid: user.client_board_id,\r\n      msg: message,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends a message to the other user.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} otherUserId\r\n   * @param {string} roomId\r\n   * @param {string} message\r\n   * @memberof WebSocketService\r\n   */\r\n  sendToOther(userId, otherUserId, roomId, message) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'send-to-other',\r\n      clientid: userId,\r\n      roomid: roomId,\r\n      otherid: otherUserId,\r\n      msg: message,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Lists all clients from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} userType\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  listClients(userId, userType, roomId) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'list-clients',\r\n      clientid: userId,\r\n      clienttype: userType,\r\n      roomid: roomId,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Lists all guests from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  listGuests(userId, roomId) {\r\n    this.listClients(userId, UserType.GUEST, roomId)\r\n  }\r\n\r\n  /**\r\n   * Lists all admins from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  listAdmins(userId, roomId) {\r\n    this.listClients(userId, UserType.ADMIN, roomId)\r\n  }\r\n\r\n  /**\r\n   * Requests a call with admin user.\r\n   *\r\n   * @param {string} userWSId the user ID in the WebService\r\n   * @param {string} userId the user ID\r\n   * @param {string} adminId the operator ID\r\n   * @param {string} roomId the room ID\r\n   * @memberof WebSocketService\r\n   */\r\n  requestCall(userWSId, userId, adminId, roomId) {\r\n    this.sendToOther(\r\n      userId,\r\n      adminId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.REQUEST_CALL,\r\n          user: userWSId,\r\n          userId: userId,\r\n          widget: roomId,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Sends a cancel call request. Sent by customer.\r\n   *\r\n   * @param {string} recordId the call record id\r\n   * @param {string} userId the user id\r\n   * @param {string} adminId the admin id\r\n   * @param {string} roomId the room id\r\n   * @memberof WebSocketService\r\n   */\r\n  cancelCall(recordId, userId, adminId, roomId) {\r\n    console.log('cancel call', recordId, userId, adminId, roomId)\r\n    // cancelCall(userWSId, roomId, recordId) {\r\n    /** this.sendWebSocketMessage({\r\n      cmd: WebSocketService.SEND,\r\n      clientid: userWSId,\r\n      clienttype: UserType.GUEST,\r\n      roomid: roomId,\r\n      msg: JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.CANCEL_CALL,\r\n          user: userWSId,\r\n          widget: roomId,\r\n          record: recordId,\r\n        },\r\n      }),\r\n    })*/\r\n    this.sendToOther(\r\n      userId,\r\n      adminId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.CANCEL_CALL,\r\n          recordId: recordId\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Accepts call request.\r\n   *\r\n   * @param {string} calleeId\r\n   * @param {string} callerUserId\r\n   * @param {string} roomId\r\n   * @param {string} comSessionId\r\n   * @memberof WebSocketService\r\n   */\r\n  acceptCallRequest(calleeId, callerUserId, roomId, comSessionId) {\r\n    this.sendToOther(\r\n      calleeId,\r\n      callerUserId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.ACCEPT_CALL_REQUEST,\r\n          uuid: comSessionId,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Rejects call request.\r\n   *\r\n   * @param {string} calleeId\r\n   * @param {string} callerUserId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  rejectCallRequest(calleeId, callerUserId, roomId) {\r\n    this.sendToOther(\r\n      calleeId,\r\n      callerUserId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.REJECT_CALL_REQUEST,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Passes communication session record to remote client.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} otherUserWSId\r\n   * @param {string} roomId\r\n   * @param {object} record\r\n   * @memberof WebSocketService\r\n   */\r\n  passCommunicationRecord(userId, otherUserWSId, roomId, record) {\r\n    this.sendToOther(\r\n      userId,\r\n      otherUserWSId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.SEND_COMMUNICATION_RECORD,\r\n          record: record,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Sends the message to the WebSocket service.\r\n   *\r\n   * @param {object} message the message\r\n   * @param {boolean} persistant\r\n   * @memberof WebSocketService\r\n   */\r\n  async sendWebSocketMessage(message, persistant = true) {\r\n    if (!this.isOpen) {\r\n      await this.openWebSocketConnection()\r\n    }\r\n\r\n    message.roomtype = 'client_board'\r\n    message.persistant = String(persistant)\r\n    this.websocket.send(JSON.stringify(message))\r\n  }\r\n}\r\n\r\nWebSocketService.SEND = 'send'\r\nWebSocketService.REQUEST_CALL = 'request-call'\r\nWebSocketService.CANCEL_CALL = 'cancel-call'\r\nWebSocketService.ACCEPT_CALL_REQUEST = 'accept-call-request'\r\nWebSocketService.REJECT_CALL_REQUEST = 'reject-call-request'\r\nWebSocketService.SEND_COMMUNICATION_RECORD = 'send-communication-record'\r\n","import { BaseUtils } from '../../../genb/base/utils/BaseUtils'\r\nimport { StringUtils } from '../../../genb/base/utils/StringUtils'\r\n\r\n/**\r\n * EngagedMD service utils.\r\n *\r\n * @export\r\n * @class QhUtils\r\n */\r\nexport class QhUtils {\r\n  /**\r\n   * Checks for given page.\r\n   *\r\n   * @static\r\n   * @param {string} urlName\r\n   * @returns\r\n   * @memberof QhUtils\r\n   */\r\n  static isPage(urlName) {\r\n    const meta = document.querySelector(\"meta[property='qh:view']\")\r\n    if (BaseUtils.isObjectDefined(meta)) {\r\n      return StringUtils.equals(meta.attributes.content.value, urlName)\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Return EMD property value.\r\n   *\r\n   * @static\r\n   * @param {string} propertyName\r\n   * @returns {string} property value\r\n   * @memberof QhUtils\r\n   */\r\n  static getQhProperty(propertyName) {\r\n    const meta = document.querySelector(`meta[property='qh:${propertyName}']`)\r\n    if (BaseUtils.isObjectDefined(meta)) {\r\n      return meta.attributes.content.value\r\n    }\r\n    console.warn(`QhUtils::getQhProperty No \"${propertyName}\" property found.`)\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Returns parsed quickhellou property value.\r\n   *\r\n   * @static\r\n   * @param {string} propertyName\r\n   * @returns {object} parsed property value object\r\n   * @memberof QhUtils\r\n   */\r\n  static getQhPropertyObject(propertyName) {\r\n    return JSON.parse(QhUtils.getQhProperty(propertyName))\r\n  }\r\n\r\n  /**\r\n   * Is application in test mode.\r\n   *\r\n   * @memberof QhUtils\r\n   */\r\n  static inTestMode() {\r\n    return StringUtils.equals(QhUtils.getQhProperty('developerMode'), 'test')\r\n  }\r\n\r\n  /**\r\n   * Creates key for websocket communication that contains user id. \r\n   * \r\n   * @param {string} userId \r\n   * @returns \r\n   */\r\n  static createUserId(userId) {\r\n    return `${this.appUuid}${userId}`\r\n  }\r\n\r\n  /**\r\n   * Extracts id from user key generated for websocket identification.\r\n   * \r\n   * @param {string} key \r\n   * @returns \r\n   */\r\n  static extractUserId(key) {\r\n    return key.split(this.appUuid)[1]\r\n  }\r\n\r\n  /**\r\n   * Randomly generated application UUID.\r\n   *\r\n   * @readonly\r\n   * @static\r\n   * @memberof QhUtils\r\n   */\r\n  static get appUuid() {\r\n    return 'faf8c9f7-99f7-4b9a-8ab8-c1ec416737e7'\r\n  }\r\n}\r\n","import { UIView } from '../../genb/base/controller/UIView'\r\nimport { HTMLUtils } from '../../genb/base/utils/HTMLUtils'\r\n\r\n/**\r\n * Widget embed view. The iframe that is included on a client's page.\r\n *\r\n * @export\r\n * @class WidgetEmbedView\r\n * @extends {UIView}\r\n */\r\nexport class WidgetEmbedView extends UIView {\r\n  /**\r\n   * Creates an instance of WidgetEmbedView.\r\n   *\r\n   * @param { WidgetService } service\r\n   *\r\n   * @memberof WidgetEmbedView\r\n   */\r\n  constructor(service) {\r\n    super()\r\n    this.service = service\r\n    this.isExpanded = false\r\n    this.element = document.querySelector('iframe#qh_iframe')\r\n  }\r\n\r\n  /**\r\n   * Initializes the view.\r\n   *\r\n   * @memberof WidgetEmbedView\r\n   */\r\n  async init(extDispatcher) {\r\n    \r\n    this.extDispatcher = extDispatcher\r\n\r\n    this.service.addListener('callRejected', () => {\r\n      this.onCallRejected()\r\n    })\r\n\r\n    this.service.addListener('listUsers', (a) => {\r\n      this.onListUsers(a.length > 0)\r\n    })\r\n\r\n    this.service.addListener('error', (error) => {\r\n      this.onError(error)\r\n    })\r\n\r\n    this.extDispatcher.addEventListener('expand_contact', () => {\r\n      this.element.classList.add('js-expanded', 'js-expanded--large')\r\n    }, false)\r\n\r\n    this.extDispatcher.addEventListener('expand_schedule', () => {\r\n      this.element.classList.add('js-expanded', 'js-expanded--large')\r\n    }, false)\r\n\r\n    this.extDispatcher.addEventListener('collapse', () => {\r\n      this.element.classList.remove('js-expanded', 'js-expanded--large')\r\n    }, false)\r\n  }\r\n\r\n  /**\r\n   * Handles call rejected event.\r\n   *\r\n   * @memberof WidgetEmbedView\r\n   */\r\n  onCallRejected() {\r\n    this.expandView()\r\n  }\r\n\r\n  /**\r\n   * Handles user list update.\r\n   *\r\n   * @param {boolean} anyOperatorActive is any operator active\r\n   *\r\n   * @memberof WidgetEmbedView\r\n   */\r\n  onListUsers(anyOperatorActive) {\r\n    if (anyOperatorActive) {\r\n      this.collapseView()\r\n    } else {\r\n      this.expandView()\r\n    }\r\n    this.handleDesciptionsOnOperatorListChange(anyOperatorActive)\r\n  }\r\n\r\n  /**\r\n   * Handles descriptions on operator availability change.\r\n   *\r\n   * @param {boolean} anyOperatorActive\r\n   */\r\n  handleDesciptionsOnOperatorListChange(anyOperatorActive) {\r\n    // const noOperatorsDescription = this.uiGet('.qh_widget-bottom__msg--no-operators')\r\n    // noOperatorsDescription.classList.toggle('js-active', !anyOperatorActive)\r\n    // const linesDescription = this.uiGet('.qh_widget-bottom__msg--lines')\r\n    // linesDescription.classList.toggle('js-active', anyOperatorActive)\r\n    // const leaveMessageDescription = this.uiGet('.qh_widget-bottom__msg--leave-message')\r\n  }\r\n\r\n  /**\r\n   * Handles error.\r\n   *\r\n   * @param {string} error\r\n   */\r\n  onError() {\r\n    const contentElement = this.uiGet('.qh_widget-bottom__content')\r\n    contentElement.classList.add('js-hidden')\r\n    const errorElement = this.uiGet('.widget-bottom__error')\r\n    errorElement.classList.remove('js-hidden')\r\n    this.expandView()\r\n  }\r\n\r\n  /**\r\n   * Toggles the view.\r\n   *\r\n   * @memberof WidgetEmbedView\r\n   */\r\n  toggleView() {\r\n    if (this.isExpanded) {\r\n      this.collapseView()\r\n    } else {\r\n      this.expandView()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expands the view.\r\n   *\r\n   * @memberof WidgetEmbedView\r\n   */\r\n  expandView() {\r\n    if (this.isEnabled()) {\r\n      this.isExpanded = true\r\n      this.element.classList.add('js-active')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collapses the view.\r\n   *\r\n   * @memberof WidgetEmbedView\r\n   */\r\n  collapseView() {\r\n    this.isExpanded = false\r\n    this.element.classList.remove('js-active')\r\n    this.emit('toggleBadgeTopState', false)\r\n    this.extDispatcher.dispatchEvent(\r\n      new CustomEvent('toggleBadgeTopState', {\r\n        detail: {\r\n          isExpanded: false,\r\n          source: 'widgetExtView',\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Disables bottom bar.\r\n   */\r\n  disable() {\r\n    HTMLUtils.setCookie('qh_bottom_bar', false)\r\n  }\r\n\r\n  /**\r\n   * Checks if bottom bar is enabled.\r\n   *\r\n   * @returns true if enabled\r\n   */\r\n  isEnabled() {\r\n    return HTMLUtils.getCookie('qh_bottom_bar') !== 'false'\r\n  }\r\n}\r\n","import { EventEmitter } from '../../genb/base/service/EventEmitter'\r\nimport { WebSocketService } from '../base/services/WebSocketService'\r\nimport { ApiService } from '../base/services/ApiService'\r\nimport { ApplicationSettings } from '../base/model/ApplicationSettings'\r\nimport { QhUtils } from '../base/utils/QhUtils'\r\n\r\n/**\r\n * The widget collective service.\r\n *\r\n * @extends EventEmitter\r\n */\r\nexport class WidgetService extends EventEmitter {\r\n  /**\r\n   * Creates an instance of WidgetService.\r\n   *\r\n   * @param {string} consoleAppUrl the console app URL address\r\n   * @param {string} widgetId the widget ID\r\n   */\r\n  constructor(consoleAppUrl, widgetId) {\r\n    super()\r\n    this.apiService = new ApiService(consoleAppUrl)\r\n    this.consoleAppUrl = consoleAppUrl\r\n    this.widgetId = widgetId\r\n    this.users = []\r\n  }\r\n\r\n  /**\r\n   * Initializes the service.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  async init() {\r\n    return new Promise((resolve, reject) => {\r\n      this.apiService.getSettings().then((appSettingsJson) => {\r\n        this.appSettings = new ApplicationSettings(appSettingsJson)\r\n        try {\r\n          this.apiService.getWidgetById(this.widgetId).then((widgetObject) => {\r\n            this.widget = JSON.parse(widgetObject)\r\n            this.install().then((response) => {\r\n              const responseJson = JSON.parse(response)\r\n              if (responseJson.status === 'failure') {\r\n                reject(responseJson.result)\r\n              }\r\n\r\n              this.webSocketService = new WebSocketService(\r\n                this.appSettings.webSocketServiceUrl\r\n              )\r\n\r\n              this.webSocketService.addListener('register', (e) => {\r\n                this.onUserRegister(e)\r\n              })\r\n              this.webSocketService.addListener('listUsers', (e) => {\r\n                this.onListUsers(e)\r\n              })\r\n\r\n              this.webSocketService.addListener('callAccepted', (e) => {\r\n                this.onCallAccepted(e)\r\n              })\r\n\r\n              this.webSocketService.addListener('callRejected', () => {\r\n                this.onCallRejected()\r\n              })\r\n\r\n              this.webSocketService.addListener('error', (error) => {\r\n                this.emit('error', error)\r\n              })\r\n\r\n              this.webSocketService.addListener(\r\n                'communicationRecord',\r\n                (record) => {\r\n                  this.onCommunicationRecord(record)\r\n                }\r\n              )\r\n\r\n              this.user = {\r\n                uuid: 'guest_' + String(Math.floor(Date.now() / 1000)),\r\n                roomId: this.widget.uuid,\r\n              }\r\n              this.webSocketService.registerGuest(\r\n                this.user.uuid,\r\n                this.widget.uuid\r\n              )\r\n\r\n              // attach videochat events\r\n              try {\r\n                this.videochatProxy = videochat.proxy()\r\n                this.videochatProxy.addEventListener('close', () => {\r\n                  this.onCloseVideoChat()\r\n                })\r\n                this.videochatProxy.addEventListener('remote_hangup', () => {\r\n                  this.onCloseVideoChat()\r\n                })\r\n              } catch (e) {\r\n                // console.log('Videochat is not defined.')\r\n              }\r\n\r\n              resolve()\r\n            })\r\n          })\r\n        } catch (e) {\r\n          // console.log(e)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Removes connection data in the videochat application.\r\n   */\r\n  destroyVideoChatApp() {\r\n    try {\r\n      this.videochatProxy.destroy()\r\n    } catch (e) {\r\n      console.log('e', e)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles videochat session close.\r\n   */\r\n  onCloseVideoChat() {\r\n    this.emit('videochatSessionClose')\r\n  }\r\n\r\n  /**\r\n   * Requests a call with an active admin.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  requestCall() {\r\n    const adminUuid = this.admins[0]\r\n    this.webSocketService.requestCall(\r\n      this.user.uuid,\r\n      this.user.userId,\r\n      adminUuid,\r\n      this.widget.uuid\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Cancels a call request.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  cancelCall() {\r\n    const adminUuid = this.admins[0]\r\n    this.webSocketService.cancelCall(\r\n      this.sessionRecord.id,\r\n      this.user.userId,\r\n      adminUuid,\r\n      this.widget.uuid\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Handles user register response.\r\n   *\r\n   * @param {string} response the response\r\n   * @memberof WidgetService\r\n   */\r\n  onUserRegister(response) {\r\n    if (response === 'ok') {\r\n      this.webSocketService.listAdmins(this.user.uuid, this.widget.uuid)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles user list refresh response.\r\n   *\r\n   * @param {array<string>} a\r\n   * @memberof WidgetService\r\n   */\r\n  onListUsers(a) {\r\n    this.admins = a\r\n    this.emit('listUsers', a)\r\n\r\n    if (a.length) {\r\n      const adminId = QhUtils.extractUserId(a[0])\r\n      this.getUser(adminId).then((user) => {\r\n        this.emit('admin', user)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles call accept notification.\r\n   *\r\n   * @param {string} uuid the UUID string\r\n   * @memberof WidgetService\r\n   */\r\n  async onCallAccepted(uuid) {\r\n    this.emit('callAccepted', uuid)\r\n  }\r\n\r\n  /**\r\n   * Handles call reject notification.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  onCallRejected() {\r\n    this.emit('callRejected')\r\n    // this.destroyVideoChatApp()\r\n  }\r\n\r\n  /**\r\n   * Handles communication record.\r\n   *\r\n   * @param {object} record the communication record\r\n   */\r\n  onCommunicationRecord(record) {\r\n    this.sessionRecord = record\r\n  }\r\n\r\n  /**\r\n   * Sends contact form.\r\n   *\r\n   * @param {array<object>} fieldSet the field set\r\n   */\r\n  sendScheduleForm(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/widget_schedule/${\r\n      this.widgetId\r\n    }/${encodeURIComponent(window.location.hostname.toLowerCase())}/${\r\n      this.widget.uuid\r\n    }`\r\n    return this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Sends start video chat form.\r\n   *\r\n   * @param {object} fieldSet\r\n   * @returns the response\r\n   */\r\n  sendStartVideoChatForm(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/widget_active_operator/${\r\n      this.widgetId\r\n    }/${encodeURIComponent(window.location.hostname.toLowerCase())}/${\r\n      this.widget.uuid\r\n    }`\r\n    return this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Installs the widget.\r\n   *\r\n   * @returns true if installed correctly.\r\n   */\r\n  async install() {\r\n    const url = `${this.consoleAppUrl}/dashboard/install/${\r\n      this.widgetId\r\n    }/${encodeURIComponent(window.location.hostname.toLowerCase())}/${\r\n      this.widget.uuid\r\n    }`\r\n    return this.apiService.postAsXMLHttpRequest({}, url)\r\n  }\r\n\r\n  /**\r\n   * Gets user by user ID.\r\n   *\r\n   * @param {*} userId\r\n   * @returns\r\n   */\r\n  async getUser(userId) {\r\n    let userJson = await this.apiService.getUserById(userId)\r\n    return JSON.parse(userJson)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session rate.\r\n   *\r\n   * @param {number} rate\r\n   * @returns\r\n   */\r\n  async rateComSession(rate) {\r\n    let resultJson = await this.apiService.rateComSession(\r\n      this.sessionRecord.id,\r\n      rate\r\n    )\r\n    return JSON.parse(resultJson)\r\n  }\r\n\r\n  /**\r\n   * Sets local user ID.\r\n   *\r\n   * @param {number} userId\r\n   */\r\n  setUserId(userId) {\r\n    this.user.userId = userId\r\n  }\r\n\r\n  /**\r\n   * Gets an active operator init form template.\r\n   *\r\n   * @returns the template string\r\n   */\r\n  async getActiveOperatorInitForm() {\r\n    return await this.apiService.getAsXMLHttpRequest(\r\n      `${this.consoleAppUrl}/dashboard/active_operator_init_form`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets an inactive operator init form template.\r\n   *\r\n   * @returns the template string\r\n   */\r\n  async getInactiveOperatorInitForm() {\r\n    return await this.apiService.getAsXMLHttpRequest(\r\n      `${this.consoleAppUrl}/dashboard/inactive_operator_init_form`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets scheduler calendar.\r\n   *\r\n   * @returns the scheduler calendar\r\n   */\r\n  async getSchedulerCalendar(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/widget_calendar_view/${this.widgetId}`\r\n    return await this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Gets widget contact form.\r\n   *\r\n   * @param {array<object>} fieldSet the field set\r\n   *\r\n   * @returns the contact form view\r\n   */\r\n  async getContactForm(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/add_widget_contact_form_view/${this.widgetId}`\r\n    return await this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Gets widget contact form.\r\n   *\r\n   * @param {array<object>} fieldSet the field set\r\n   *\r\n   * @returns the contact form view\r\n   */\r\n    async sendContactForm(fieldSet) {\r\n      const url = `${this.consoleAppUrl}/dashboard/edit_widget_contact_form_view/${this.widgetId}`\r\n      return await this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n    }\r\n}\r\n","/*!\n * JavaScript Cookie v2.2.1\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction decode (s) {\n\t\treturn s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api() {}\n\n\t\tfunction set (key, value, attributes) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattributes = extend({\n\t\t\t\tpath: '/'\n\t\t\t}, api.defaults, attributes);\n\n\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\tattributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n\t\t\t}\n\n\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\ttry {\n\t\t\t\tvar result = JSON.stringify(value);\n\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tvalue = converter.write ?\n\t\t\t\tconverter.write(value, key) :\n\t\t\t\tencodeURIComponent(String(value))\n\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\n\t\t\tkey = encodeURIComponent(String(key))\n\t\t\t\t.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n\t\t\t\t.replace(/[\\(\\)]/g, escape);\n\n\t\t\tvar stringifiedAttributes = '';\n\t\t\tfor (var attributeName in attributes) {\n\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Considers RFC 6265 section 5.2:\n\t\t\t\t// ...\n\t\t\t\t// 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n\t\t\t\t//     character:\n\t\t\t\t// Consume the characters of the unparsed-attributes up to,\n\t\t\t\t// not including, the first %x3B (\";\") character.\n\t\t\t\t// ...\n\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n\t\t\t}\n\n\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t}\n\n\t\tfunction get (key, json) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar jar = {};\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all.\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = decode(parts[0]);\n\t\t\t\t\tcookie = (converter.read || converter)(cookie, name) ||\n\t\t\t\t\t\tdecode(cookie);\n\n\t\t\t\t\tif (json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tjar[name] = cookie;\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn key ? jar[key] : jar;\n\t\t}\n\n\t\tapi.set = set;\n\t\tapi.get = function (key) {\n\t\t\treturn get(key, false /* read as raw */);\n\t\t};\n\t\tapi.getJSON = function (key) {\n\t\t\treturn get(key, true /* read as json */);\n\t\t};\n\t\tapi.remove = function (key, attributes) {\n\t\t\tset(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.defaults = {};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { WidgetService } from './com/quickhellou/widget/WidgetService'\r\nimport { WidgetEmbedView } from './com/quickhellou/widget/WidgetEmbedView'\r\n\r\n// Initialize event target that will proxy all iframe event handlers\r\nwindow.document.QHDispatcher = new EventTarget()\r\n\r\ndocument.addEventListener(\"readystatechange\", () => {\r\n  const consoleAppUrl = document.querySelector('iframe#qh_iframe').dataset.url\r\n  const widgetId = document.querySelector('iframe#qh_iframe').dataset.id\r\n  // service\r\n  const widgetService = new WidgetService(consoleAppUrl, widgetId)\r\n  widgetService\r\n    .init()\r\n    .then(() => {\r\n      const embedView = new WidgetEmbedView(widgetService)\r\n      embedView.init(window.document.QHDispatcher)\r\n    })\r\n    .catch((reason) => {\r\n      console.log('QuickHellou failure: ', reason)\r\n    })\r\n})"],"names":["ObservableController","constructor","this","observable","EventEmitter","addListener","label","callback","removeListener","emit","args","UIView","uiGet","cssSelector","HTMLUtils","uiExists","uiArray","removeListeners","element","newElement","cloneNode","parentNode","replaceChild","removeElementListeners","removeListListeners","forEach","listeners","Map","has","set","get","push","index","length","reduce","i","listener","isFunction","splice","obj","FormService","getAsXMLHttpRequest","serviceName","sendAsXMLHttpRequest","postAsXMLHttpRequest","fieldSet","method","url","formData","FormData","key","value","Object","entries","append","Promise","resolve","reject","request","XMLHttpRequest","open","addEventListener","includes","status","responseText","csrftoken","Cookie","setRequestHeader","send","sendAsXMLHttpFormEncodedRequest","data","field","name","sendAsForm","action","html","document","body","insertAdjacentHTML","getElementById","submit","BaseUtils","static","s","e","urlName","meta","querySelector","isObjectDefined","attributes","content","hostname","window","location","log","message","console","selector","warn","getInputByName","checked","inputElement","getSelectByName","selectedOptions","text","selectElement","getInputByClassName","getSelectByClassName","elementList","querySelectorAll","Array","from","list","elements","activateElement","classList","add","deactivateElement","remove","clipboardData","setData","preventDefault","execCommand","removeEventListener","txt","createElement","innerHTML","className","days","path","expires","Date","now","toUTCString","cookie","encodeURIComponent","split","r","v","parts","decodeURIComponent","setCookie","StringUtils","isEmpty","string1","string2","getTime","toString","email","test","ipAddress","replace","toUpperCase","expression","matches","exec","EMPTY","prevHash","currVal","charCodeAt","ApplicationSettings","objString","objs","JSON","parse","videoAppUrl","video_app_url","consoleAppUrl","console_app_url","webSocketServiceUrl","ws_service_url","adminEmailAddress","admin_email_address","getValue","propertyName","filter","property","ComSessionStatus","STATUS_PENDING","STATUS_ENQUEUED","STATUS_MISSED","STATUS_CANCELLED","STATUS_REJECTED","STATUS_ACCEPTED","STATUS_COMPLETED","UserType","ADMIN","GUEST","ApiService","baseUrl","super","getCurrentUser","getJson","getSettings","getUserById","userId","getWidgetById","widgetId","getCommunicationRecord","communicationId","actionName","createCall","userWSId","widgetUuid","caller_name","caller_id","widget_uuid","rateComSession","id","rate","cancelCall","getUuid","str","setComSessionAsAccepted","setComSessionStatus","setComSessionAsRejected","setComSessionAsCancelled","setComSessionAsCompleted","setComSessionAsEnqueued","getPendingSessions","WebSocketService","serviceUrl","isOpen","openWebSocketConnection","websocket","WebSocket","onopen","readyState","OPEN","attachWebSocketEventHandlers","onerror","event","currentTarget","onmessage","handleMessageResponse","onclose","response","responseJson","error","msg","messageJson","type","handleNamedResponse","REQUEST_CALL","user","widget","CANCEL_CALL","recordId","ACCEPT_CALL_REQUEST","uuid","REJECT_CALL_REQUEST","SEND_COMMUNICATION_RECORD","record","registerList","userType","records","register","registerOperatorsList","widgets","deregisterList","deregister","roomId","sendWebSocketMessage","cmd","clientid","clienttype","roomid","registerOperator","registerGuest","SEND","client_board_id","sendToOther","otherUserId","otherid","listClients","listGuests","listAdmins","requestCall","adminId","stringify","acceptCallRequest","calleeId","callerUserId","comSessionId","rejectCallRequest","passCommunicationRecord","otherUserWSId","async","persistant","roomtype","String","QhUtils","getQhProperty","appUuid","WidgetEmbedView","service","isExpanded","extDispatcher","onCallRejected","a","onListUsers","onError","expandView","anyOperatorActive","collapseView","handleDesciptionsOnOperatorListChange","toggleView","isEnabled","dispatchEvent","CustomEvent","detail","source","disable","WidgetService","apiService","users","then","appSettingsJson","appSettings","widgetObject","install","result","webSocketService","onUserRegister","onCallAccepted","onCommunicationRecord","Math","floor","videochatProxy","videochat","proxy","onCloseVideoChat","destroyVideoChatApp","destroy","adminUuid","admins","sessionRecord","getUser","sendScheduleForm","toLowerCase","sendStartVideoChatForm","userJson","resultJson","setUserId","factory","module","exports","OldCookies","Cookies","api","noConflict","extend","arguments","decode","init","converter","defaults","write","escape","stringifiedAttributes","attributeName","json","jar","cookies","slice","join","charAt","read","getJSON","withConverter","_defineProperty","defineProperty","enumerable","configurable","writable","_toPrimitive","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","_toPropertyKey","arg","_typeof","iterator","prototype","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","o","prop","hasOwnProperty","toStringTag","QHDispatcher","EventTarget","dataset","widgetService","catch","reason"],"sourceRoot":""}