{"version":3,"file":"js/widget_embed.js","mappings":"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","sources":["webpack:///../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///../../node_modules/js-cookie/dist/js.cookie.mjs","webpack:///./js/com/genb/base/controller/ObservableController.js","webpack:///./js/com/genb/base/controller/UIView.js","webpack:///./js/com/genb/base/service/EventEmitter.js","webpack:///./js/com/genb/base/service/FormService.js","webpack:///./js/com/genb/base/utils/BaseUtils.js","webpack:///./js/com/genb/base/utils/HTMLUtils.js","webpack:///./js/com/genb/base/utils/StringUtils.js","webpack:///./js/com/quickhellou/base/model/ApplicationSettings.js","webpack:///./js/com/quickhellou/base/model/ComSessionStatus.js","webpack:///./js/com/quickhellou/base/model/UserType.js","webpack:///./js/com/quickhellou/base/services/ApiService.js","webpack:///./js/com/quickhellou/base/services/WebSocketService.js","webpack:///./js/com/quickhellou/base/utils/QhUtils.js","webpack:///./js/com/quickhellou/widget/WidgetEmbedView.js","webpack:///./js/com/quickhellou/widget/WidgetService.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./js/widget_embed.js"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n","import { EventEmitter } from '../service/EventEmitter'\r\n\r\n/**\r\n * Event emitter controller.\r\n *\r\n * @export\r\n * @class ObservableController\r\n */\r\nexport class ObservableController {\r\n  /**\r\n   * Creates an instance of ObservableController.\r\n   *\r\n   * @memberof ObservableController\r\n   */\r\n  constructor() {\r\n    this.observable = new EventEmitter()\r\n  }\r\n\r\n  /**\r\n   * Adds emitter listener.\r\n   *\r\n   * @param {string} label\r\n   * @param {*} callback\r\n   * @memberof ObservableController\r\n   */\r\n  addListener(label, callback) {\r\n    this.observable.addListener(label, callback)\r\n  }\r\n\r\n  /**\r\n   * Removes emitter listener.\r\n   *\r\n   * @param {string} label\r\n   * @param {*} callback\r\n   * @memberof ObservableController\r\n   */\r\n  removeListener(label, callback) {\r\n    this.observable.removeListener(label, callback)\r\n  }\r\n\r\n  /**\r\n   * Emits an event.\r\n   *\r\n   * @param {string} label\r\n   * @param {*} args\r\n   * @memberof ObservableController\r\n   */\r\n  emit(label, ...args) {\r\n    this.observable.emit(label, ...args)\r\n  }\r\n}\r\n","import { ObservableController } from './ObservableController'\r\nimport { HTMLUtils } from '../utils/HTMLUtils'\r\n\r\n/**\r\n * UI view facade.\r\n *\r\n * @export\r\n * @class UIViewController\r\n * @extends {ObservableController}\r\n */\r\nexport class UIView extends ObservableController {\r\n  /**\r\n   * Gets DOM element by a CSS selector.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @returns\r\n   * @memberof UIViewController\r\n   */\r\n  uiGet(cssSelector) {\r\n    return HTMLUtils.get(cssSelector)\r\n  }\r\n\r\n  /**\r\n   * Checks if DOM element selected by given CSS selector exists.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @returns\r\n   * @memberof UIViewController\r\n   */\r\n  uiExists(cssSelector) {\r\n    return HTMLUtils.exists(cssSelector)\r\n  }\r\n\r\n  /**\r\n   * Returns DOM elements list selected by given CSS selector as Array object.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @returns {Array<HTMLElement>}\r\n   * @memberof UIView\r\n   */\r\n  uiArray(cssSelector) {\r\n    return HTMLUtils.array(cssSelector)\r\n  }\r\n\r\n  /**\r\n   * Removes all listeners by replacing it with a clone.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @memberof UIView\r\n   */\r\n  removeListeners(cssSelector) {\r\n    var element = this.uiGet(cssSelector)\r\n    var newElement = element.cloneNode(true)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  /**\r\n   * Removes all element listeners by replacing it with a clone.\r\n   *\r\n   * @param {HTMLElement} element\r\n   * @memberof UIView\r\n   */\r\n  removeElementListeners(element) {\r\n    var newElement = element.cloneNode(true)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  /**\r\n   * Removes all listeners from list of HTMLElements by replacing it with a clone.\r\n   *\r\n   * @param {string} cssSelector\r\n   * @memberof UIView\r\n   */\r\n  removeListListeners(cssSelector) {\r\n    this.uiArray(cssSelector).forEach(element => {\r\n      this.removeElementListeners(element)\r\n    })\r\n  }\r\n}\r\n","/**\r\n * Event emitter.\r\n *\r\n * @export\r\n * @class EventEmitter\r\n */\r\nexport class EventEmitter {\r\n  /**\r\n   * Creates an instance of EventEmitter.\r\n   *\r\n   * @memberof EventEmitter\r\n   */\r\n  constructor() {\r\n    this.listeners = new Map()\r\n  }\r\n\r\n  /**\r\n   * Ads an event listener.\r\n   *\r\n   * @param {String} label\r\n   * @param {*} callback\r\n   * @memberof EventEmitter\r\n   */\r\n  addListener(label, callback) {\r\n    this.listeners.has(label) || this.listeners.set(label, [])\r\n    this.listeners.get(label).push(callback)\r\n  }\r\n\r\n  /**\r\n   * Removes an event listener.\r\n   *\r\n   * @param {String} label\r\n   * @param {*} callback\r\n   * @returns\r\n   * @memberof EventEmitter\r\n   */\r\n  removeListener(label, callback) {\r\n    let listeners = this.listeners.get(label),\r\n      index\r\n\r\n    if (listeners && listeners.length) {\r\n      index = listeners.reduce((i, listener, index) => {\r\n        return this.isFunction(listener) && listener === callback\r\n          ? (i = index)\r\n          : i\r\n      }, -1)\r\n\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n        this.listeners.set(label, listeners)\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Emits an event.\r\n   *\r\n   * @param {String} label\r\n   * @param {*} args\r\n   * @returns\r\n   * @memberof EventEmitter\r\n   */\r\n  emit(label, ...args) {\r\n    let listeners = this.listeners.get(label)\r\n\r\n    if (listeners && listeners.length) {\r\n      listeners.forEach((listener) => {\r\n        listener(...args)\r\n      })\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Checks if object is function.\r\n   *\r\n   * @param {object} obj\r\n   * @returns\r\n   * @memberof EventEmitter\r\n   */\r\n  isFunction(obj) {\r\n    return typeof obj === 'function' || false\r\n  }\r\n}\r\n","import { EventEmitter } from './EventEmitter'\r\n\r\nimport Cookie from 'js-cookie'\r\n\r\n/**\r\n * Form service class.\r\n *\r\n * @export\r\n * @class FormService\r\n */\r\nexport class FormService extends EventEmitter {\r\n  /**\r\n   * Gets data as XMLHttpRequest call.\r\n   *\r\n   * @param {string} serviceName\r\n   * @memberof FormService\r\n   */\r\n  getAsXMLHttpRequest(serviceName) {\r\n    return this.sendAsXMLHttpRequest('GET', [], serviceName)\r\n  }\r\n\r\n  /**\r\n   * Posts data as XMLHttpRequest call.\r\n   *\r\n   * @param {*} fieldSet\r\n   * @param {string} serviceName\r\n   * @memberof FormService\r\n   */\r\n  postAsXMLHttpRequest(fieldSet, serviceName) {\r\n    return this.sendAsXMLHttpRequest('POST', fieldSet, serviceName)\r\n  }\r\n\r\n  /**\r\n   * Sends data as XMLHttpRequest call.\r\n   *\r\n   * @param {string} method\r\n   * @param {array<object>} fieldSet\r\n   * @param {string} url\r\n   * @memberof FormService\r\n   */\r\n  sendAsXMLHttpRequest(method, fieldSet, url) {\r\n    let formData = new FormData()\r\n    for (const [key, value] of Object.entries(fieldSet)) {\r\n      formData.append(key, value)\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      let request = new XMLHttpRequest()\r\n      request.open(method, url, true)\r\n      request.addEventListener('load', () => {\r\n        if ([200, 201].includes(request.status)) {\r\n          resolve(request.responseText)\r\n        }\r\n        reject(request.responseText)\r\n      })\r\n      var csrftoken = Cookie.get('csrftoken')\r\n      if (csrftoken !== 'undefined') {\r\n        request.setRequestHeader('X-CSRFToken', csrftoken)\r\n      }\r\n      request.send(formData)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends serialized parameters as form url encoded type.\r\n   *\r\n   * @param {*} fieldSet\r\n   * @param {string} serviceName\r\n   * @returns\r\n   * @memberof FormService\r\n   */\r\n  sendAsXMLHttpFormEncodedRequest(fieldSet, serviceName) {\r\n    let data = ''\r\n    fieldSet.forEach((field) => {\r\n      data = `${data}${field.name}=${field.value}&`\r\n    })\r\n    return new Promise((resolve) => {\r\n      let request = new XMLHttpRequest()\r\n      request.open('POST', serviceName, true)\r\n      request.addEventListener('load', () => {\r\n        resolve(request.responseText)\r\n      })\r\n      request.setRequestHeader(\r\n        'Content-Type',\r\n        'application/x-www-form-urlencoded'\r\n      )\r\n      request.send(data)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends data as HTML form.\r\n   *\r\n   * @param {*} fieldSet\r\n   * @param {string} action\r\n   * @memberof FormService\r\n   */\r\n  sendAsForm(fieldSet, action) {\r\n    let html = `<form id=\"__form__\" action='${action}' method=\"POST\" enctype=\"multipart/form-data\">`\r\n    var csrftoken = Cookie.get('csrftoken')\r\n    if (csrftoken !== 'undefined') {\r\n      html += `<input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"${csrftoken}\">`\r\n    }\r\n    for (const [key, value] of Object.entries(fieldSet)) {\r\n      html += `<input type=\"hidden\" name=\"${key}\" value='${value}'>`\r\n    }\r\n    html += `</form>`\r\n    document.body.insertAdjacentHTML('beforeend', html)\r\n    const form = document.getElementById('__form__')\r\n    form.submit()\r\n  }\r\n}\r\n","export class BaseUtils {\r\n  /**\r\n   * Checks if an object is defined.\r\n   *\r\n   * @static\r\n   * @param {String} s\r\n   * @returns\r\n   * @memberof BaseUtils\r\n   */\r\n  static isObjectDefined(s) {\r\n    try {\r\n      return typeof s !== 'undefined' && s !== null\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  static isPage(urlName) {\r\n    const meta = document.querySelector(\"meta[property='emd:page']\")\r\n    if (BaseUtils.isObjectDefined(meta)) {\r\n      return meta.attributes.content.value === urlName\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Returns a hostname.\r\n   *\r\n   * @readonly\r\n   * @static\r\n   * @memberof BaseUtils\r\n   */\r\n  static get hostname() {\r\n    return window.location.hostname\r\n  }\r\n\r\n  log(message) {\r\n    console.log(message)\r\n  }\r\n}\r\n","import { BaseUtils } from './BaseUtils'\r\n\r\n/**\r\n * HTML utilities.\r\n *\r\n * @export\r\n * @class HTMLUtils\r\n */\r\nexport class HTMLUtils {\r\n  /**\r\n   * Gets an element by a selector.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static get(selector) {\r\n    const element = document.querySelector(selector)\r\n    if (!BaseUtils.isObjectDefined(element)) {\r\n      console.warn(`HTMLUtils::get Element \"${selector}\" is not defined.`)\r\n    }\r\n    return element\r\n  }\r\n\r\n  /**\r\n   * Checks if DOM element selected by given CSS selector exists.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static exists(cssSelector) {\r\n    const element = document.querySelector(cssSelector)\r\n    return BaseUtils.isObjectDefined(element)\r\n  }\r\n\r\n  /**\r\n   * Gets a default form element.\r\n   *\r\n   * @memberof HTMLUtils\r\n   */\r\n  static getForm() {\r\n    return HTMLUtils.get('form')\r\n  }\r\n\r\n  /**\r\n   * Gets DOM element value by name attribute.\r\n   *\r\n   * @static\r\n   * @param {string} name\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static getValueByName(name) {\r\n    return this.get(`*[name=\"${name}\"]`).value\r\n  }\r\n\r\n  /**\r\n   * Gets DOM input element value by name attribute.\r\n   *\r\n   * @static\r\n   * @param {string} name\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static getInputByName(name) {\r\n    return this.get(`input[name=\"${name}\"]`)\r\n  }\r\n\r\n  static getInputByClassName(name) {\r\n    return this.get(`input.${name}`)\r\n  }\r\n\r\n  static getSelectByName(name) {\r\n    return this.get(`select[name=\"${name}\"]`)\r\n  }\r\n\r\n  static getSelectByClassName(name) {\r\n    return this.get(`select.${name}`)\r\n  }\r\n\r\n  static getInputValueByName(name) {\r\n    return this.getInputByName(name).value\r\n  }\r\n\r\n  static getCheckboxValueByName(name) {\r\n    return this.getInputByName(name).checked ? 'true' : 'false'\r\n  }\r\n\r\n  static setInputValueByName(name, value) {\r\n    const inputElement = this.getInputByName(name)\r\n    if (BaseUtils.isObjectDefined(inputElement)) {\r\n      inputElement.value = value\r\n    } else {\r\n      console.warn(`setInputValueByName:: Element '${name}' is not defined.`)\r\n    }\r\n  }\r\n\r\n  static getSelectValueByName(name) {\r\n    return this.getSelectByName(name).value\r\n  }\r\n\r\n  static getSelectTextByName(name) {\r\n    return this.getSelectByName(name).selectedOptions[0].text\r\n  }\r\n\r\n  static setSelectValueByName(name, value) {\r\n    const selectElement = this.getSelectByName(name)\r\n    if (BaseUtils.isObjectDefined(selectElement)) {\r\n      selectElement.value = value\r\n    } else {\r\n      console.warn(`setSelectValueByName:: Element '${name}' is not defined.`)\r\n    }\r\n  }\r\n\r\n  static getInputValueByClassName(name) {\r\n    return this.getInputByClassName(name).value\r\n  }\r\n\r\n  static getSelectValueByClassName(name) {\r\n    return this.getSelectByClassName(name).value\r\n  }\r\n\r\n  /**\r\n   * Lists DOM elements.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static list(selector) {\r\n    const elementList = document.querySelectorAll(selector)\r\n    if (!BaseUtils.isObjectDefined(elementList)) {\r\n      console.warn(`Elements \"${selector}\" are not defined.`)\r\n    }\r\n    return elementList\r\n  }\r\n\r\n  /**\r\n   * Returns DOM elements list as Array object.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static array(selector) {\r\n    return Array.from(HTMLUtils.list(selector))\r\n  }\r\n\r\n  static firstToHTMLElement(elements) {\r\n    if (elements.length > 0) {\r\n      return elements[0]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activates DOM element created from selector by adding CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @memberof HTMLUtils\r\n   */\r\n  static activate(selector) {\r\n    const element = HTMLUtils.get(selector)\r\n    HTMLUtils.activateElement(element)\r\n  }\r\n\r\n  /**\r\n   * Activates DOM element by adding CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {HTMLElement} element\r\n   * @memberof HTMLUtils\r\n   */\r\n  static activateElement(element) {\r\n    element.classList.add('js-active')\r\n  }\r\n\r\n  /**\r\n   * Deactivates DOM element created from selector by removing CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {string} selector\r\n   * @memberof HTMLUtils\r\n   */\r\n  static deactivate(selector) {\r\n    const element = HTMLUtils.get(selector)\r\n    HTMLUtils.deactivateElement(element)\r\n  }\r\n\r\n  /**\r\n   * Deactivates DOM element by removing CSS activation class.\r\n   *\r\n   * @static\r\n   * @param {HTMLElement} element\r\n   * @memberof HTMLUtils\r\n   */\r\n  static deactivateElement(element) {\r\n    element.classList.remove('js-active')\r\n  }\r\n\r\n  /**\r\n   * Copies string to clipboard.\r\n   *\r\n   * @static\r\n   * @param {string} s\r\n   * @memberof HTMLUtils\r\n   */\r\n  static copyToClipboard(s) {\r\n    function listener(e) {\r\n      e.clipboardData.setData('text/html', s)\r\n      e.clipboardData.setData('text/plain', s)\r\n      e.preventDefault()\r\n    }\r\n    document.addEventListener('copy', listener)\r\n    document.execCommand('copy')\r\n    document.removeEventListener('copy', listener)\r\n  }\r\n\r\n  /**\r\n   * Decodes HTML text.\r\n   *\r\n   * @static\r\n   * @param {string} html\r\n   * @returns\r\n   * @memberof HTMLUtils\r\n   */\r\n  static decodeHtml(html) {\r\n    var txt = document.createElement('textarea')\r\n    txt.innerHTML = html\r\n    return txt.value\r\n  }\r\n\r\n  /**\r\n   * Removes all event listeners from an html element by a class name.\r\n   *\r\n   * @param {string} className the class name\r\n   */\r\n  static removeAllEventListeners(className) {\r\n    const element = document.querySelector(className)\r\n    const newElement = element.cloneNode(element)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  /**\r\n   * Removes all event listeners from an html element by a class name.\r\n   *\r\n   * @param {string} className the class name\r\n   */\r\n   static removeAllEventListenersFromElement(element) {\r\n    const newElement = element.cloneNode(element)\r\n    element.parentNode.replaceChild(newElement, element)\r\n  }\r\n\r\n  static setCookie(name, value, days = 7, path = '/') {\r\n    const expires = new Date(Date.now() + days * 864e5).toUTCString()\r\n    document.cookie =\r\n      name +\r\n      '=' +\r\n      encodeURIComponent(value) +\r\n      '; expires=' +\r\n      expires +\r\n      '; path=' +\r\n      path\r\n  }\r\n\r\n  static getCookie(name) {\r\n    return document.cookie.split('; ').reduce((r, v) => {\r\n      const parts = v.split('=')\r\n      return parts[0] === name ? decodeURIComponent(parts[1]) : r\r\n    }, '')\r\n  }\r\n\r\n  static deleteCookie(name, path) {\r\n    this.setCookie(name, '', -1, path)\r\n  }\r\n\r\n    /**\r\n   * Binds reCAPTCHA protected form submit action.\r\n   *\r\n   * @static\r\n   * @memberof HtmlUtils\r\n   */\r\n  static bindReCaptchaFormSubmit() {\r\n    const form = document.querySelector('form.g-form')\r\n    const submitButton = form.querySelector('button[data-action=submit]')\r\n\r\n    const handleSubmit = () => {\r\n      HTMLUtils.acquireReCaptchaToken(submitButton.dataset.sitekey)\r\n        .then(() => {\r\n          form.submit()\r\n        })\r\n        .catch(() => alert('Recaptcha key is invalid.'))\r\n    }\r\n\r\n    submitButton.addEventListener('click', (e) => {\r\n      e.preventDefault()\r\n      handleSubmit()\r\n    })\r\n\r\n    form.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Enter' && e.target.tagName !== 'TEXTAREA') {\r\n        e.preventDefault()\r\n        handleSubmit()\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Acquires and sets recaptcha token.\r\n   *\r\n   * @param {string} siteKey the reCAPTCHA site key\r\n   * @return {Promise} the promise\r\n   *\r\n   * @static\r\n   * @memberof HtmlUtils\r\n   */\r\n  static acquireReCaptchaToken(siteKey) {\r\n    const recaptchaTokenInput = document.querySelector(\r\n      'input[name=recaptcha_token]'\r\n    )\r\n    return new Promise((resolve, reject) => {\r\n      grecaptcha.execute(siteKey, { action: 'submit' }).then(\r\n        (token) => {\r\n          recaptchaTokenInput.value = token\r\n          resolve()\r\n        },\r\n        (reason) => {\r\n          reject(reason)\r\n        }\r\n      )\r\n    })\r\n  }\r\n}\r\n","/**\r\n * String utilities\r\n * \r\n * @export\r\n * @class StringUtils\r\n */\r\nexport class StringUtils {\r\n  \r\n  static EMPTY = \"\";\r\n  static URL_TARGET_BLANK = \"_blank\";\r\n  static URL_TARGET_SELF = \"_self\";\r\n    \r\n  /**\r\n   * Checks if a string is defined.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isDefined(s) {\r\n    return typeof s === \"string\";\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is empty.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns \r\n   * @memberof StringUtils\r\n   */\r\n  static isEmpty(s) {\r\n    return typeof s === \"string\" && s.length === 0;\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is not empty.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isNotEmpty(s) {\r\n    return !this.isEmpty(s);\r\n  }\r\n\r\n  /**\r\n   * Checks if two strings are equal.\r\n   * \r\n   * @static\r\n   * @param {string} string1 \r\n   * @param {string} string2 \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static equals(string1, string2) {\r\n    return string1 === string2; \r\n  }\r\n\r\n  /**\r\n   * Gets an unique identifier.\r\n   * \r\n   * @static\r\n   * @returns {string} \r\n   * @memberof StringUtils\r\n   */\r\n  static getUID() {\r\n    var timestamp = new Date().getTime();  \r\n    return timestamp.toString();\r\n  }\r\n\r\n  /**\r\n   * Checks if e-mail string is valid.\r\n   * \r\n   * @static\r\n   * @param {string} email \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isEmailValid(email) {\r\n    return /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(email);\r\n  }\r\n\r\n  /**\r\n   * Checks if IP address is valid.\r\n   *\r\n   * @static\r\n   * @param {*} ipAddress\r\n   * @returns\r\n   * @memberof StringUtils\r\n   */\r\n  static isIpAddressValid(ipAddress) {\r\n    return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ipAddress);\r\n  }\r\n  \r\n  /**\r\n   * Checks if URL string is valid.\r\n   * \r\n   * @static\r\n   * @param {string} url \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isUrlValid(url) {\r\n    return /((http|ftp|https):\\/\\/)?[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/.test(url);\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is a number.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isNumber(s) {\r\n    return /^-?\\d*[\\.]?\\d+$/.test(s);\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is in a currency format.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static isCurrency(s) {\r\n    return /(?=.)^\\$?(([1-9][0-9]{0,2}(,[0-9]{3})*)|[0-9]+)?(\\.[0-9]{1,2})?$/.test(s);\r\n  }\r\n\r\n  /**\r\n   * Extracts Form Builder field type string.\r\n   * \r\n   * @static\r\n   * @param {string} className \r\n   * @returns {string} \r\n   * @memberof StringUtils\r\n   */\r\n  static extractFormBuilderFormFieldType(className) {\r\n    return className.split(\" \")[0].split(\"-\")[1];\r\n  }\r\n\r\n  /**\r\n   * Extracts file name from path.\r\n   * \r\n   * @static\r\n   * @param {string} path \r\n   * @returns {string} \r\n   * @memberof StringUtils\r\n   */\r\n  static extractFileNameFromPath(path) {\r\n    return path.replace(/^.*[\\\\\\/]/, '');\r\n  }\r\n\r\n  /**\r\n   * Capitalize first letter of a string.\r\n   *\r\n   * @static\r\n   * @param {string} s\r\n   * @returns {string}\r\n   * @memberof StringUtils\r\n   */\r\n  static capitalize(i) {\r\n    return i.replace(/(^| )(\\w)/g, s => s.toUpperCase());\r\n  }\r\n\r\n  /**\r\n   * Converts string to boolean.\r\n   * \r\n   * @static\r\n   * @param {string} s \r\n   * @returns {boolean} \r\n   * @memberof StringUtils\r\n   */\r\n  static toBoolean(s) {\r\n    return /(true|True|1)/g.test(s);\r\n  }\r\n  \r\n  /**\r\n   * Strips string from quotes.\r\n   *\r\n   * @static\r\n   * @param {*} expression\r\n   * @returns\r\n   * @memberof StringUtils\r\n   */\r\n  static stripFromQuotes(expression) {\r\n    let matches = /(['\"]?)(.*)\\1/.exec(expression); \r\n    if (matches.length > 2) {\r\n      return matches[2];\r\n    }\r\n    return StringUtils.EMPTY;\r\n  }\r\n\r\n  static hashCode(s) {\r\n    return s.split('').reduce((prevHash, currVal) =>\r\n      ((prevHash << 5) - prevHash) + currVal.charCodeAt(0), 0);\r\n  }\r\n}","/**\r\n * Application settings.\r\n *\r\n * @export\r\n * @class ApplicationSettings\r\n */\r\nexport class ApplicationSettings {\r\n  /**\r\n   * Creates an instance of ApplicationSettings.\r\n   *\r\n   * @param {objString} obj\r\n   * @memberof ApplicationSettings\r\n   */\r\n  constructor(objString) {\r\n    this.objs = JSON.parse(objString)\r\n    this.videoAppUrl = this.objs.video_app_url\r\n    this.consoleAppUrl = this.objs.console_app_url\r\n    this.webSocketServiceUrl = this.objs.ws_service_url\r\n    this.adminEmailAddress = this.objs.admin_email_address\r\n  }\r\n\r\n  /**\r\n   * Gets value from property name.\r\n   *\r\n   * @param {string} propertyName\r\n   * @returns\r\n   * @memberof ApplicationSettings\r\n   */\r\n  getValue(propertyName) {\r\n    return this.objs.filter((obj) => obj.property === propertyName)[0].value\r\n  }\r\n}\r\n","export class ComSessionStatus {}\r\nComSessionStatus.STATUS_PENDING = 1\r\nComSessionStatus.STATUS_ENQUEUED = 2\r\nComSessionStatus.STATUS_MISSED = 3\r\nComSessionStatus.STATUS_CANCELLED = 4\r\nComSessionStatus.STATUS_REJECTED = 5\r\nComSessionStatus.STATUS_ACCEPTED = 6\r\nComSessionStatus.STATUS_COMPLETED = 7\r\n","export class UserType {}\r\nUserType.ADMIN = 'admin'\r\nUserType.GUEST = 'guest'\r\n","import { FormService } from '../../../genb/base/service/FormService'\r\nimport { ComSessionStatus } from '../model/ComSessionStatus'\r\n\r\n/**\r\n * Application REST API facade.\r\n * Points to the '{console_app_url}/api/' end.\r\n *\r\n * @export\r\n * @class ApiService\r\n * @extends {FormService}\r\n */\r\nexport class ApiService extends FormService {\r\n  constructor(baseUrl) {\r\n    super()\r\n    this.baseUrl = baseUrl\r\n  }\r\n\r\n  /**\r\n   * Gets current user.\r\n   *\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getCurrentUser() {\r\n    return this.getJson(`${this.baseUrl}/api/users/current/`)\r\n  }\r\n\r\n  /**\r\n   * Gets application settings\r\n   *\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getSettings() {\r\n    return this.getJson(`${this.baseUrl}/api/settings/`)\r\n  }\r\n\r\n  /**\r\n   * Gets user by id.\r\n   *\r\n   * @param {string} userId\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getUserById(userId) {\r\n    return this.getJson(`${this.baseUrl}/api/users/${userId}/`)\r\n  }\r\n\r\n  /**\r\n   * Gets widget by id.\r\n   *\r\n   * @param {string} widgetId\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getWidgetById(widgetId) {\r\n    return this.getJson(`${this.baseUrl}/api/widgets/${widgetId}/`)\r\n  }\r\n\r\n  /**\r\n   * Gets communication record by id.\r\n   *\r\n   * @param {string} communicationId\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getCommunicationRecord(communicationId) {\r\n    return this.getJson(\r\n      `${this.baseUrl}/api/appointments/${communicationId}/`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets Json data from XMLHttpRequest request.\r\n   *\r\n   * @param {string} actionName\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  getJson(actionName) {\r\n    return this.getAsXMLHttpRequest(`${actionName}?format=json`)\r\n  }\r\n\r\n  /**\r\n   * Creates call record.\r\n   *\r\n   * @param {string} callerName\r\n   * @param {string} widgetUuid\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  createCall(userWSId, userId, widgetUuid) {\r\n    const fieldSet = {\r\n      caller_name: userWSId,\r\n      caller_id: userId,\r\n      widget_uuid: widgetUuid,\r\n    }\r\n    return this.postAsXMLHttpRequest(\r\n      fieldSet,\r\n      `${this.baseUrl}/api/appointments/`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {*} id the communication session ID \r\n   * @param {number} rate the session rate\r\n   * @returns \r\n   */\r\n  rateComSession(id, rate) {\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/com_sessions/rate/${id}/${rate}`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Cancels call record.\r\n   *\r\n   * @param {string} callerName\r\n   * @param {string} widgetUuid\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  cancelCall(id) {\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/appointments/cancel/${id}/`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets UUID from string.\r\n   *\r\n   * @param {string} str\r\n   * @memberof ApiService\r\n   */\r\n  getUuid(str) {\r\n    // TODO: make it as POST\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/com_sessions/room-uuid/${str}`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as accepted.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsAccepted(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_ACCEPTED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as rejected.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsRejected(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_REJECTED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as cancelled.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsCancelled(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_CANCELLED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as completed.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsCompleted(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_COMPLETED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status as enqueued.\r\n   *\r\n   * @param {string} id\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionAsEnqueued(id) {\r\n    return this.setComSessionStatus(id, ComSessionStatus.STATUS_ENQUEUED)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session status.\r\n   *\r\n   * @param {string} id\r\n   * @param {number} status\r\n   * @returns\r\n   * @memberof ApiService\r\n   */\r\n  setComSessionStatus(id, status) {\r\n    return this.getAsXMLHttpRequest(\r\n      `${this.baseUrl}/api/com_sessions/status/${id}/${status}`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets pending sessions.\r\n   *\r\n   * @memberof ApiService\r\n   */\r\n  getPendingSessions() {\r\n    return this.getAsXMLHttpRequest(`${this.baseUrl}/api/com_sessions/pending/1`)\r\n  }\r\n}\r\n","import { FormService } from '../../../genb/base/service/FormService'\r\nimport { UserType } from '../model/UserType'\r\n\r\n/**\r\n * Handles WebSocket connection.\r\n * Points to the go collider server.\r\n *\r\n * @export\r\n * @class WebSocketService\r\n * @extends {FormService}\r\n */\r\n\r\nexport class WebSocketService extends FormService {\r\n  /**\r\n   * Creates an instance of WebSocketService.\r\n   *\r\n   * @param {string} serviceUrl\r\n   * @memberof WebSocketService\r\n   */\r\n  constructor(serviceUrl) {\r\n    super()\r\n\r\n    this.url = serviceUrl\r\n    this.isOpen = false\r\n\r\n    this.openWebSocketConnection()\r\n  }\r\n\r\n  /**\r\n   * Opens server connection.\r\n   *\r\n   * @returns\r\n   * @memberof WebSocketService\r\n   */\r\n  openWebSocketConnection() {\r\n    return new Promise((resolve) => {\r\n      this.websocket = new WebSocket(this.url)\r\n      this.websocket.onopen = () => {\r\n         if (this.websocket.readyState === WebSocket.OPEN) {\r\n          this.isOpen = true\r\n          this.attachWebSocketEventHandlers()\r\n          resolve()\r\n        }\r\n      }\r\n      this.websocket.onerror = (event) => {\r\n        if (event.currentTarget.readyState === 3) {\r\n          this.emit('connection_failure')\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Attaches server event handlers.\r\n   *\r\n   * @memberof WebSocketService\r\n   */\r\n  attachWebSocketEventHandlers() {\r\n    this.websocket.onmessage = (event) => {\r\n      this.handleMessageResponse(event.data)\r\n    }\r\n    this.websocket.onclose = () => {\r\n      this.isOpen = false\r\n    }\r\n    this.websocket.onerror = (e) => {\r\n      console.log('websocket error', e)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles server response message.\r\n   *\r\n   * @param {object} response\r\n   * @memberof WebSocketService\r\n   */\r\n  handleMessageResponse(response) {\r\n    if (response === '') {\r\n      return\r\n    }\r\n\r\n    const responseJson = JSON.parse(response)\r\n    if (responseJson.error !== '') {\r\n      this.emit('error', responseJson.error)\r\n      return\r\n    }\r\n    const message = responseJson.msg\r\n    if (message !== '') {\r\n      const messageJson = JSON.parse(responseJson.msg)\r\n      switch (messageJson.type) {\r\n        case 'response':\r\n          this.handleNamedResponse(messageJson.body)\r\n          break\r\n        case 'list-clients':\r\n          this.emit('listUsers', messageJson.body)\r\n          break\r\n        case 'send':\r\n          this.handleNamedResponse(messageJson.body)\r\n          break\r\n        default:\r\n          console.log('Response type not found.')\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles named response.\r\n   *\r\n   * @param {object} responseJson\r\n   * @memberof WebSocketService\r\n   */\r\n  handleNamedResponse(response) {\r\n    if (response === '') {\r\n      return\r\n    }\r\n\r\n    const responseJson =\r\n      typeof response === 'string' ? JSON.parse(response) : response\r\n\r\n    switch (responseJson.name) {\r\n      case 'register':\r\n        this.emit('register', responseJson.status)\r\n        break\r\n      case WebSocketService.REQUEST_CALL:\r\n        this.emit(\r\n          'callRequest',\r\n          responseJson.user,\r\n          responseJson.userId,\r\n          responseJson.widget\r\n        )\r\n        break\r\n      case WebSocketService.CANCEL_CALL:\r\n        this.emit('callCancel', responseJson.recordId)\r\n        break\r\n      case WebSocketService.ACCEPT_CALL_REQUEST:\r\n        this.emit('callAccepted', responseJson.uuid)\r\n        break\r\n      case WebSocketService.REJECT_CALL_REQUEST:\r\n        this.emit('callRejected')\r\n        break\r\n      case WebSocketService.SEND_COMMUNICATION_RECORD:\r\n        this.emit('communicationRecord', responseJson.record)\r\n        break\r\n      default:\r\n        console.log('No named response found.')\r\n        break\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers the user in the multiple rooms identified by records ids.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} userType\r\n   * @param {array<object>} records\r\n   * @memberof WebSocketService\r\n   */\r\n  registerList(userId, userType, records) {\r\n    records.forEach((record) => {\r\n      this.register(userId, userType, record.id)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Registers the admin user in multiple rooms identified by\r\n   * installed widgets ids.\r\n   *\r\n   * @param {string} userId\r\n   * @param {array<object>} widgets\r\n   * @memberof WebSocketService\r\n   */\r\n  registerOperatorsList(userId, widgets) {\r\n    this.registerList(userId, UserType.ADMIN, widgets)\r\n  }\r\n\r\n  /**\r\n   * Deregisters the user from multiple rooms identified by records ids.\r\n   *\r\n   * @param {string} userId\r\n   * @param {array<object>} records\r\n   * @memberof WebSocketService\r\n   */\r\n  deregisterList(userId, records) {\r\n    records.forEach((record) => {\r\n      this.deregister(userId, record.id)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Registers the user in the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} userType\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  register(userId, userType, roomId) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'register',\r\n      clientid: userId,\r\n      clienttype: userType,\r\n      roomid: roomId,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Registers the admin user in the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  registerOperator(userId, roomId) {\r\n    this.register(userId, UserType.ADMIN, roomId)\r\n  }\r\n\r\n  /**\r\n   * Registers the guest user in the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  registerGuest(userId, roomId) {\r\n    this.register(userId, UserType.GUEST, roomId)\r\n  }\r\n\r\n  /**\r\n   * Deregisters the user from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  deregister(userId, roomId) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'deregister',\r\n      clientid: userId,\r\n      roomid: roomId,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends a message to the WebSocket server room.\r\n   *\r\n   * @param {object} user\r\n   * @param {string} message\r\n   * @memberof WebSocketService\r\n   */\r\n  send(user, message) {\r\n    this.sendWebSocketMessage({\r\n      cmd: WebSocketService.SEND,\r\n      clientid: user.uuid,\r\n      roomid: user.client_board_id,\r\n      msg: message,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Sends a message to the other user.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} otherUserId\r\n   * @param {string} roomId\r\n   * @param {string} message\r\n   * @memberof WebSocketService\r\n   */\r\n  sendToOther(userId, otherUserId, roomId, message) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'send-to-other',\r\n      clientid: userId,\r\n      roomid: roomId,\r\n      otherid: otherUserId,\r\n      msg: message,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Lists all clients from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} userType\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  listClients(userId, userType, roomId) {\r\n    this.sendWebSocketMessage({\r\n      cmd: 'list-clients',\r\n      clientid: userId,\r\n      clienttype: userType,\r\n      roomid: roomId,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Lists all guests from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  listGuests(userId, roomId) {\r\n    this.listClients(userId, UserType.GUEST, roomId)\r\n  }\r\n\r\n  /**\r\n   * Lists all admins from the room.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  listAdmins(userId, roomId) {\r\n    this.listClients(userId, UserType.ADMIN, roomId)\r\n  }\r\n\r\n  /**\r\n   * Requests a call with admin user.\r\n   *\r\n   * @param {string} userWSId the user ID in the WebService\r\n   * @param {string} userId the user ID\r\n   * @param {string} adminId the operator ID\r\n   * @param {string} roomId the room ID\r\n   * @memberof WebSocketService\r\n   */\r\n  requestCall(userWSId, userId, adminId, roomId) {\r\n    this.sendToOther(\r\n      userId,\r\n      adminId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.REQUEST_CALL,\r\n          user: userWSId,\r\n          userId: userId,\r\n          widget: roomId,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Sends a cancel call request. Sent by customer.\r\n   *\r\n   * @param {string} recordId the call record id\r\n   * @param {string} userId the user id\r\n   * @param {string} adminId the admin id\r\n   * @param {string} roomId the room id\r\n   * @memberof WebSocketService\r\n   */\r\n  cancelCall(recordId, userId, adminId, roomId) {\r\n    console.log('cancel call', recordId, userId, adminId, roomId)\r\n    // cancelCall(userWSId, roomId, recordId) {\r\n    /** this.sendWebSocketMessage({\r\n      cmd: WebSocketService.SEND,\r\n      clientid: userWSId,\r\n      clienttype: UserType.GUEST,\r\n      roomid: roomId,\r\n      msg: JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.CANCEL_CALL,\r\n          user: userWSId,\r\n          widget: roomId,\r\n          record: recordId,\r\n        },\r\n      }),\r\n    })*/\r\n    this.sendToOther(\r\n      userId,\r\n      adminId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.CANCEL_CALL,\r\n          recordId: recordId\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Accepts call request.\r\n   *\r\n   * @param {string} calleeId\r\n   * @param {string} callerUserId\r\n   * @param {string} roomId\r\n   * @param {string} comSessionId\r\n   * @memberof WebSocketService\r\n   */\r\n  acceptCallRequest(calleeId, callerUserId, roomId, comSessionId) {\r\n    this.sendToOther(\r\n      calleeId,\r\n      callerUserId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.ACCEPT_CALL_REQUEST,\r\n          uuid: comSessionId,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Rejects call request.\r\n   *\r\n   * @param {string} calleeId\r\n   * @param {string} callerUserId\r\n   * @param {string} roomId\r\n   * @memberof WebSocketService\r\n   */\r\n  rejectCallRequest(calleeId, callerUserId, roomId) {\r\n    this.sendToOther(\r\n      calleeId,\r\n      callerUserId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.REJECT_CALL_REQUEST,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Passes communication session record to remote client.\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} otherUserWSId\r\n   * @param {string} roomId\r\n   * @param {object} record\r\n   * @memberof WebSocketService\r\n   */\r\n  passCommunicationRecord(userId, otherUserWSId, roomId, record) {\r\n    this.sendToOther(\r\n      userId,\r\n      otherUserWSId,\r\n      roomId,\r\n      JSON.stringify({\r\n        type: 'send',\r\n        body: {\r\n          name: WebSocketService.SEND_COMMUNICATION_RECORD,\r\n          record: record,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Sends the message to the WebSocket service.\r\n   *\r\n   * @param {object} message the message\r\n   * @param {boolean} persistant\r\n   * @memberof WebSocketService\r\n   */\r\n  async sendWebSocketMessage(message, persistant = true) {\r\n    if (!this.isOpen) {\r\n      await this.openWebSocketConnection()\r\n    }\r\n\r\n    message.roomtype = 'client_board'\r\n    message.persistant = String(persistant)\r\n    this.websocket.send(JSON.stringify(message))\r\n  }\r\n}\r\n\r\nWebSocketService.SEND = 'send'\r\nWebSocketService.REQUEST_CALL = 'request-call'\r\nWebSocketService.CANCEL_CALL = 'cancel-call'\r\nWebSocketService.ACCEPT_CALL_REQUEST = 'accept-call-request'\r\nWebSocketService.REJECT_CALL_REQUEST = 'reject-call-request'\r\nWebSocketService.SEND_COMMUNICATION_RECORD = 'send-communication-record'\r\n","import { BaseUtils } from '../../../genb/base/utils/BaseUtils'\r\nimport { StringUtils } from '../../../genb/base/utils/StringUtils'\r\n\r\n/**\r\n * EngagedMD service utils.\r\n *\r\n * @export\r\n * @class QhUtils\r\n */\r\nexport class QhUtils {\r\n  /**\r\n   * Checks for given page.\r\n   *\r\n   * @static\r\n   * @param {string} urlName\r\n   * @returns\r\n   * @memberof QhUtils\r\n   */\r\n  static isPage(urlName) {\r\n    const meta = document.querySelector(\"meta[property='qh:view']\")\r\n    if (BaseUtils.isObjectDefined(meta)) {\r\n      return StringUtils.equals(meta.attributes.content.value, urlName)\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Return EMD property value.\r\n   *\r\n   * @static\r\n   * @param {string} propertyName\r\n   * @returns {string} property value\r\n   * @memberof QhUtils\r\n   */\r\n  static getQhProperty(propertyName) {\r\n    const meta = document.querySelector(`meta[property='qh:${propertyName}']`)\r\n    if (BaseUtils.isObjectDefined(meta)) {\r\n      return meta.attributes.content.value\r\n    }\r\n    console.warn(`QhUtils::getQhProperty No \"${propertyName}\" property found.`)\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Returns parsed quickhellou property value.\r\n   *\r\n   * @static\r\n   * @param {string} propertyName\r\n   * @returns {object} parsed property value object\r\n   * @memberof QhUtils\r\n   */\r\n  static getQhPropertyObject(propertyName) {\r\n    return JSON.parse(QhUtils.getQhProperty(propertyName))\r\n  }\r\n\r\n  /**\r\n   * Is application in test mode.\r\n   *\r\n   * @memberof QhUtils\r\n   */\r\n  static inTestMode() {\r\n    return StringUtils.equals(QhUtils.getQhProperty('developerMode'), 'test')\r\n  }\r\n\r\n  /**\r\n   * Creates key for websocket communication that contains user id. \r\n   * \r\n   * @param {string} userId \r\n   * @returns \r\n   */\r\n  static createUserId(userId) {\r\n    return `${this.appUuid}${userId}`\r\n  }\r\n\r\n  /**\r\n   * Extracts id from user key generated for websocket identification.\r\n   * \r\n   * @param {string} key \r\n   * @returns \r\n   */\r\n  static extractUserId(key) {\r\n    return key.split(this.appUuid)[1]\r\n  }\r\n\r\n  /**\r\n   * Randomly generated application UUID.\r\n   *\r\n   * @readonly\r\n   * @static\r\n   * @memberof QhUtils\r\n   */\r\n  static get appUuid() {\r\n    return 'faf8c9f7-99f7-4b9a-8ab8-c1ec416737e7'\r\n  }\r\n}\r\n","import { UIView } from '../../genb/base/controller/UIView'\r\nimport { HTMLUtils } from '../../genb/base/utils/HTMLUtils'\r\n\r\n/**\r\n * Widget embed view. The iframe that is included on a client's page.\r\n *\r\n * @export\r\n * @class WidgetEmbedView\r\n * @extends {UIView}\r\n */\r\nexport class WidgetEmbedView extends UIView {\r\n  /**\r\n   * Creates an instance of WidgetEmbedView.\r\n   *\r\n   * @param { WidgetService } service\r\n   *\r\n   * @memberof WidgetEmbedView\r\n   */\r\n  constructor(service) {\r\n    super()\r\n    this.service = service\r\n    this.isExpanded = false\r\n    this.element = document.querySelector('iframe#qh_iframe')\r\n  }\r\n\r\n  /**\r\n   * Initializes the view.\r\n   *\r\n   * @memberof WidgetEmbedView\r\n   */\r\n  async init(extDispatcher) {\r\n    \r\n    this.extDispatcher = extDispatcher\r\n\r\n    this.service.addListener('callRejected', () => {\r\n      this.onCallRejected()\r\n    })\r\n\r\n    this.service.addListener('listUsers', (a) => {\r\n      this.onListUsers(a.length > 0)\r\n    })\r\n\r\n    this.service.addListener('error', (error) => {\r\n      this.onError(error)\r\n    })\r\n\r\n    this.extDispatcher.addEventListener('expand_contact', () => {\r\n      this.element.classList.add('js-expanded', 'js-expanded--large')\r\n    }, false)\r\n\r\n    this.extDispatcher.addEventListener('expand_schedule', () => {\r\n      this.element.classList.add('js-expanded', 'js-expanded--large')\r\n    }, false)\r\n\r\n    this.extDispatcher.addEventListener('collapse', () => {\r\n      this.element.classList.remove('js-expanded', 'js-expanded--large')\r\n    }, false)\r\n  }\r\n\r\n  /**\r\n   * Handles call rejected event.\r\n   *\r\n   * @memberof WidgetEmbedView\r\n   */\r\n  onCallRejected() {\r\n    this.expandView()\r\n  }\r\n\r\n  /**\r\n   * Handles user list update.\r\n   *\r\n   * @param {boolean} anyOperatorActive is any operator active\r\n   *\r\n   * @memberof WidgetEmbedView\r\n   */\r\n  onListUsers(anyOperatorActive) {\r\n    if (anyOperatorActive) {\r\n      this.collapseView()\r\n    } else {\r\n      this.expandView()\r\n    }\r\n    this.handleDesciptionsOnOperatorListChange(anyOperatorActive)\r\n  }\r\n\r\n  /**\r\n   * Handles descriptions on operator availability change.\r\n   *\r\n   * @param {boolean} anyOperatorActive\r\n   */\r\n  handleDesciptionsOnOperatorListChange(anyOperatorActive) {\r\n    // const noOperatorsDescription = this.uiGet('.qh_widget-bottom__msg--no-operators')\r\n    // noOperatorsDescription.classList.toggle('js-active', !anyOperatorActive)\r\n    // const linesDescription = this.uiGet('.qh_widget-bottom__msg--lines')\r\n    // linesDescription.classList.toggle('js-active', anyOperatorActive)\r\n    // const leaveMessageDescription = this.uiGet('.qh_widget-bottom__msg--leave-message')\r\n  }\r\n\r\n  /**\r\n   * Handles error.\r\n   *\r\n   * @param {string} error\r\n   */\r\n  onError() {\r\n    const contentElement = this.uiGet('.qh_widget-bottom__content')\r\n    contentElement.classList.add('js-hidden')\r\n    const errorElement = this.uiGet('.widget-bottom__error')\r\n    errorElement.classList.remove('js-hidden')\r\n    this.expandView()\r\n  }\r\n\r\n  /**\r\n   * Toggles the view.\r\n   *\r\n   * @memberof WidgetEmbedView\r\n   */\r\n  toggleView() {\r\n    if (this.isExpanded) {\r\n      this.collapseView()\r\n    } else {\r\n      this.expandView()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expands the view.\r\n   *\r\n   * @memberof WidgetEmbedView\r\n   */\r\n  expandView() {\r\n    if (this.isEnabled()) {\r\n      this.isExpanded = true\r\n      this.element.classList.add('js-active')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collapses the view.\r\n   *\r\n   * @memberof WidgetEmbedView\r\n   */\r\n  collapseView() {\r\n    this.isExpanded = false\r\n    this.element.classList.remove('js-active')\r\n    this.emit('toggleBadgeTopState', false)\r\n    this.extDispatcher.dispatchEvent(\r\n      new CustomEvent('toggleBadgeTopState', {\r\n        detail: {\r\n          isExpanded: false,\r\n          source: 'widgetExtView',\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Disables bottom bar.\r\n   */\r\n  disable() {\r\n    HTMLUtils.setCookie('qh_bottom_bar', false)\r\n  }\r\n\r\n  /**\r\n   * Checks if bottom bar is enabled.\r\n   *\r\n   * @returns true if enabled\r\n   */\r\n  isEnabled() {\r\n    return HTMLUtils.getCookie('qh_bottom_bar') !== 'false'\r\n  }\r\n}\r\n","import { EventEmitter } from '../../genb/base/service/EventEmitter'\r\nimport { WebSocketService } from '../base/services/WebSocketService'\r\nimport { ApiService } from '../base/services/ApiService'\r\nimport { ApplicationSettings } from '../base/model/ApplicationSettings'\r\nimport { QhUtils } from '../base/utils/QhUtils'\r\n\r\n/**\r\n * The widget collective service.\r\n *\r\n * @extends EventEmitter\r\n */\r\nexport class WidgetService extends EventEmitter {\r\n  /**\r\n   * Creates an instance of WidgetService.\r\n   *\r\n   * @param {string} consoleAppUrl the console app URL address\r\n   * @param {string} widgetId the widget ID\r\n   */\r\n  constructor(consoleAppUrl, widgetId) {\r\n    super()\r\n    this.apiService = new ApiService(consoleAppUrl)\r\n    this.consoleAppUrl = consoleAppUrl\r\n    this.widgetId = widgetId\r\n    this.users = []\r\n  }\r\n\r\n  /**\r\n   * Initializes the service.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  async init() {\r\n    return new Promise((resolve, reject) => {\r\n      this.apiService.getSettings().then((appSettingsJson) => {\r\n        this.appSettings = new ApplicationSettings(appSettingsJson)\r\n        try {\r\n          this.apiService.getWidgetById(this.widgetId).then((widgetObject) => {\r\n            this.widget = JSON.parse(widgetObject)\r\n            this.install().then((response) => {\r\n              const responseJson = JSON.parse(response)\r\n              if (responseJson.status === 'failure') {\r\n                reject(responseJson.result)\r\n              }\r\n\r\n              this.webSocketService = new WebSocketService(\r\n                this.appSettings.webSocketServiceUrl\r\n              )\r\n\r\n              this.webSocketService.addListener('register', (e) => {\r\n                this.onUserRegister(e)\r\n              })\r\n              this.webSocketService.addListener('listUsers', (e) => {\r\n                this.onListUsers(e)\r\n              })\r\n\r\n              this.webSocketService.addListener('callAccepted', (e) => {\r\n                this.onCallAccepted(e)\r\n              })\r\n\r\n              this.webSocketService.addListener('callRejected', () => {\r\n                this.onCallRejected()\r\n              })\r\n\r\n              this.webSocketService.addListener('error', (error) => {\r\n                this.emit('error', error)\r\n              })\r\n\r\n              this.webSocketService.addListener(\r\n                'communicationRecord',\r\n                (record) => {\r\n                  this.onCommunicationRecord(record)\r\n                }\r\n              )\r\n\r\n              this.user = {\r\n                uuid: 'guest_' + String(Math.floor(Date.now() / 1000)),\r\n                roomId: this.widget.uuid,\r\n              }\r\n              this.webSocketService.registerGuest(\r\n                this.user.uuid,\r\n                this.widget.uuid\r\n              )\r\n\r\n              // attach videochat events\r\n              try {\r\n                this.videochatProxy = videochat.proxy()\r\n                this.videochatProxy.addEventListener('close', () => {\r\n                  this.onCloseVideoChat()\r\n                })\r\n                this.videochatProxy.addEventListener('remote_hangup', () => {\r\n                  this.onCloseVideoChat()\r\n                })\r\n              } catch (e) {\r\n                // console.log('Videochat is not defined.')\r\n              }\r\n\r\n              resolve()\r\n            })\r\n          })\r\n        } catch (e) {\r\n          // console.log(e)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Removes connection data in the videochat application.\r\n   */\r\n  destroyVideoChatApp() {\r\n    try {\r\n      this.videochatProxy.destroy()\r\n    } catch (e) {\r\n      console.log('e', e)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles videochat session close.\r\n   */\r\n  onCloseVideoChat() {\r\n    this.emit('videochatSessionClose')\r\n  }\r\n\r\n  /**\r\n   * Requests a call with an active admin.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  requestCall() {\r\n    const adminUuid = this.admins[0]\r\n    this.webSocketService.requestCall(\r\n      this.user.uuid,\r\n      this.user.userId,\r\n      adminUuid,\r\n      this.widget.uuid\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Cancels a call request.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  cancelCall() {\r\n    const adminUuid = this.admins[0]\r\n    this.webSocketService.cancelCall(\r\n      this.sessionRecord.id,\r\n      this.user.userId,\r\n      adminUuid,\r\n      this.widget.uuid\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Handles user register response.\r\n   *\r\n   * @param {string} response the response\r\n   * @memberof WidgetService\r\n   */\r\n  onUserRegister(response) {\r\n    if (response === 'ok') {\r\n      this.webSocketService.listAdmins(this.user.uuid, this.widget.uuid)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles user list refresh response.\r\n   *\r\n   * @param {array<string>} a\r\n   * @memberof WidgetService\r\n   */\r\n  onListUsers(a) {\r\n    this.admins = a\r\n    this.emit('listUsers', a)\r\n\r\n    if (a.length) {\r\n      const adminId = QhUtils.extractUserId(a[0])\r\n      this.getUser(adminId).then((user) => {\r\n        this.emit('admin', user)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles call accept notification.\r\n   *\r\n   * @param {string} uuid the UUID string\r\n   * @memberof WidgetService\r\n   */\r\n  async onCallAccepted(uuid) {\r\n    this.emit('callAccepted', uuid)\r\n  }\r\n\r\n  /**\r\n   * Handles call reject notification.\r\n   *\r\n   * @memberof WidgetService\r\n   */\r\n  onCallRejected() {\r\n    this.emit('callRejected')\r\n    // this.destroyVideoChatApp()\r\n  }\r\n\r\n  /**\r\n   * Handles communication record.\r\n   *\r\n   * @param {object} record the communication record\r\n   */\r\n  onCommunicationRecord(record) {\r\n    this.sessionRecord = record\r\n  }\r\n\r\n  /**\r\n   * Sends contact form.\r\n   *\r\n   * @param {array<object>} fieldSet the field set\r\n   */\r\n  sendScheduleForm(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/widget_schedule/${\r\n      this.widgetId\r\n    }/${encodeURIComponent(window.location.hostname.toLowerCase())}/${\r\n      this.widget.uuid\r\n    }`\r\n    return this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Sends start video chat form.\r\n   *\r\n   * @param {object} fieldSet\r\n   * @returns the response\r\n   */\r\n  sendStartVideoChatForm(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/widget_active_operator/${\r\n      this.widgetId\r\n    }/${encodeURIComponent(window.location.hostname.toLowerCase())}/${\r\n      this.widget.uuid\r\n    }`\r\n    return this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Installs the widget.\r\n   *\r\n   * @returns true if installed correctly.\r\n   */\r\n  async install() {\r\n    const url = `${this.consoleAppUrl}/dashboard/install/${\r\n      this.widgetId\r\n    }/${encodeURIComponent(window.location.hostname.toLowerCase())}/${\r\n      this.widget.uuid\r\n    }`\r\n    return this.apiService.postAsXMLHttpRequest({}, url)\r\n  }\r\n\r\n  /**\r\n   * Gets user by user ID.\r\n   *\r\n   * @param {*} userId\r\n   * @returns\r\n   */\r\n  async getUser(userId) {\r\n    let userJson = await this.apiService.getUserById(userId)\r\n    return JSON.parse(userJson)\r\n  }\r\n\r\n  /**\r\n   * Sets communication session rate.\r\n   *\r\n   * @param {number} rate\r\n   * @returns\r\n   */\r\n  async rateComSession(rate) {\r\n    let resultJson = await this.apiService.rateComSession(\r\n      this.sessionRecord.id,\r\n      rate\r\n    )\r\n    return JSON.parse(resultJson)\r\n  }\r\n\r\n  /**\r\n   * Sets local user ID.\r\n   *\r\n   * @param {number} userId\r\n   */\r\n  setUserId(userId) {\r\n    this.user.userId = userId\r\n  }\r\n\r\n  /**\r\n   * Gets an active operator init form template.\r\n   *\r\n   * @returns the template string\r\n   */\r\n  async getActiveOperatorInitForm() {\r\n    return await this.apiService.getAsXMLHttpRequest(\r\n      `${this.consoleAppUrl}/dashboard/active_operator_init_form`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets an inactive operator init form template.\r\n   *\r\n   * @returns the template string\r\n   */\r\n  async getInactiveOperatorInitForm() {\r\n    return await this.apiService.getAsXMLHttpRequest(\r\n      `${this.consoleAppUrl}/dashboard/inactive_operator_init_form`\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets scheduler calendar.\r\n   *\r\n   * @returns the scheduler calendar\r\n   */\r\n  async getSchedulerCalendar(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/widget_calendar_view/${this.widgetId}`\r\n    return await this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Gets widget contact form.\r\n   *\r\n   * @param {array<object>} fieldSet the field set\r\n   *\r\n   * @returns the contact form view\r\n   */\r\n  async getContactForm(fieldSet) {\r\n    const url = `${this.consoleAppUrl}/dashboard/add_widget_contact_form_view/${this.widgetId}`\r\n    return await this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n  }\r\n\r\n  /**\r\n   * Gets widget contact form.\r\n   *\r\n   * @param {array<object>} fieldSet the field set\r\n   *\r\n   * @returns the contact form view\r\n   */\r\n    async sendContactForm(fieldSet) {\r\n      const url = `${this.consoleAppUrl}/dashboard/edit_widget_contact_form_view/${this.widgetId}`\r\n      return await this.apiService.postAsXMLHttpRequest(fieldSet, url)\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { WidgetService } from './com/quickhellou/widget/WidgetService'\r\nimport { WidgetEmbedView } from './com/quickhellou/widget/WidgetEmbedView'\r\n\r\n// Initialize event target that will proxy all iframe event handlers\r\nwindow.document.QHDispatcher = new EventTarget()\r\n\r\ndocument.addEventListener(\"readystatechange\", () => {\r\n  const consoleAppUrl = document.querySelector('iframe#qh_iframe').dataset.url\r\n  const widgetId = document.querySelector('iframe#qh_iframe').dataset.id\r\n  // service\r\n  const widgetService = new WidgetService(consoleAppUrl, widgetId)\r\n  widgetService\r\n    .init()\r\n    .then(() => {\r\n      const embedView = new WidgetEmbedView(widgetService)\r\n      embedView.init(window.document.QHDispatcher)\r\n    })\r\n    .catch((reason) => {\r\n      console.log('QuickHellou failure: ', reason)\r\n    })\r\n})"],"names":["_defineProperty","e","r","t","Object","defineProperty","value","enumerable","configurable","writable","toPrimitive","Symbol","i","call","TypeError","String","Number","toPropertyKey","_typeof","o","iterator","constructor","prototype","assign","target","arguments","length","source","key","api","init","converter","defaultAttributes","set","name","attributes","document","expires","Date","now","toUTCString","encodeURIComponent","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","split","cookie","write","create","get","cookies","jar","parts","slice","join","found","read","remove","withAttributes","this","withConverter","freeze","path","ObservableController","observable","EventEmitter","addListener","label","callback","removeListener","emit","_len","args","Array","_key","UIView","uiGet","cssSelector","HTMLUtils","uiExists","exists","uiArray","array","removeListeners","element","newElement","cloneNode","parentNode","replaceChild","removeElementListeners","removeListListeners","forEach","listeners","Map","has","push","index","reduce","listener","isFunction","splice","obj","FormService","getAsXMLHttpRequest","serviceName","sendAsXMLHttpRequest","postAsXMLHttpRequest","fieldSet","method","url","formData","FormData","entries","append","Promise","resolve","reject","request","XMLHttpRequest","open","addEventListener","includes","status","responseText","csrftoken","Cookie","setRequestHeader","send","sendAsXMLHttpFormEncodedRequest","data","field","sendAsForm","action","html","body","insertAdjacentHTML","getElementById","submit","BaseUtils","isObjectDefined","s","isPage","urlName","meta","querySelector","content","hostname","window","location","log","message","console","selector","warn","getForm","getValueByName","getInputByName","getInputByClassName","getSelectByName","getSelectByClassName","getInputValueByName","getCheckboxValueByName","checked","setInputValueByName","inputElement","getSelectValueByName","getSelectTextByName","selectedOptions","text","setSelectValueByName","selectElement","getInputValueByClassName","getSelectValueByClassName","list","elementList","querySelectorAll","from","firstToHTMLElement","elements","activate","activateElement","classList","add","deactivate","deactivateElement","copyToClipboard","clipboardData","setData","preventDefault","execCommand","removeEventListener","decodeHtml","txt","createElement","innerHTML","removeAllEventListeners","className","removeAllEventListenersFromElement","setCookie","days","undefined","getCookie","v","deleteCookie","bindReCaptchaFormSubmit","form","submitButton","handleSubmit","acquireReCaptchaToken","dataset","sitekey","then","catch","alert","tagName","siteKey","recaptchaTokenInput","grecaptcha","execute","token","reason","StringUtils","isDefined","isEmpty","isNotEmpty","equals","string1","string2","getUID","getTime","toString","isEmailValid","email","test","isIpAddressValid","ipAddress","isUrlValid","isNumber","isCurrency","extractFormBuilderFormFieldType","extractFileNameFromPath","capitalize","toUpperCase","toBoolean","stripFromQuotes","expression","matches","exec","EMPTY","hashCode","prevHash","currVal","charCodeAt","ApplicationSettings","objString","objs","JSON","parse","videoAppUrl","video_app_url","consoleAppUrl","console_app_url","webSocketServiceUrl","ws_service_url","adminEmailAddress","admin_email_address","getValue","propertyName","filter","property","ComSessionStatus","STATUS_PENDING","STATUS_ENQUEUED","STATUS_MISSED","STATUS_CANCELLED","STATUS_REJECTED","STATUS_ACCEPTED","STATUS_COMPLETED","UserType","ADMIN","GUEST","ApiService","baseUrl","super","getCurrentUser","getJson","getSettings","getUserById","userId","getWidgetById","widgetId","getCommunicationRecord","communicationId","actionName","createCall","userWSId","widgetUuid","caller_name","caller_id","widget_uuid","rateComSession","id","rate","cancelCall","getUuid","str","setComSessionAsAccepted","setComSessionStatus","setComSessionAsRejected","setComSessionAsCancelled","setComSessionAsCompleted","setComSessionAsEnqueued","getPendingSessions","WebSocketService","serviceUrl","isOpen","openWebSocketConnection","websocket","WebSocket","onopen","readyState","OPEN","attachWebSocketEventHandlers","onerror","event","currentTarget","onmessage","handleMessageResponse","onclose","response","responseJson","error","msg","messageJson","type","handleNamedResponse","REQUEST_CALL","user","widget","CANCEL_CALL","recordId","ACCEPT_CALL_REQUEST","uuid","REJECT_CALL_REQUEST","SEND_COMMUNICATION_RECORD","record","registerList","userType","records","register","registerOperatorsList","widgets","deregisterList","deregister","roomId","sendWebSocketMessage","cmd","clientid","clienttype","roomid","registerOperator","registerGuest","SEND","client_board_id","sendToOther","otherUserId","otherid","listClients","listGuests","listAdmins","requestCall","adminId","stringify","acceptCallRequest","calleeId","callerUserId","comSessionId","rejectCallRequest","passCommunicationRecord","otherUserWSId","persistant","roomtype","QhUtils","getQhProperty","getQhPropertyObject","inTestMode","createUserId","appUuid","extractUserId","WidgetEmbedView","service","isExpanded","extDispatcher","onCallRejected","a","onListUsers","onError","expandView","anyOperatorActive","collapseView","handleDesciptionsOnOperatorListChange","toggleView","isEnabled","dispatchEvent","CustomEvent","detail","disable","WidgetService","apiService","users","appSettingsJson","appSettings","widgetObject","install","result","webSocketService","onUserRegister","onCallAccepted","onCommunicationRecord","Math","floor","videochatProxy","videochat","proxy","onCloseVideoChat","destroyVideoChatApp","destroy","adminUuid","admins","sessionRecord","getUser","sendScheduleForm","toLowerCase","sendStartVideoChatForm","userJson","resultJson","setUserId","getActiveOperatorInitForm","getInactiveOperatorInitForm","getSchedulerCalendar","getContactForm","sendContactForm","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","prop","hasOwnProperty","toStringTag","QHDispatcher","EventTarget","widgetService"],"sourceRoot":""}