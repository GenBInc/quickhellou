version: "3"
   
services:

  console_pyserver:
    container_name: console_pyserver
    build:
      context: ./console/pyserver
      args:
        DJANGO_ALLOWED_HOSTS: '*'
        DJANGO_SECRET_KEY: '*'
    command: bash -c "while !</dev/tcp/${POSTGRES_HOST}/${POSTGRES_PORT}; do sleep 1; done; python manage.py migrate && gunicorn --certfile=${CERT_FILE} --keyfile=${KEY_FILE} --reload console.wsgi --bind 0.0.0.0:${HELPDESK_APP_PORT}"
    ports:
      - "${HELPDESK_APP_PORT}:${HELPDESK_APP_PORT}"
    volumes:
      - "./console/pyserver:/pyserver"
    networks:
      console_network:
        ipv4_address: 192.180.0.20

    environment:
      - HELPDESK_APP_PORT=${HELPDESK_APP_PORT}
      - HELPDESK_APP_HOST=${HELPDESK_APP_HOST}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}

      - CERT_FILE=${CERT_FILE}
      - CERT_CHAIN_FILE=${CERT_CHAIN_FILE}      
      - KEY_FILE=${KEY_FILE}

      - SUPPORT_EMAIL=${SUPPORT_EMAIL}      
      - SECRET_KEY=${SECRET_KEY}

      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}

    depends_on:
      - console_db
      - goserver

  console_db:
    container_name: console_db
    image: postgres:alpine
    volumes: 
      - ./temp/db:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}      
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      console_network:
        ipv4_address: 192.180.0.21     

networks:
  console_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.180.0.0/24